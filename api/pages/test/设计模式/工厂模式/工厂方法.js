{"title":"","uid":"1cd19fc71517798e2fa5b7457d1fb06e","text":"// 工厂方法 function Factory(career) { if (this instanceof Factory) { return new this[career](); } else { return new Factory(career); } } // 工厂方...","date":"2022-09-16T13:54:56.511Z","updated":"2022-09-16T13:54:56.511Z","comments":true,"path":"api/pages/test/设计模式/工厂模式/工厂方法.js","covers":null,"excerpt":"","content":"// 工厂方法\nfunction Factory(career) {\n  if (this instanceof Factory) {\n    return new this[career]();\n  } else {\n    return new Factory(career);\n  }\n}\n\n\n// 工厂方法函数的原型中, 设置所有对象的构造函数\nFactory.prototype = {\n  coder: function () {\n    this.careerName = \"程序员\";\n    this.work = [\"写代码\", \"修Bug\"];\n  },\n  hr: function () {\n    this.careerName = \"HR\";\n    this.work = [\"招聘\", \"员工信息管理\"];\n  },\n  driver: function () {\n    this.careerName = \"司机\";\n    this.work = [\"开车\"];\n  },\n  boss: function () {\n    this.careerName = \"老板\";\n    this.work = [\"喝茶\", \"开会\", \"审批文件\"];\n  },\n};\n\n\n\nlet coder = new Factory(\"coder\");\nconsole.log(coder);\n\nlet hr = new Factory(\"hr\");\nconsole.log(hr);\n","count_time":{"symbolsCount":656,"symbolsTime":"1 mins."},"toc":""}