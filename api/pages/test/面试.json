{"title":"","uid":"1cd19fc71517798e2fa5b7457d1fb06e","text":"基础面试 如何实现 useEffect typescipt extends： 集成、条件判断 interface 与 type 区别 1.type 可以用来声明类型别名, interface 不行2.type 可以使用计算属性， interface 不行3.interface 可...","date":"2022-09-15T14:26:11.124Z","updated":"2022-09-15T14:26:11.124Z","comments":true,"path":"api/pages/test/面试.json","covers":null,"excerpt":"","content":"<h2 id=\"基础面试\"><a href=\"#基础面试\" class=\"headerlink\" title=\"基础面试\"></a>基础面试</h2><ol>\n<li>如何实现 useEffect</li>\n<li>typescipt extends： 集成、条件判断</li>\n<li>interface 与 type 区别</li>\n</ol>\n<!-- https://www.cnblogs.com/jiawei-Wang/p/14655751.html -->\n\n<p>1.type 可以用来声明类型别名, interface 不行<br>2.type 可以使用计算属性， interface 不行<br>3.interface 可以合并类型，type 不行</p>\n<p>前端面试题：</p>\n<p><a href=\"https://www.pipipi.net/questions/front-end-interview-questions\">https://www.pipipi.net/questions/front-end-interview-questions</a></p>\n<ol start=\"4\">\n<li>JS中的继承</li>\n</ol>\n<!-- https://www.cnblogs.com/jiawei-Wang/p/14697502.html -->\n\n<ol start=\"3\">\n<li>react 为什么使用 hooks</li>\n</ol>\n<ul>\n<li><p>Hook 是 React 16.8 的新增特性。它可以让你在不编写 class 的情况下使用 state 以及其他的 React 特性。</p>\n</li>\n<li><p>Hook 解决了我们五年来编写和维护成千上万的组件时遇到的各种各样看起来不相关的问题</p>\n</li>\n</ul>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">1. 在组件之间复用状态逻辑很难\n\n React 没有提供将可复用性行为“附加”到组件的途径（例如，把组件连接到 store）， 用过React应该都熟悉一些解决此类问题的方案，比如 render props 和 高阶组件。但是这类方案需要重新组织你的组件结构，这可能会很麻烦，使你的代码难以理解。如果你在 React DevTools 中观察过 React 应用，你会发现由 providers，consumers，高阶组件，render props 等其他抽象层组成的组件会形成“嵌套地狱”\n\n Hook 使你在无需修改组件结构的情况下复用状态逻辑\n\n2. 复杂组件变得难以理解\n\n\n我们经常维护一些组件，组件起初很简单，但是逐渐会被状态逻辑和副作用充斥。每个生命周期常常包含一些不相关的逻辑。例如，组件常常在 componentDidMount 和 componentDidUpdate 中获取数据。但是，同一个 componentDidMount 中可能也包含很多其它的逻辑，如设置事件监听，而之后需在 componentWillUnmount 中清除。相互关联且需要对照修改的代码被进行了拆分，而完全不相关的代码却在同一个方法中组合在一起。如此很容易产生 bug，并且导致逻辑不一致。\n\n在多数情况下，不可能将组件拆分为更小的粒度，因为状态逻辑无处不在。这也给测试带来了一定挑战。同时，这也是很多人将 React 与状态管理库结合使用的原因之一。但是，这往往会引入了很多抽象概念，需要你在不同的文件之间来回切换，使得复用变得更加困难。\n\n为了解决这个问题，Hook 将组件中相互关联的部分拆分成更小的函数（比如设置订阅或请求数据），而并非强制按照生命周期划分。你还可以使用 reducer 来管理组件的内部状态，使其更加可预测。\n\n3. 难以理解的 class\n\nclass 是学习 React 的一大屏障。你必须去理解 JavaScript 中 this 的工作方式，这与其他语言存在巨大差异。还不能忘记绑定事件处理器。\n\n如果不使用 ES2022 public class fields，这些代码非常冗余。大家可以很好地理解 props，state 和自顶向下的数据流，但对 class 却一筹莫展\n\n4. 与时俱进\n\nreact官方发现使用 class 组件会无意中鼓励开发者使用一些让优化措施无效的方案。class 也给目前的工具带来了一些问题。例如，class 不能很好的压缩，并且会使热重载出现不稳定的情况。因此，我们想提供一个使代码更易于优化的 API。\n\n\nHook 使你在非 class 的情况下可以使用更多的 React 特性。 从概念上讲，React 组件一直更像是函数。而 Hook 则拥抱了函数，同时也没有牺牲 React 的精神原则。Hook 提供了问题的解决方案，无需学习复杂的函数式或响应式编程技术。\n\n</code></pre>\n\n<ol start=\"6\">\n<li>useEffect 调用时机： useEffect 会在每次渲染后都执行吗？ 是的，默认情况下，它在第一次渲染之后和每次更新之后都会执行</li>\n</ol>\n<h2 id=\"项目中遇到的问题\"><a href=\"#项目中遇到的问题\" class=\"headerlink\" title=\"项目中遇到的问题\"></a>项目中遇到的问题</h2><h3 id=\"wiki，快速学习新技术，并应用于开发\"><a href=\"#wiki，快速学习新技术，并应用于开发\" class=\"headerlink\" title=\"wiki，快速学习新技术，并应用于开发\"></a>wiki，快速学习新技术，并应用于开发</h3><p>技术调研、slate、文档、文件上传、上传方案、因为 slate 是 beta 版，问题比较多，我们 clone 了项目到公司内网进行二次开发，开发了出 slate-wiki 和 slate-wiki-pro,</p>\n<p>我们封装了（n）多个插件来处理业务</p>\n<h3 id=\"框架相关的\"><a href=\"#框架相关的\" class=\"headerlink\" title=\"框架相关的\"></a>框架相关的</h3><p>react 相关的</p>\n<ul>\n<li>e.persist() 去除事件池 React 在旧浏览器中重用了不同事件的事件对象，以提高性能，并将所有事件字段在它们之前设置为 null。在 React 16 及更早版本中，使用者必须调用 e.persist() 才能正确的使用该事件，或者正确读取需要的属性。</li>\n</ul>\n<p>从 v17 开始， e.persist() 将不再生效，因为 SyntheticEvent 不再放入事件池中</p>\n<ul>\n<li>useImperativeHandle</li>\n<li>forward</li>\n</ul>\n<h3 id=\"业务相关的\"><a href=\"#业务相关的\" class=\"headerlink\" title=\"业务相关的\"></a>业务相关的</h3><p>react-native 相关的</p>\n<ul>\n<li>webview</li>\n<li>对外接口加密</li>\n</ul>\n<h3 id=\"文件预览相关的\"><a href=\"#文件预览相关的\" class=\"headerlink\" title=\"文件预览相关的\"></a>文件预览相关的</h3><ul>\n<li><p>pdf 在浏览器中直接下载，无法预览 （如果是浏览器，转化成 blob，但是在企业微信中，问题就大了，必须是浏览器可预览的直接预览，不能转化成 blob 形式，企业微信有限制）</p>\n</li>\n<li><p>文件重命名问题，在浏览器正常，在企业微信中乱码，原因是后端对 attanchName 进行编码</p>\n</li>\n</ul>\n<h3 id=\"企业微信授权\"><a href=\"#企业微信授权\" class=\"headerlink\" title=\"企业微信授权\"></a>企业微信授权</h3><ul>\n<li>企业微信授权流程</li>\n<li>回调域名只有一个</li>\n<li>多个项目使用同一个企业微信应用</li>\n</ul>\n<h3 id=\"工具问题\"><a href=\"#工具问题\" class=\"headerlink\" title=\"工具问题\"></a>工具问题</h3><p>vscode 代码片段 插件</p>\n<p>平时开发，总会遇到几乎相同的代码要多次使用的情况，这种情况，一般程序猿会找到响应的代码，复制粘贴到要使用的位置，每次遇到都会手动的进行复制、粘贴</p>\n<p>vscode mock 插件</p>\n<p>平时开发，总会遇到几乎相同的代码要多次使用的情况，这种情况，一般程序猿会找到响应的代码，复制粘贴到要使用的位置，每次遇到都会手动的进行复制、粘贴</p>\n<p>redux 中间件</p>\n<p>我在使用 redux 过程中遇到问题，action, reducer 模版代码太多了，累死我了，尤其在业务复杂度高的情况下，使用 redux 进行开发，开发成本急剧增加，而这种无意义的研发成本，几百行代码，可以实现一劳永逸， 不必细说（窃取方案的嫌疑）</p>\n<h3 id=\"未来计划\"><a href=\"#未来计划\" class=\"headerlink\" title=\"未来计划\"></a>未来计划</h3><p>技术架构</p>\n<ol>\n<li>技术积累 工作中（前后端、运维），下班后（除了本职工做外，了解其他不同研发工作）</li>\n<li>平时沟通，平时工作如何沟通。提出、分析、解决。</li>\n<li>开会哪些</li>\n<li>应急方案</li>\n</ol>\n","count_time":{"symbolsCount":"2.7k","symbolsTime":"2 mins."},"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E7%A1%80%E9%9D%A2%E8%AF%95\"><span class=\"toc-text\">基础面试</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A1%B9%E7%9B%AE%E4%B8%AD%E9%81%87%E5%88%B0%E7%9A%84%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">项目中遇到的问题</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#wiki%EF%BC%8C%E5%BF%AB%E9%80%9F%E5%AD%A6%E4%B9%A0%E6%96%B0%E6%8A%80%E6%9C%AF%EF%BC%8C%E5%B9%B6%E5%BA%94%E7%94%A8%E4%BA%8E%E5%BC%80%E5%8F%91\"><span class=\"toc-text\">wiki，快速学习新技术，并应用于开发</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A1%86%E6%9E%B6%E7%9B%B8%E5%85%B3%E7%9A%84\"><span class=\"toc-text\">框架相关的</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%9A%E5%8A%A1%E7%9B%B8%E5%85%B3%E7%9A%84\"><span class=\"toc-text\">业务相关的</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%87%E4%BB%B6%E9%A2%84%E8%A7%88%E7%9B%B8%E5%85%B3%E7%9A%84\"><span class=\"toc-text\">文件预览相关的</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E6%8E%88%E6%9D%83\"><span class=\"toc-text\">企业微信授权</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B7%A5%E5%85%B7%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">工具问题</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9C%AA%E6%9D%A5%E8%AE%A1%E5%88%92\"><span class=\"toc-text\">未来计划</span></a></li></ol></li></ol>"}