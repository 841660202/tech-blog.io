{"title":"","uid":"1cd19fc71517798e2fa5b7457d1fb06e","text":"function deepClone(obj) { let result; if (typeof obj == \"object\") { result = isArray(obj) ? [] : {}; // 空对象接收 for (let i in obj) { result[i]...","date":"2022-09-15T14:26:11.113Z","updated":"2022-09-15T14:26:11.113Z","comments":true,"path":"api/pages/test/deepClone.js","covers":null,"excerpt":"","content":"function deepClone(obj) {\n  let result;\n  if (typeof obj == \"object\") {\n    result = isArray(obj) ? [] : {}; // 空对象接收\n    for (let i in obj) {\n      result[i] =\n        isObject(obj[i]) || isArray(obj[i]) ? deepClone(obj[i]) : obj[i];\n    }\n  } else {\n    result = obj;\n  }\n  return result;\n}\n\nfunction isObject(obj) {\n  return Object.prototype.toString.call(obj) == \"[object Object]\";\n}\n\nfunction isArray(obj) {\n  return Object.prototype.toString.call(obj) == \"[object Array]\";\n}\n\nvar a = { a: 1, b: { bb: 1 }, c: null };\n\nconsole.log(deepClone(a));\n","count_time":{"symbolsCount":551,"symbolsTime":"1 mins."},"toc":""}