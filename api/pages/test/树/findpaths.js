{"title":"","uid":"1cd19fc71517798e2fa5b7457d1fb06e","text":"const data = [ { name: { key: null, ref: null, props: { children: \"home\", }, _owner: null, _store: {}, }, path: \"/\", redirect: \"/tconfig/pro...","date":"2022-09-26T12:16:19.529Z","updated":"2022-09-26T12:16:19.529Z","comments":true,"path":"api/pages/test/树/findpaths.js","covers":null,"excerpt":"","content":"const data = [\n  {\n    name: {\n      key: null,\n      ref: null,\n      props: {\n        children: \"home\",\n      },\n      _owner: null,\n      _store: {},\n    },\n    path: \"/\",\n    redirect: \"/tconfig/products\",\n    component: {\n      type: {\n        _payload: {\n          _status: -1,\n        },\n      },\n      key: null,\n      ref: null,\n      props: {},\n      _owner: null,\n      _store: {},\n    },\n  },\n  {\n    name: \"指标配置\",\n    path: \"/tconfig\",\n    redirect: \"/tconfig/products\",\n    routes: [\n      {\n        name: \"产品列表\",\n        path: \"/tconfig/products\",\n        component: {\n          type: {\n            _payload: {\n              _status: 1,\n              _result: {},\n            },\n          },\n          key: null,\n          ref: null,\n          props: {},\n          _owner: null,\n          _store: {},\n        },\n        icon: {\n          type: {},\n          key: null,\n          ref: null,\n          props: {},\n          _owner: null,\n          _store: {},\n        },\n      },\n      {\n        name: \"设备列表\",\n        path: \"/tconfig/devices\",\n        component: {\n          type: {\n            _payload: {\n              _status: -1,\n            },\n          },\n          key: null,\n          ref: null,\n          props: {},\n          _owner: null,\n          _store: {},\n        },\n        icon: {\n          type: {},\n          key: null,\n          ref: null,\n          props: {},\n          _owner: null,\n          _store: {},\n        },\n      },\n      {\n        name: \"品类能耗\",\n        path: \"/tconfig/category\",\n        component: {\n          type: {\n            _payload: {\n              _status: -1,\n            },\n          },\n          key: null,\n          ref: null,\n          props: {},\n          _owner: null,\n          _store: {},\n        },\n        icon: {\n          type: {},\n          key: null,\n          ref: null,\n          props: {},\n          _owner: null,\n          _store: {},\n        },\n      },\n    ],\n  },\n  {\n    name: \"模型配置\",\n    path: \"/mconfig\",\n    redirect: \"/mconfig/list\",\n    routes: [\n      {\n        name: \"配置\",\n        path: \"/mconfig/list\",\n        component: {\n          type: {\n            _payload: {\n              _status: -1,\n            },\n          },\n          key: null,\n          ref: null,\n          props: {},\n          _owner: null,\n          _store: {},\n        },\n        icon: {\n          type: {},\n          key: null,\n          ref: null,\n          props: {},\n          _owner: null,\n          _store: {},\n        },\n      },\n    ],\n  },\n  {\n    name: \"指标监控\",\n    path: \"/tmonitor\",\n    redirect: \"/tmonitor/overview\",\n    routes: [\n      {\n        name: \"总览大盘\",\n        path: \"/tmonitor/overview\",\n        component: {\n          type: {\n            _payload: {\n              _status: -1,\n            },\n          },\n          key: null,\n          ref: null,\n          props: {},\n          _owner: null,\n          _store: {},\n        },\n        icon: {\n          type: {},\n          key: null,\n          ref: null,\n          props: {},\n          _owner: null,\n          _store: {},\n        },\n      },\n      {\n        name: \"产品数据\",\n        path: \"/tmonitor/product\",\n        component: {\n          type: {\n            _payload: {\n              _status: -1,\n            },\n          },\n          key: null,\n          ref: null,\n          props: {},\n          _owner: null,\n          _store: {},\n        },\n        icon: {\n          type: {},\n          key: null,\n          ref: null,\n          props: {},\n          _owner: null,\n          _store: {},\n        },\n      },\n      {\n        name: \"设备数据\",\n        path: \"/tmonitor/device\",\n        component: {\n          type: {\n            _payload: {\n              _status: -1,\n            },\n          },\n          key: null,\n          ref: null,\n          props: {},\n          _owner: null,\n          _store: {},\n        },\n        icon: {\n          type: {},\n          key: null,\n          ref: null,\n          props: {},\n          _owner: null,\n          _store: {},\n        },\n      },\n      {\n        name: \"节能减排\",\n        path: \"/tmonitor/cere\",\n        component: {\n          type: {\n            _payload: {\n              _status: -1,\n            },\n          },\n          key: null,\n          ref: null,\n          props: {},\n          _owner: null,\n          _store: {},\n        },\n        icon: {\n          type: {},\n          key: null,\n          ref: null,\n          props: {},\n          _owner: null,\n          _store: {},\n        },\n      },\n    ],\n  },\n  {\n    path: \"/switchlogin\",\n    pageName: \"login\",\n    name: {\n      key: null,\n      ref: null,\n      props: {\n        children: \"swicth-account\",\n      },\n      _owner: null,\n      _store: {},\n    },\n    component: {\n      type: {\n        _payload: {\n          _status: -1,\n        },\n      },\n      key: null,\n      ref: null,\n      props: {},\n      _owner: null,\n      _store: {},\n    },\n    isShow: false,\n  },\n  {\n    path: \"/404\",\n    pageName: \"error\",\n    name: {\n      key: null,\n      ref: null,\n      props: {\n        children: \"err-404\",\n      },\n      _owner: null,\n      _store: {},\n    },\n    component: {\n      type: {\n        _payload: {\n          _status: -1,\n        },\n      },\n      key: null,\n      ref: null,\n      props: {},\n      _owner: null,\n      _store: {},\n    },\n    isShow: false,\n  },\n  {\n    path: \"/403\",\n    pageName: \"error\",\n    name: {\n      key: null,\n      ref: null,\n      props: {\n        children: \"err-403\",\n      },\n      _owner: null,\n      _store: {},\n    },\n    component: {\n      type: {\n        _payload: {\n          _status: -1,\n        },\n      },\n      key: null,\n      ref: null,\n      props: {},\n      _owner: null,\n      _store: {},\n    },\n    isShow: false,\n  },\n  {\n    path: \"/500\",\n    pageName: \"error\",\n    name: {\n      key: null,\n      ref: null,\n      props: {\n        children: \"err-500\",\n      },\n      _owner: null,\n      _store: {},\n    },\n    component: {\n      type: {\n        _payload: {\n          _status: -1,\n        },\n      },\n      key: null,\n      ref: null,\n      props: {},\n      _owner: null,\n      _store: {},\n    },\n    isShow: false,\n  },\n];\n\n/**\n *\n * @param {数组：树data} tree\n * @param {目标值} targetValue\n * @param {配置信息} options\n * @returns\n */\nfunction findNodePaths(tree, targetValue, options) {\n  const defaultOptions = {\n    find_field: \"id\", // 与 targetValue匹配的字段\n    path_field: \"id\", // 生成路径的字段\n    separator: \",\", // 路径字段分隔符\n    type: \"path\", // path / item\n    children: \"children\",\n  };\n  console.log(\"options\", options);\n  options = {\n    ...defaultOptions,\n    ...options,\n  };\n  // 首先我们先定义个数组，用来保存路径节点id\n  let nodePathArray = [];\n\n  // (tree为目标树，targetId为目标节点id)\n  function getNodeRoute(tree, targetValue, options) {\n    for (let index = 0; index < tree.length; index++) {\n      if (tree[index][options.children]) {\n        let endRecursiveLoop = getNodeRoute(\n          tree[index][options.children],\n          targetValue,\n          options\n        );\n        console.log(\"endRecursiveLoop\", endRecursiveLoop);\n        if (endRecursiveLoop) {\n          if (options.type === \"path\") {\n            nodePathArray.push(tree[index][options.path_field]);\n          } else {\n            nodePathArray.push(tree[index]);\n          }\n          return true;\n        }\n      }\n      if (tree[index][options.find_field] === targetValue) {\n        if (options.type === \"path\") {\n          nodePathArray.push(tree[index][options.path_field]);\n        } else {\n          nodePathArray.push(tree[index]);\n        }\n        return true;\n      }\n    }\n  }\n  // 转化成数组\n  let _tree = [];\n  if (Array.isArray(tree)) {\n    _tree = tree;\n  } else {\n    _tree = [tree];\n  }\n\n  getNodeRoute(_tree, targetValue, options);\n  console.log(\"nodePathArray\", nodePathArray);\n\n  if (options.type === \"path\") {\n    return nodePathArray.reverse().join(options.separator);\n  } else {\n    return nodePathArray.reverse();\n  }\n}\n\nconst paths = findNodePaths(data, \"/tmonitor/device\", {\n  find_field: \"path\", // 与 targetValue匹配的字段\n  path_field: \"name\", // 生成路径的字段\n  separator: \",\", // 路径字段分隔符\n  type: \"path\", // path / item\n  children: \"routes\",\n}); //查找id为112的节点路径\nconsole.log(paths);\n","count_time":{"symbolsCount":"8.1k","symbolsTime":"7 mins."},"toc":""}