{"name":"面试","slug":"面试","count":8,"postlist":[{"title":"面试题汇总","uid":"99460a2013287be2d51642da6dd169f8","slug":"2022-05-08interview","date":"2022-05-08T08:27:00.000Z","updated":"2022-06-25T09:34:46.420Z","comments":true,"path":"api/articles/2022-05-08interview.json","keywords":null,"cover":null,"text":"值得收藏的链接 码上通天 面试完 50 个人后我写下这篇总结 if 我是前端团队 Leader，怎么制定前端协作规范? 做了一份前端面试复习计划，保熟～ ","link":"","photos":[],"count_time":{"symbolsCount":78,"symbolsTime":"1 mins."},"categories":[{"name":"面试","slug":"面试","count":8,"path":"api/categories/面试.json"}],"tags":[{"name":"面试","slug":"面试","count":5,"path":"api/tags/面试.json"}],"author":{"name":"陈海龙","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"需要就学呗，多大点事😂","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}},{"title":"js变量和作用域","uid":"8c2ce163d41ac846e552a207bb84d5a9","slug":"2022-05-08varible","date":"2022-05-08T02:00:00.000Z","updated":"2022-05-26T14:12:56.674Z","comments":true,"path":"api/articles/2022-05-08varible.json","keywords":null,"cover":null,"text":"变量var let const区别 变量提升：var 存在变量提升，let、const没有（let、const存在暂时性死区） 作用域的限制：var不受作用域的限制，而let、const受当前作用域的限制 重复声明：var可以重复声明，let、const不可以 const是常量，...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"面试","slug":"面试","count":8,"path":"api/categories/面试.json"}],"tags":[{"name":"面试","slug":"面试","count":5,"path":"api/tags/面试.json"}],"author":{"name":"陈海龙","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"需要就学呗，多大点事😂","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}},{"title":"跨域问题","uid":"1827bdebccdb6131916a11069d50f729","slug":"2022-05-09cors","date":"2022-05-09T13:30:47.000Z","updated":"2022-05-26T14:12:56.675Z","comments":true,"path":"api/articles/2022-05-09cors.json","keywords":null,"cover":"http://t-blog-images.aijs.top/img/20220509181853.webp","text":"背景浏览器安全策略限制跨域访问 内容安全策略是一个额外的安全层，用于检测并削弱某些特定类型的攻击，包括跨站脚本 (XSS) 和数据注入攻击等。无论是数据盗取、网站内容污染还是散发恶意软件，这些攻击都是主要的手段。 使用方式为使 CSP 可用, 你需要配置你的网络服务器返回 Con...","link":"","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"面试","slug":"面试","count":8,"path":"api/categories/面试.json"}],"tags":[{"name":"面试","slug":"面试","count":5,"path":"api/tags/面试.json"}],"author":{"name":"陈海龙","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"需要就学呗，多大点事😂","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}},{"title":"编程范式-函数式编程简单了解","uid":"fa552d7ce8179aea4ff549bb83386b93","slug":"2022-05-28func","date":"2022-05-28T07:25:33.000Z","updated":"2022-06-25T09:34:46.427Z","comments":true,"path":"api/articles/2022-05-28func.json","keywords":null,"cover":null,"text":"背景js 为了实现面向对象的思想，做了很多事情，导致大家在学习 js 的时候，会遇到复杂的原型、原型链、继承，还有对人不友好的 this ；而当我们用这些东西组合起来模拟面向对象的特性的时候，就更加痛苦了。但我们可以使用一种更友好的方式，函数式编程。简单来说就是：面向对象的思想在...","link":"","photos":[],"count_time":{"symbolsCount":634,"symbolsTime":"1 mins."},"categories":[{"name":"面试","slug":"面试","count":8,"path":"api/categories/面试.json"}],"tags":[{"name":"理论","slug":"理论","count":1,"path":"api/tags/理论.json"}],"author":{"name":"陈海龙","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"需要就学呗，多大点事😂","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}},{"title":"https","uid":"41038c8a05f130e72afb64f08ff12861","slug":"2022-06-05https","date":"2022-06-05T03:55:17.000Z","updated":"2022-06-25T09:34:46.427Z","comments":true,"path":"api/articles/2022-06-05https.json","keywords":null,"cover":[],"text":"吐槽掘金 后台有定时器在运行，一直发送请求，打开多个 web 标签页面，cpu 直接飙升到 100% +，鉴于掘金太卡，所以转载 为什么要有 HTTPS在 HTTPS 出现之前，所有请求都是以明文方式送出的，那么如果有人在传输途中偷听或者抓包的话，你的所有通信内容都会泄漏。比较安...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"面试","slug":"面试","count":8,"path":"api/categories/面试.json"}],"tags":[{"name":"http","slug":"http","count":1,"path":"api/tags/http.json"}],"author":{"name":"陈海龙","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"需要就学呗，多大点事😂","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}},{"title":"javascript 劫持(函数/数据)","uid":"919b463a93b967cb331b7bf283190908","slug":"2022-06-10j-Data-hijacking","date":"2022-06-10T07:05:21.000Z","updated":"2022-06-25T09:34:46.429Z","comments":true,"path":"api/articles/2022-06-10j-Data-hijacking.json","keywords":null,"cover":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fres.cloudinary.com%2Fcitiar%2Fimage%2Fupload%2Fv1611373461%2Fucamc%2Fcommon%2Fthumb_5x_Javascript-O.png&refer=http%3A%2F%2Fres.cloudinary.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1657437058&t=2169b1ec59622a8e20039841292e4d8b","text":"函数劫持函数劫持，在一个函数运行之前就把它劫持下来，添加我们想要的功能。 在函数运行之前，我们可以改变函数的参数，或者改变函数的返回值。 JavaScript 中的函数劫持是一个增强原有函数的技巧，一般我们用来对原有的 JavaScript 全局方法做一些能力的增强。 函数劫持原...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"面试","slug":"面试","count":8,"path":"api/categories/面试.json"}],"tags":[{"name":"js基础","slug":"js基础","count":2,"path":"api/tags/js基础.json"}],"author":{"name":"陈海龙","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"需要就学呗，多大点事😂","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}},{"title":"javascript 数组对象方法实现原理","uid":"d92e8525a3aca792376f3d517cdf306b","slug":"2022-06-10js-arr","date":"2022-06-10T07:06:40.000Z","updated":"2022-06-25T09:34:46.430Z","comments":true,"path":"api/articles/2022-06-10js-arr.json","keywords":null,"cover":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fres.cloudinary.com%2Fcitiar%2Fimage%2Fupload%2Fv1611373461%2Fucamc%2Fcommon%2Fthumb_5x_Javascript-O.png&refer=http%3A%2F%2Fres.cloudinary.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1657437058&t=2169b1ec59622a8e20039841292e4d8b","text":"map定义 map()方法返回一个新数组，数组中的元素为原始数组元素调用函数处理后的值 map()方法按照原始数组元素顺序一次处理元素 注意 map()不会对空数组进行检测 map()方法返回的是一个新数组，而不是原始数组 原理 Array.proptotype.myMap &#...","link":"","photos":[],"count_time":{"symbolsCount":"8.8k","symbolsTime":"8 mins."},"categories":[{"name":"面试","slug":"面试","count":8,"path":"api/categories/面试.json"}],"tags":[{"name":"js基础","slug":"js基础","count":2,"path":"api/tags/js基础.json"}],"author":{"name":"陈海龙","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"需要就学呗，多大点事😂","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}},{"title":"面试题汇总","uid":"99460a2013287be2d51642da6dd169f8","slug":"2022-06-16interview","date":"2022-06-16T02:00:46.000Z","updated":"2022-06-26T16:01:30.880Z","comments":true,"path":"api/articles/2022-06-16interview.json","keywords":null,"cover":"https://img1.baidu.com/it/u=2500395055,2979935817&fm=253&fmt=auto&app=138&f=JPEG?w=500&h=282","text":" 小红书前端面经 前端两年经验，历时一个月的面经和总结 【面试题】CSS 知识点整理(附答案) HTTP 与 TCPHTTP&#x2F;1.1、HTTP&#x2F;2、HTTP&#x2F;3 对 HTTP 的改进 TCP 三次握手 TCP 四次挥手 TCP 重传机制 流量控制 H...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"面试","slug":"面试","count":8,"path":"api/categories/面试.json"}],"tags":[{"name":"面试","slug":"面试","count":5,"path":"api/tags/面试.json"}],"author":{"name":"陈海龙","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"需要就学呗，多大点事😂","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}}]}