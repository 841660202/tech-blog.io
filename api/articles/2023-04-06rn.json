{"title":"rn适配","uid":"6c73e119803e50b56fae60b4dcf06443","slug":"2023-04-06rn","date":"2023-04-06T05:55:25.000Z","updated":"2023-07-08T01:06:25.352Z","comments":true,"path":"api/articles/2023-04-06rn.json","keywords":null,"cover":[],"content":"<h1 id=\"动机\"><a href=\"#动机\" class=\"headerlink\" title=\"动机\"></a>动机</h1><p>之前有了解过 rn 适配，也有做过适配。最近在帮面板部门开发 RN，看到了相关库是开源的，这次来看看大公司是如何做适配的，学习～</p>\n<h1 id=\"rem-适配方案\"><a href=\"#rem-适配方案\" class=\"headerlink\" title=\"rem 适配方案\"></a>rem 适配方案</h1><h2 id=\"ty-panel-kit\"><a href=\"#ty-panel-kit\" class=\"headerlink\" title=\"ty-panel-kit\"></a>ty-panel-kit</h2><p>ty-panel-kit 是公司面板部门开源的 RN 工具库及 UI 包，主要用于面板开发</p>\n<h2 id=\"适配工具\"><a href=\"#适配工具\" class=\"headerlink\" title=\"适配工具\"></a>适配工具</h2><p><a href=\"https://github.com/ty/ty-panel-kit/blob/8cca2a8a75e6780dc7f5760ad8613a4b5d0a0546/packages/ty-panel-utils/src/ratio.ts#LL23C1-L28C35\" target=\"_blank\" >convertX、convertY、convert</a></p>\n<!-- <img src=\"http://t-blog-images.aijs.top/img/202304061411957.webp\" /> -->\n\n<p><strong>注意啦下面还有一个默认 export default 导出</strong></p>\n<!-- <img src=\"http://t-blog-images.aijs.top/img/202304061413002.webp\" /> -->\n\n<p><a href=\"https://github.com/ty/ty-panel-kit/blob/8cca2a8a75e6780dc7f5760ad8613a4b5d0a0546/packages/ty-panel-utils/src/ratio.ts#LL92C3-L120C5\" target=\"_blank\" >export default</a></p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">convertX: (number: number): number &#x3D;&gt; &#123;\n    const &#123; width: actualWidth, height: actualHeight &#125; &#x3D; getDimension();\n    let hRatio &#x3D; 0;\n    if (actualWidth &gt; actualHeight) &#123;\n      hRatio &#x3D; actualWidth &#x2F; baseHeight;\n    &#125; else &#123;\n      hRatio &#x3D; actualWidth &#x2F; baseWidth;\n    &#125;\n    return number * hRatio;\n  &#125;,\n  convertY: (number: number): number &#x3D;&gt; &#123;\n    const &#123; width: actualWidth, height: actualHeight &#125; &#x3D; getDimension();\n    let vRatio &#x3D; 0;\n    if (actualWidth &gt; actualHeight) &#123;\n      vRatio &#x3D; actualHeight &#x2F; baseWidth;\n    &#125; else &#123;\n      vRatio &#x3D; actualHeight &#x2F; baseHeight;\n    &#125;\n    return number * vRatio;\n  &#125;,\n</code></pre>\n\n<ol>\n<li>convertX，convertY 计算真实设备与 UI 稿的宽高比，将设计稿要开发的尺寸，对应按照宽高比缩放</li>\n</ol>\n<h2 id=\"convert\"><a href=\"#convert\" class=\"headerlink\" title=\"convert\"></a>convert</h2><pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">convert: (number: number): number &#x3D;&gt; &#123;\n  const actualX &#x3D; Math.sqrt(height * height + width * width); &#x2F;&#x2F; 设备对角线\n  const &#123; width: actualWidth &#125; &#x3D; getDimension(); &#x2F;&#x2F;设备实际宽度\n  let actualRatio &#x3D; actualX &#x2F; baseX; &#x2F;&#x2F; 宽度比\n  if (baseWidth &#x3D;&#x3D;&#x3D; actualWidth &amp;&amp; actualRatio &gt; 1) &#123;\n    &#x2F;&#x2F; 如果 UI宽度 &#x3D; 设备宽度，不进行缩放，怎么感觉这里写的很奇怪actualRatio&gt;1没生效\n    actualRatio &#x3D; 1;\n  &#125;\n  return number * actualRatio;\n&#125;;</code></pre>\n\n<h3 id=\"getDimension\"><a href=\"#getDimension\" class=\"headerlink\" title=\"getDimension\"></a>getDimension</h3><pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">const getDimension &#x3D; () &#x3D;&gt; &#123;\n  if (isWeb) &#123;\n    try &#123;\n      &#x2F;&#x2F; @ts-ignore\n      return Dimensions.get(&#39;osWindow&#39;);\n    &#125; catch (error) &#123;\n      return Dimensions.get(&#39;window&#39;);\n    &#125;\n  &#125;\n  return Dimensions.get(&#39;window&#39;);\n&#125;;</code></pre>\n\n<ol>\n<li>convert 实际对角线</li>\n</ol>\n<h2 id=\"代码确实有点懵逼\"><a href=\"#代码确实有点懵逼\" class=\"headerlink\" title=\"代码确实有点懵逼\"></a>代码确实有点懵逼</h2><ol>\n<li><code>export const</code></li>\n<li><code>export default</code></li>\n</ol>\n<h2 id=\"查看到-ty-panel-utils\"><a href=\"#查看到-ty-panel-utils\" class=\"headerlink\" title=\"查看到 ty-panel-utils\"></a>查看到 ty-panel-utils</h2><p><a href=\"https://github.com/ty/ty-panel-kit/blob/8cca2a8a75e6780dc7f5760ad8613a4b5d0a0546/packages/ty-panel-utils/src/index.ts#L5\" target=\"_blank\" >import RatioUtils from ‘.&#x2F;ratio’;</a></p>\n<p>代码中引用大都是 export default</p>\n<h1 id=\"px-适配方案\"><a href=\"#px-适配方案\" class=\"headerlink\" title=\"px 适配方案\"></a>px 适配方案</h1><p>PixelRatio 是 react-native 提供的 API，上述内容看不到 PixelRatio 的任何信息</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>react-native 官方提供的是 dp 值，所以不同分辨率的设备之间会造成显示上的差异。所以可以使用前端最常用的 rem 方式来进行适配，对于个别需要真实像素的地方，可以使用 px 像素进行适配。</p></blockquote>\n<h1 id=\"RN-API\"><a href=\"#RN-API\" class=\"headerlink\" title=\"RN API\"></a>RN API</h1><ol>\n<li>getPixelSizeForLayoutSize 将一个布局尺寸(dp)转换为像素尺寸(px)。</li>\n<li>roundToNearestPixel() 将布局大小（dp）四舍五入到与整数像素对应的最接近的布局大小。例如，在 PixelRatio 为 3 的设备上，<code>PixelRatio.roundToNearestPixel(8.4)=8.33</code>，正好对应<code>(8.33*3)=25</code> 像素。</li>\n</ol>\n<h1 id=\"px-gt-dp\"><a href=\"#px-gt-dp\" class=\"headerlink\" title=\"px -&gt; dp\"></a>px -&gt; dp</h1><p><code>px = dp / PixelRatio.get()</code> -&gt; <code>dp = px * PixelRatio.get()</code><br>UI 一般给出的设计稿单位都是 px，那我们 RN 中的单位是 dp，那么我们就需要将 px 转换为 dp，这就需要使用像素密度了。</p>\n<h1 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h1><p><a href=\"https://www.jianshu.com/p/b7469205b542\" target=\"_blank\" >react-native 不同分辨率设备适配（rem、px 解决方案）</a></p>\n<p><a href=\"https://www.jianshu.com/p/6041462d6319\" target=\"_blank\" >React-Native 系列，关于 PixelRatio</a></p>\n<h1 id=\"适配代码\"><a href=\"#适配代码\" class=\"headerlink\" title=\"适配代码\"></a>适配代码</h1><p><a href=\"https://github.com/ty/ty-panel-kit/blob/8cca2a8a75e6780dc7f5760ad8613a4b5d0a0546/packages/ty-panel-utils/src/ratio.ts\" target=\"_blank\" >见 github</a></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">import &#123; Dimensions, Platform, StatusBar &#125; from &#39;react-native&#39;;\n\nconst &#123; height, width &#125; &#x3D; Dimensions.get(&#39;window&#39;);\nconst baseHeight &#x3D; 667;\nconst baseWidth &#x3D; 375;\nconst baseX &#x3D; Math.sqrt(baseHeight * baseHeight + baseWidth * baseWidth);\nconst x &#x3D; Math.sqrt(height * height + width * width);\nconst statusHeight &#x3D; StatusBar.currentHeight || 0;\nexport const isIos &#x3D; Platform.OS &#x3D;&#x3D;&#x3D; &#39;ios&#39;;\nexport const isWeb &#x3D; Platform.OS &#x3D;&#x3D;&#x3D; &#39;web&#39;;\nexport const isIphoneX &#x3D; isIos &amp;&amp; height &gt;&#x3D; 812;\nexport const HRatio &#x3D; width &#x2F; baseWidth;\nexport const VRatio &#x3D; height &#x2F; baseHeight;\nexport const winWidth &#x3D; width;\nexport const winHeight &#x3D; height;\nexport const viewWidth &#x3D; width;\nexport const viewHeight &#x3D; height - (isIos ? (isIphoneX ? 88 : 64) : 56 + statusHeight);\nlet finalRatio &#x3D; x &#x2F; baseX;\nif (baseWidth &#x3D;&#x3D;&#x3D; width &amp;&amp; finalRatio &gt; 1) &#123;\n  finalRatio &#x3D; 1;\n&#125;\nexport const ratio &#x3D; finalRatio;\nexport const convertX &#x3D; (width) &#x3D;&gt; (isWeb ? width : width * HRatio);\nexport const convertY &#x3D; (height) &#x3D;&gt; (isWeb ? height : height * VRatio);\nexport const convert &#x3D; (number) &#x3D;&gt; (isWeb ? number : number * ratio);\nexport const topBarHeight &#x3D; isIos ? (isIphoneX ? 88 : 64) : 56;\nexport const statusBarHeight &#x3D; isIos ? (isIphoneX ? 44 : 20) : statusHeight;\n\nexport const isSmallW &#x3D; width &lt; 375;\nexport const isSmallH &#x3D; height &lt; 667;\n\nconst getDimension &#x3D; () &#x3D;&gt; &#123;\n  if (isWeb) &#123;\n    try &#123;\n      return Dimensions.get(&#39;osWindow&#39;);\n    &#125; catch (error) &#123;\n      return Dimensions.get(&#39;window&#39;);\n    &#125;\n  &#125;\n  return Dimensions.get(&#39;window&#39;);\n&#125;;\n\n&#x2F;**\n * 安卓或 Web 环境下，屏幕宽度等参数是动态的;\n *&#x2F;\nexport default &#123;\n  get hRatio() &#123;\n    const &#123; width: actualWidth &#125; &#x3D; getDimension();\n    return actualWidth &#x2F; baseWidth;\n  &#125;,\n  get vRatio() &#123;\n    const &#123; height: actualHeight &#125; &#x3D; getDimension();\n    return actualHeight &#x2F; baseHeight;\n  &#125;,\n  get ratio() &#123;\n    const actualX &#x3D; Math.sqrt(height * height + width * width);\n    const &#123; width: actualWidth &#125; &#x3D; getDimension();\n    let actualRatio &#x3D; actualX &#x2F; baseX;\n    if (baseWidth &#x3D;&#x3D;&#x3D; actualWidth &amp;&amp; actualRatio &gt; 1) &#123;\n      actualRatio &#x3D; 1;\n    &#125;\n    return actualRatio;\n  &#125;,\n  get width() &#123;\n    return getDimension().width;\n  &#125;,\n  get height() &#123;\n    return getDimension().height;\n  &#125;,\n  get winWidth() &#123;\n    return getDimension().width;\n  &#125;,\n  get winHeight() &#123;\n    return getDimension().height;\n  &#125;,\n  get viewWidth() &#123;\n    return getDimension().width;\n  &#125;,\n  get viewHeight() &#123;\n    return getDimension().height - (isIos ? (isIphoneX ? 88 : 64) : 56 + statusHeight);\n  &#125;,\n  convertX: (number) &#x3D;&gt; &#123;\n    const &#123; width: actualWidth &#125; &#x3D; getDimension();\n    const hRatio &#x3D; actualWidth &#x2F; baseWidth;\n    return number * hRatio;\n  &#125;,\n  convertY: (number) &#x3D;&gt; &#123;\n    const &#123; height: actualHeight &#125; &#x3D; getDimension();\n    const vRatio &#x3D; actualHeight &#x2F; baseHeight;\n    return number * vRatio;\n  &#125;,\n  convert: (number) &#x3D;&gt; &#123;\n    const actualX &#x3D; Math.sqrt(height * height + width * width);\n    const &#123; width: actualWidth &#125; &#x3D; getDimension();\n    let actualRatio &#x3D; actualX &#x2F; baseX;\n    if (baseWidth &#x3D;&#x3D;&#x3D; actualWidth &amp;&amp; actualRatio &gt; 1) &#123;\n      actualRatio &#x3D; 1;\n    &#125;\n    return number * actualRatio;\n  &#125;,\n  get isSmallW() &#123;\n    return getDimension().width &lt; 375;\n  &#125;,\n  get isSmallH() &#123;\n    return getDimension().height &lt; 667;\n  &#125;,\n  isIos,\n  isIphoneX,\n  iPhoneX: isIphoneX,\n  topBarHeight,\n  statusBarHeight,\n&#125;;</code></pre>\n","text":"动机之前有了解过 rn 适配，也有做过适配。最近在帮面板部门开发 RN，看到了相关库是开源的，这次来看看大公司是如何做适配的，学习～ rem 适配方案ty-panel-kitty-panel-kit 是公司面板部门开源的 RN 工具库及 UI 包，主要用于面板开发 适配工具con...","link":"","photos":[],"count_time":{"symbolsCount":"6.7k","symbolsTime":"6 mins."},"categories":[{"name":"react-native","slug":"react-native","count":8,"path":"api/categories/react-native.json"}],"tags":[{"name":"react-native","slug":"react-native","count":8,"path":"api/tags/react-native.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8A%A8%E6%9C%BA\"><span class=\"toc-text\">动机</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#rem-%E9%80%82%E9%85%8D%E6%96%B9%E6%A1%88\"><span class=\"toc-text\">rem 适配方案</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#ty-panel-kit\"><span class=\"toc-text\">ty-panel-kit</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%80%82%E9%85%8D%E5%B7%A5%E5%85%B7\"><span class=\"toc-text\">适配工具</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#convert\"><span class=\"toc-text\">convert</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getDimension\"><span class=\"toc-text\">getDimension</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E7%A1%AE%E5%AE%9E%E6%9C%89%E7%82%B9%E6%87%B5%E9%80%BC\"><span class=\"toc-text\">代码确实有点懵逼</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E7%9C%8B%E5%88%B0-ty-panel-utils\"><span class=\"toc-text\">查看到 ty-panel-utils</span></a></li></ol></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#px-%E9%80%82%E9%85%8D%E6%96%B9%E6%A1%88\"><span class=\"toc-text\">px 适配方案</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#RN-API\"><span class=\"toc-text\">RN API</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#px-gt-dp\"><span class=\"toc-text\">px -&gt; dp</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5\"><span class=\"toc-text\">参考链接</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E9%80%82%E9%85%8D%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">适配代码</span></a></li></ol>","author":{"name":"十三","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>多学一点，多想一点，多做一点</p><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"PS蒙版","uid":"e0e18c98c586bcfe5014c7e734d90b99","slug":"2023-04-09","date":"2023-04-09T08:29:34.000Z","updated":"2023-04-09T10:06:09.321Z","comments":true,"path":"api/articles/2023-04-09.json","keywords":null,"cover":null,"text":" 图层蒙版 黑色 - 透 白色 - 不透 灰色 - 半透 见 主体抠图 选择-主体 套索增加选取 cmd+j 创建，选取的区域图层 见 见 [、]条件刷头大小 ctrl + t 自由变化 alt+shift 中间点，等比例缩放 选择两个图层。图层合并 ctrl + e 抠图 透明...","link":"","photos":[],"count_time":{"symbolsCount":185,"symbolsTime":"1 mins."},"categories":[{"name":"PS","slug":"PS","count":1,"path":"api/categories/PS.json"}],"tags":[{"name":"PS","slug":"PS","count":1,"path":"api/tags/PS.json"}],"author":{"name":"十三","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>多学一点，多想一点，多做一点</p><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}},"next_post":{"title":"ossutil","uid":"a48730f893eb3d8564a6e41f516078f2","slug":"2023-03-17ossutil","date":"2023-03-17T01:12:02.000Z","updated":"2023-05-15T13:17:32.987Z","comments":true,"path":"api/articles/2023-03-17ossutil.json","keywords":null,"cover":[],"text":"动机 之前单张图使用 PicGo 进行上传，这次需要批量多目录处理 阿里云 OSS 网页上传，会丢失目录层级关系 批量将目录下的图片，及文件对应关系上传到阿里云 OSS,博客在线资源使用 批量图片压缩，保留文件关系 批量图片压缩ChatGPT 生成 pngquant 压缩工具pn...","link":"","photos":[],"count_time":{"symbolsCount":"2.8k","symbolsTime":"3 mins."},"categories":[{"name":"阿里云","slug":"阿里云","count":1,"path":"api/categories/阿里云.json"}],"tags":[{"name":"阿里云","slug":"阿里云","count":1,"path":"api/tags/阿里云.json"}],"author":{"name":"十三","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>多学一点，多想一点，多做一点</p><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}}}