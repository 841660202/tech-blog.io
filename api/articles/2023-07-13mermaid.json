{"title":"编辑器升级mermaid至10.2.4","uid":"9fae3fdb943b87674a8d909f92f49bad","slug":"2023-07-13mermaid","date":"2023-07-13T10:18:26.000Z","updated":"2023-07-31T06:42:49.723Z","comments":true,"path":"api/articles/2023-07-13mermaid.json","keywords":null,"cover":[],"content":"<h2 id=\"目标\"><a href=\"#目标\" class=\"headerlink\" title=\"目标\"></a>目标</h2><ol>\n<li>无限制添加多个 <code>mermaid</code></li>\n<li>多个 <code>mermaid</code> 实现互不影响，</li>\n</ol>\n<h2 id=\"脚本\"><a href=\"#脚本\" class=\"headerlink\" title=\"脚本\"></a>脚本</h2><pre class=\"line-numbers language-jsonc\" data-language=\"jsonc\"><code class=\"language-jsonc\">&#x2F;&#x2F; package.json\n&quot;script&quot;: &#123;\n  &quot;cud&quot;: &quot;python3 cud.py&quot;, &#x2F;&#x2F; 因为每次要敲下面三个命令，浪费时间，就用脚本处理下\n&#125;</code></pre>\n\n<pre class=\"line-numbers language-py3\" data-language=\"py3\"><code class=\"language-py3\">import subprocess\n\n# 执行rm命令\nsubprocess.run([&#39;rm&#39;, &#39;-rf&#39;, &#39;.&#x2F;client&#x2F;.next&#39;])\n\n# subprocess.run([&#39;yalc&#39;, &#39;remove&#39;, &#39;--all&#39;])\n# subprocess.run([&#39;yalc&#39;, &#39;add&#39;, &#39;@ty-fe&#x2F;slash&#39;])\n\n# 执行yalc update命令\nsubprocess.run([&#39;yalc&#39;, &#39;update&#39;])\n\n# 执行yarn dev命令\nsubprocess.run([&#39;yarn&#39;, &#39;dev&#39;])\n\n</code></pre>\n\n<h2 id=\"编辑器集成-mermaid\"><a href=\"#编辑器集成-mermaid\" class=\"headerlink\" title=\"编辑器集成 mermaid\"></a>编辑器集成 mermaid</h2><pre class=\"line-numbers language-tsx\" data-language=\"tsx\"><code class=\"language-tsx\">import &#123; usePersistFn &#125; from &#39;ahooks&#39;;\nimport mermaid, &#123; MermaidConfig &#125; from &#39;mermaid&#39;;\nimport React, &#123; useEffect, useRef, useMemo &#125; from &#39;react&#39;;\n\nexport type MermaidProps &#x3D; &#123;\n  code?: string;\n  config?: Partial&lt;MermaidConfig&gt;;\n&#125;;\n\nfunction ReactMermaid(&#123; code, config &#125;: MermaidProps) &#123;\n  const ref &#x3D; useRef&lt;HTMLDivElement&gt;(null);\n  &#x2F;&#x2F; 卡点3: 这个需要缓存起来，避免重新渲染\n  const id &#x3D; useMemo(() &#x3D;&gt; &#39;uuid&#39; + Math.random().toString(16).slice(2), []);\n  const handleDraw &#x3D; usePersistFn(async () &#x3D;&gt; &#123;\n    if (ref.current &amp;&amp; code) &#123;\n      try &#123;\n        &#x2F;&#x2F;卡点4： 这里需要判断，mermaid.render会将语法错误渲染到body上\n        if (await mermaid.parse(code)) &#123;\n          mermaid.setParseErrorHandler((err) &#x3D;&gt; &#123;\n            console.error(err);\n          &#125;);\n          &#x2F;&#x2F; 卡点1: 这个id每次渲染时候，必须重新变化\n          const &#123; svg &#125; &#x3D; await mermaid.render(id, code);\n          if (ref.current) &#123;\n            ref.current.innerHTML &#x3D; svg;\n          &#125;\n        &#125;\n      &#125; catch (error: any) &#123;\n        if (ref.current) &#123;\n          ref.current.innerHTML &#x3D; &#96;$&#123;error.name&#125;：$&#123;error.message&#125;&#96;;\n        &#125;\n      &#125;\n    &#125;\n  &#125;);\n\n  useEffect(() &#x3D;&gt; &#123;\n    if (code) handleDraw();\n  &#125;, [config, code]);\n  &#x2F;&#x2F; 卡点2: 这个地方不能增加 className&#x3D;&quot;mermaid&quot;\n  return &lt;div ref&#x3D;&#123;ref&#125;&gt;&#123;code&#125;&lt;&#x2F;div&gt;;\n&#125;\n\nexport default ReactMermaid;</code></pre>\n\n<h2 id=\"一些奇奇怪怪的现象\"><a href=\"#一些奇奇怪怪的现象\" class=\"headerlink\" title=\"一些奇奇怪怪的现象\"></a>一些奇奇怪怪的现象</h2><ol>\n<li>不进行 readOnly 分别控制<ol>\n<li>不增加延迟：刷新后渲染不出来，（切换到其他页面再切换回来渲染正常）</li>\n<li>增加延迟小，可以部分渲染出来</li>\n<li>增加延迟大，可以渲染出来</li>\n</ol>\n</li>\n<li>增加 readOnly（因为只读渲染怪异，想把只读单独处理）<ol>\n<li>非编辑时候，直接向标签中插入要渲染的内容<ol>\n<li>刷新后正常，编辑返回不正常</li>\n<li>返回编辑不正常，<ol>\n<li>加强制</li>\n</ol>\n</li>\n</ol>\n</li>\n<li>编辑时候，时候渲染正常</li>\n</ol>\n</li>\n</ol>\n<h3 id=\"过程中做了一些尝试：\"><a href=\"#过程中做了一些尝试：\" class=\"headerlink\" title=\"过程中做了一些尝试：\"></a>过程中做了一些尝试：</h3><ol>\n<li>区分编辑、非编辑</li>\n<li>参考一些开源的写法，都无法解决，<ol>\n<li>因为其他项目的都是针对一个页面就一个 mermaid</li>\n<li><code>mermaid.render</code>, 多个组件公共一个 id 只有最后一个组件会得到有效更新，之前的都会被删除掉(这和源代码执行有关，源代码执行，会找到之前渲染的 id，先移除掉，然后重新渲染一份；那么 id 相同就会都被移除掉，然后仅渲染了一个)</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"最终效果\"><a href=\"#最终效果\" class=\"headerlink\" title=\"最终效果\"></a>最终效果</h2><img src=\"http://t-blog-images.aijs.top/img/202307131900953.webp\" style=\"width:800px;max-width:100%\" />\n\n<h2 id=\"对于有-bug-的-npm-进行撤销\"><a href=\"#对于有-bug-的-npm-进行撤销\" class=\"headerlink\" title=\"对于有 bug 的 npm 进行撤销\"></a>对于有 bug 的 npm 进行撤销</h2><pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">npm unpublish packageName@version --force</code></pre>\n\n<h2 id=\"其他脚本\"><a href=\"#其他脚本\" class=\"headerlink\" title=\"其他脚本\"></a>其他脚本</h2><h3 id=\"更新包版本\"><a href=\"#更新包版本\" class=\"headerlink\" title=\"更新包版本\"></a>更新包版本</h3><pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># update_version.py\nimport sys\nimport json\n\ndef update_version(version_type):\n    # 读取package.json文件内容\n    with open(&#39;package.json&#39;, &#39;r&#39;) as file:\n        package_data &#x3D; json.load(file)\n        print(package_data)\n\n    # 解析版本号\n    version_parts &#x3D; package_data[&#39;version&#39;].split(&#39;.&#39;)\n\n    # 根据参数决定要更新的版本部分\n    if version_type &#x3D;&#x3D; &#39;major&#39; or version_type &#x3D;&#x3D; &#39;a&#39;:\n        version_parts[0] &#x3D; str(int(version_parts[0]) + 1)\n        version_parts[1] &#x3D; &#39;0&#39;\n        version_parts[2] &#x3D; &#39;0&#39;\n    elif version_type &#x3D;&#x3D; &#39;minor&#39; or version_type &#x3D;&#x3D; &#39;i&#39;:\n        version_parts[1] &#x3D; str(int(version_parts[1]) + 1)\n        version_parts[2] &#x3D; &#39;0&#39;\n    elif version_type &#x3D;&#x3D; &#39;patch&#39; or version_type &#x3D;&#x3D; &#39;p&#39;:\n        version_parts[2] &#x3D; str(int(version_parts[2]) + 1)\n    else:\n        print(&#39;无效的版本类型&#39;)\n        return\n\n    # 更新版本号\n    new_version &#x3D; &#39;.&#39;.join(version_parts)\n    package_data[&#39;version&#39;] &#x3D; new_version\n\n    # 写回package.json文件\n    with open(&#39;package.json&#39;, &#39;w&#39;) as file:\n        json.dump(package_data, file, indent&#x3D;2)\n\n\n# 解析命令行参数\nif len(sys.argv) &lt; 2:\n    print(&#39;请提供要更新的版本类型&#39;)\nelse:\n    version_type &#x3D; sys.argv[1]\n    update_version(version_type)\n    print(f&#39;已更新&#123;version_type&#125;版本号&#39;)\n\n\n\n\n# python3 update_version.py major\n# python3 update_version.py minor\n# python3 update_version.py patch\nor\n# python3 update_version.py a #(major)\n# python3 update_version.py i #(minor)\n# python3 update_version.py p #(patch)</code></pre>\n\n<h2 id=\"脚本演示\"><a href=\"#脚本演示\" class=\"headerlink\" title=\"脚本演示\"></a>脚本演示</h2><img src=\"http://t-blog-images.aijs.top/img/202307131848506.gif\" style=\"width:500px;max-width:100%\" />\n","text":"目标 无限制添加多个 mermaid 多个 mermaid 实现互不影响， 脚本&#x2F;&#x2F; package.json &quot;script&quot;: &#123; &quot;cud&quot;: &quot;python3 cud.py&quot;, &#...","link":"","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"编辑器","slug":"编辑器","count":1,"path":"api/categories/编辑器.json"}],"tags":[{"name":"编辑器","slug":"编辑器","count":1,"path":"api/tags/编辑器.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9B%AE%E6%A0%87\"><span class=\"toc-text\">目标</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%84%9A%E6%9C%AC\"><span class=\"toc-text\">脚本</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BC%96%E8%BE%91%E5%99%A8%E9%9B%86%E6%88%90-mermaid\"><span class=\"toc-text\">编辑器集成 mermaid</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E4%BA%9B%E5%A5%87%E5%A5%87%E6%80%AA%E6%80%AA%E7%9A%84%E7%8E%B0%E8%B1%A1\"><span class=\"toc-text\">一些奇奇怪怪的现象</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%BF%87%E7%A8%8B%E4%B8%AD%E5%81%9A%E4%BA%86%E4%B8%80%E4%BA%9B%E5%B0%9D%E8%AF%95%EF%BC%9A\"><span class=\"toc-text\">过程中做了一些尝试：</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9C%80%E7%BB%88%E6%95%88%E6%9E%9C\"><span class=\"toc-text\">最终效果</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AF%B9%E4%BA%8E%E6%9C%89-bug-%E7%9A%84-npm-%E8%BF%9B%E8%A1%8C%E6%92%A4%E9%94%80\"><span class=\"toc-text\">对于有 bug 的 npm 进行撤销</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%B6%E4%BB%96%E8%84%9A%E6%9C%AC\"><span class=\"toc-text\">其他脚本</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%9B%B4%E6%96%B0%E5%8C%85%E7%89%88%E6%9C%AC\"><span class=\"toc-text\">更新包版本</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%84%9A%E6%9C%AC%E6%BC%94%E7%A4%BA\"><span class=\"toc-text\">脚本演示</span></a></li></ol>","author":{"name":"十三","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>多学一点，多想一点，多做一点</p><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"svelte","uid":"159e1d8888631750dd50b9032a4b1226","slug":"2023-07-13svelte","date":"2023-07-13T11:07:21.000Z","updated":"2023-07-16T02:13:26.430Z","comments":true,"path":"api/articles/2023-07-13svelte.json","keywords":null,"cover":null,"text":"svelte 名字由来“Svelte”这个名字源自英语词汇，用于形容一个人或物体的外观或姿态非常优雅、时髦、时尚或精巧。在软件开发领域，”Svelte”这个名字被用来指代一种现代的、高效的前端框架，因为这个框架以其精巧、优雅且高性能的特点而得名。 “Svelte”框架的设计目标是...","link":"","photos":[],"count_time":{"symbolsCount":371,"symbolsTime":"1 mins."},"categories":[{"name":"svelte","slug":"svelte","count":2,"path":"api/categories/svelte.json"}],"tags":[{"name":"svelte","slug":"svelte","count":2,"path":"api/tags/svelte.json"}],"author":{"name":"十三","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>多学一点，多想一点，多做一点</p><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}},"next_post":{"title":"node-sass","uid":"ae3906b16de74553c037526bc4635f3a","slug":"2023-07-12node-sass","date":"2023-07-12T07:30:04.000Z","updated":"2023-07-16T02:13:26.429Z","comments":true,"path":"api/articles/2023-07-12node-sass.json","keywords":null,"cover":null,"text":"wiki-editor 版本要求 &gt; @ty-fe&#x2F;slash@0.0.20 prepublishOnly &gt; rm -rf lib&#x2F; &amp;&amp; npm run build:css &amp;&amp; npm run build &a...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"node","slug":"node","count":1,"path":"api/categories/node.json"}],"tags":[{"name":"node","slug":"node","count":1,"path":"api/tags/node.json"}],"author":{"name":"十三","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>多学一点，多想一点，多做一点</p><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}}}