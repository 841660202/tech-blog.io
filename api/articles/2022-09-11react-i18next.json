{"title":"react-i18next 实战","uid":"d3e5b4328c1c4f541cc62a16265ea877","slug":"2022-09-11react-i18next","date":"2022-09-11T09:52:12.000Z","updated":"2022-09-16T15:03:54.481Z","comments":true,"path":"api/articles/2022-09-11react-i18next.json","keywords":null,"cover":[],"content":"<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><p>对于常量的数据，当 i18n 语言改变时候，顶部菜单，和侧边栏菜单没有发生改变</p>\n<p>有问题代码</p>\n<pre class=\"line-numbers language-tsx\" data-language=\"tsx\"><code class=\"language-tsx\">&#x2F;&#x2F; 仅仅是为了使用 useTranslation 而进行组件封装\nimport React from &quot;react&quot;;\nimport &#123; useTranslation &#125; from &quot;react-i18next&quot;;\ninterface IProps &#123;\n  children: string;\n&#125;\nconst Trans: React.FC&lt;IProps&gt; &#x3D; (props) &#x3D;&gt; &#123;\n  const &#123; t &#125; &#x3D; useTranslation();\n  return t(props.children);\n&#125;;\n\nexport default Trans;</code></pre>\n\n<pre class=\"line-numbers language-tsx\" data-language=\"tsx\"><code class=\"language-tsx\">&#x2F;&#x2F; 语言变化，不可有效更新例子\n&#x2F;&#x2F; Trans 为了翻译写的react组件\nexport const topRoutes: MenuConfig[] &#x3D; [\n  &#123;\n    name: &lt;Trans&gt;tconfig&lt;&#x2F;Trans&gt;,\n    path: &quot;&#x2F;tconfig&quot;,\n    redirect: &quot;&#x2F;tconfig&#x2F;products&quot;,\n    routes: [\n      &#123;\n        name: &lt;Trans&gt;products&lt;&#x2F;Trans&gt;,\n        path: &quot;&#x2F;tconfig&#x2F;products&quot;,\n        component: &lt;TargetConfProducts &#x2F;&gt;,\n        icon: &lt;LoginOutlined &#x2F;&gt;,\n      &#125;,\n      &#123;\n        name: &lt;Trans&gt;devices&lt;&#x2F;Trans&gt;,\n        path: &quot;&#x2F;tconfig&#x2F;devices&quot;,\n        component: &lt;TargetConfDevices &#x2F;&gt;,\n        icon: &lt;LoginOutlined &#x2F;&gt;,\n      &#125;,\n      &#123;\n        name: &lt;Trans&gt;category&lt;&#x2F;Trans&gt;,\n        path: &quot;&#x2F;tconfig&#x2F;category&quot;,\n        component: &lt;TargetConfCategory &#x2F;&gt;,\n        icon: &lt;LoginOutlined &#x2F;&gt;,\n      &#125;,\n    ],\n  &#125;,\n  &#123;\n    name: &lt;Trans&gt;mconfig&lt;&#x2F;Trans&gt;,\n    path: &quot;&#x2F;mconfig&quot;,\n    redirect: &quot;&#x2F;mconfig&#x2F;list&quot;,\n    routes: [\n      &#123;\n        name: &lt;Trans&gt;config&lt;&#x2F;Trans&gt;,\n        path: &quot;&#x2F;mconfig&#x2F;list&quot;,\n        component: &lt;ModConfPage &#x2F;&gt;,\n        icon: &lt;LoginOutlined &#x2F;&gt;,\n      &#125;,\n    ],\n  &#125;,\n  &#123;\n    name: &lt;Trans&gt;tmonitor&lt;&#x2F;Trans&gt;,\n    path: &quot;&#x2F;tmonitor&quot;,\n    redirect: &quot;&#x2F;tmonitor&#x2F;overview&quot;,\n    routes: [\n      &#123;\n        name: &lt;Trans&gt;tmonitor-overview&lt;&#x2F;Trans&gt;,\n        path: &quot;&#x2F;tmonitor&#x2F;overview&quot;,\n        component: &lt;MonitorOverview &#x2F;&gt;,\n        icon: &lt;LoginOutlined &#x2F;&gt;,\n      &#125;,\n      &#123;\n        name: &lt;Trans&gt;tmonitor-product&lt;&#x2F;Trans&gt;,\n        path: &quot;&#x2F;tmonitor&#x2F;product&quot;,\n        component: &lt;MonitorProduct &#x2F;&gt;,\n        icon: &lt;LoginOutlined &#x2F;&gt;,\n      &#125;,\n      &#123;\n        name: &lt;Trans&gt;tmonitor-device&lt;&#x2F;Trans&gt;,\n        path: &quot;&#x2F;tmonitor&#x2F;device&quot;,\n        component: &lt;MonitorDevice &#x2F;&gt;,\n        icon: &lt;LoginOutlined &#x2F;&gt;,\n      &#125;,\n      &#123;\n        name: &lt;Trans&gt;tmonitor-cere&lt;&#x2F;Trans&gt;,\n        path: &quot;&#x2F;tmonitor&#x2F;cere&quot;,\n        component: &lt;MonitorCere &#x2F;&gt;,\n        icon: &lt;LoginOutlined &#x2F;&gt;,\n      &#125;,\n    ],\n  &#125;,\n];</code></pre>\n\n<img src=\"http://t-blog-images.aijs.top/img/202209111755182.gif\" />\n\n<img src=\"http://t-blog-images.aijs.top/img/202209111756612.gif\" />\n\n<h2 id=\"原因分析\"><a href=\"#原因分析\" class=\"headerlink\" title=\"原因分析\"></a>原因分析</h2><p><strong>原因分析</strong>：数据并没有重新计算 topRoutes 数据仍然是旧的数据</p>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><p><strong>方案</strong></p>\n<p>刷新浏览器的方案不考虑，用户体验极差，以下仅考虑不刷新方案</p>\n<p><strong>方案 1：</strong> 强制渲染（顶层 <code>key</code> 方案，这个方案利用 <code>react diff</code> 首先比较 key，key 不同不复用的规则），缺点：1. 部分页面可能会触发重新请求， 2. Trans 组件有割裂感 3. 有性能损耗</p>\n<p><strong>方案 2：</strong> <code>i18n.language</code> 变化时候进行重新计算（<code>useMemo/useCallback</code>），缺点: 1. 比较分散,难以维护， 2. Trans 组件有割裂感</p>\n<p><strong>方案 3：</strong> 将 t 传入，不使用组件，利用函数，计算返回的是一个新的数组的特点， 并且直接用 <code>t(&quot;tconfig&quot;)</code>形式, 优点： 直观，没有割裂感</p>\n<p>需要随语言变化的数据，可以不使用常量的数据， 换成函数</p>\n<h2 id=\"方案-3\"><a href=\"#方案-3\" class=\"headerlink\" title=\"方案 3\"></a>方案 3</h2><p>修改后</p>\n<pre class=\"line-numbers language-tsx\" data-language=\"tsx\"><code class=\"language-tsx\">export const topRoutesFun &#x3D; (t: Function) &#x3D;&gt; &#123;\n  return [\n    &#123;\n      name: t(&quot;tconfig&quot;),\n      path: &quot;&#x2F;tconfig&quot;,\n      redirect: &quot;&#x2F;tconfig&#x2F;products&quot;,\n      routes: [\n        &#123;\n          name: t(&quot;products&quot;),\n          path: &quot;&#x2F;tconfig&#x2F;products&quot;,\n          component: &lt;TargetConfProducts &#x2F;&gt;,\n          icon: &lt;LoginOutlined &#x2F;&gt;,\n        &#125;,\n        &#123;\n          name: t(&quot;devices&quot;),\n          path: &quot;&#x2F;tconfig&#x2F;devices&quot;,\n          component: &lt;TargetConfDevices &#x2F;&gt;,\n          icon: &lt;LoginOutlined &#x2F;&gt;,\n        &#125;,\n        &#123;\n          name: t(&quot;category&quot;),\n          path: &quot;&#x2F;tconfig&#x2F;category&quot;,\n          component: &lt;TargetConfCategory &#x2F;&gt;,\n          icon: &lt;LoginOutlined &#x2F;&gt;,\n        &#125;,\n      ],\n    &#125;,\n    &#123;\n      name: t(&quot;mconfig&quot;),\n      path: &quot;&#x2F;mconfig&quot;,\n      redirect: &quot;&#x2F;mconfig&#x2F;list&quot;,\n      routes: [\n        &#123;\n          name: t(&quot;config&quot;),\n          path: &quot;&#x2F;mconfig&#x2F;list&quot;,\n          component: &lt;ModConfPage &#x2F;&gt;,\n          icon: &lt;LoginOutlined &#x2F;&gt;,\n        &#125;,\n      ],\n    &#125;,\n    &#123;\n      name: t(&quot;tmonitor&quot;),\n      path: &quot;&#x2F;tmonitor&quot;,\n      redirect: &quot;&#x2F;tmonitor&#x2F;overview&quot;,\n      routes: [\n        &#123;\n          name: t(&quot;tmonitor-overview&quot;),\n          path: &quot;&#x2F;tmonitor&#x2F;overview&quot;,\n          component: &lt;MonitorOverview &#x2F;&gt;,\n          icon: &lt;LoginOutlined &#x2F;&gt;,\n        &#125;,\n        &#123;\n          name: t(&quot;tmonitor-product&quot;),\n          path: &quot;&#x2F;tmonitor&#x2F;product&quot;,\n          component: &lt;MonitorProduct &#x2F;&gt;,\n          icon: &lt;LoginOutlined &#x2F;&gt;,\n        &#125;,\n        &#123;\n          name: t(&quot;tmonitor-device&quot;),\n          path: &quot;&#x2F;tmonitor&#x2F;device&quot;,\n          component: &lt;MonitorDevice &#x2F;&gt;,\n          icon: &lt;LoginOutlined &#x2F;&gt;,\n        &#125;,\n        &#123;\n          name: t(&quot;tmonitor-cere&quot;),\n          path: &quot;&#x2F;tmonitor&#x2F;cere&quot;,\n          component: &lt;MonitorCere &#x2F;&gt;,\n          icon: &lt;LoginOutlined &#x2F;&gt;,\n        &#125;,\n      ],\n    &#125;,\n  ];\n&#125;;</code></pre>\n\n<h2 id=\"结果展示\"><a href=\"#结果展示\" class=\"headerlink\" title=\"结果展示\"></a>结果展示</h2><img src=\"http://t-blog-images.aijs.top/img/202209112002362.gif\" />\n\n<h2 id=\"生活～\"><a href=\"#生活～\" class=\"headerlink\" title=\"生活～\"></a>生活～</h2><p>去刷鲍鱼，还有六只，好像死翘翘了</p>\n","text":"问题对于常量的数据，当 i18n 语言改变时候，顶部菜单，和侧边栏菜单没有发生改变 有问题代码 &#x2F;&#x2F; 仅仅是为了使用 useTranslation 而进行组件封装 import React from &quot;react&quot;; import &#12...","link":"","photos":[],"count_time":{"symbolsCount":"5.9k","symbolsTime":"5 mins."},"categories":[{"name":"React","slug":"React","count":38,"path":"api/categories/React.json"}],"tags":[{"name":"React","slug":"React","count":32,"path":"api/tags/React.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">问题</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8E%9F%E5%9B%A0%E5%88%86%E6%9E%90\"><span class=\"toc-text\">原因分析</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88\"><span class=\"toc-text\">解决方案</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%A1%88-3\"><span class=\"toc-text\">方案 3</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BB%93%E6%9E%9C%E5%B1%95%E7%A4%BA\"><span class=\"toc-text\">结果展示</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%94%9F%E6%B4%BB%EF%BD%9E\"><span class=\"toc-text\">生活～</span></a></li></ol>","author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"webview应用","uid":"ed5cd7890f7f44ca244b6e91a3c180a3","slug":"2022-09-13webview","date":"2022-09-13T14:10:02.000Z","updated":"2022-09-16T13:54:56.325Z","comments":true,"path":"api/articles/2022-09-13webview.json","keywords":null,"cover":[],"text":"h5 webview应用很广啊，平时还真没感觉到是 h5 页面渲染的内容，报错了才知道 支付宝会员 B 站 直播 掘金文章详情 ","link":"","photos":[],"count_time":{"symbolsCount":66,"symbolsTime":"1 mins."},"categories":[{"name":"h5","slug":"h5","count":1,"path":"api/categories/h5.json"}],"tags":[{"name":"h5","slug":"h5","count":1,"path":"api/tags/h5.json"}],"author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}},"next_post":{"title":"vite react antd","uid":"f16e7439b5860073efd517d55c41d5e5","slug":"2022-09-07vite-react","date":"2022-09-07T08:44:51.000Z","updated":"2022-09-23T12:54:48.946Z","comments":true,"path":"api/articles/2022-09-07vite-react.json","keywords":null,"cover":[],"text":"技术选型方案 1: nextjs + sun (antd) 之前部门用的公司（前端基建二次封装）的这套组合，被现在的部门嫌弃 方案 2: @umijs&#x2F;max 试用了 umijs&#x2F;max MFSU, 在开发更新体验上还是觉得慢 方案 3: vite + rea...","link":"","photos":[],"count_time":{"symbolsCount":"15k","symbolsTime":"14 mins."},"categories":[{"name":"前端工程化","slug":"前端工程化","count":1,"path":"api/categories/前端工程化.json"}],"tags":[{"name":"vite","slug":"vite","count":1,"path":"api/tags/vite.json"}],"author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}}}