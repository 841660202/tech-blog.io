{"title":"前端基础-html","uid":"2854d1d5923e1e62aed568f709662bf4","slug":"2022-07-17html","date":"2022-07-17T01:44:42.000Z","updated":"2022-12-22T13:36:21.786Z","comments":true,"path":"api/articles/2022-07-17html.json","keywords":null,"cover":[],"content":"<h2 id=\"doctype-的作⽤是什么？\"><a href=\"#doctype-的作⽤是什么？\" class=\"headerlink\" title=\"doctype 的作⽤是什么？\"></a>doctype 的作⽤是什么？</h2><p><code>DOCTYPE</code> 是 html5 标准⽹⻚声明，且必须声明在 HTML ⽂档的第⼀⾏。</p>\n<p><code>来告知浏览器的解析器⽤什么⽂档标准解析这个⽂档</code>，不同的渲染模式会影响到浏览器对于 CSS 代码甚⾄ JavaScript 脚本的解析</p>\n<p><strong>⽂档解析类型有：</strong></p>\n<ul>\n<li>BackCompat：<code>怪异模式</code>，浏览器使⽤⾃⼰的怪异模式解析渲染⻚⾯。（如果没有声明 DOCTYPE，默认就是这个 模式）</li>\n<li>CSS1Compat：<code>标准模式</code>，浏览器使⽤ W3C 的标准解析渲染⻚⾯。</li>\n</ul>\n<h2 id=\"这三种模式的区别是什么？\"><a href=\"#这三种模式的区别是什么？\" class=\"headerlink\" title=\"这三种模式的区别是什么？\"></a>这三种模式的区别是什么？</h2><ul>\n<li><code>标准模式(standards mode)</code>：⻚⾯按照 HTML 与 CSS 的定义渲染</li>\n<li><code>怪异模式(quirks mode)模式</code>： 会模拟更旧的浏览器的⾏为</li>\n<li><code>近乎标准(almost standards)模式</code>： 会实施了⼀种表单元格尺⼨的怪异⾏为（与 IE7 之前的单元格布局⽅式⼀致）， 除此之外符合标准定义</li>\n</ul>\n<h2 id=\"HTML、XHTML、XML-有什么区别\"><a href=\"#HTML、XHTML、XML-有什么区别\" class=\"headerlink\" title=\"HTML、XHTML、XML 有什么区别\"></a>HTML、XHTML、XML 有什么区别</h2><ul>\n<li><code>HTML(超⽂本标记语⾔)</code>: 在 <code>html4.0 </code>之前 HTML 先有实现再有标准，导致 HTML ⾮常混乱和松散</li>\n<li><code>XML(可扩展标记语⾔)</code>: 主要<code>⽤于存储数据和结构</code>，可扩展，⼤家熟悉的 JSON 也是相似的作⽤，但是更加轻量⾼ 效，所以 XML 现在市场越来越⼩了</li>\n<li><code>XHTML(可扩展超⽂本标记语⾔)</code>: 基于上⾯两者⽽来，W3C 为了解决 HTML 混乱问题⽽⽣，并<code>基于此诞⽣了 HTML5</code>，开头加⼊ <code>&lt;!DOCTYPE html&gt;</code> 的做法因此⽽来，如果不加就是兼容混乱的 HTML，加了就是标准模式。</li>\n</ul>\n<h2 id=\"什么是-data-属性？\"><a href=\"#什么是-data-属性？\" class=\"headerlink\" title=\"什么是 data-属性？\"></a>什么是 data-属性？</h2><p>HTML 的数据属性，⽤于将数据储存于标准的 HTML 元素中作为额外信息,<code>可以通过 js 访问并操作它，来达到操作数据的⽬的</code>。</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;article\n  id&#x3D;&quot;electriccars&quot;\n  data-columns&#x3D;&quot;3&quot;\n  data-index-number&#x3D;&quot;12314&quot;\n  data-parent&#x3D;&quot;cars&quot;\n&gt;\n  ...\n&lt;&#x2F;article&gt;</code></pre>\n\n<h2 id=\"你对-HTML-语义化的理解？\"><a href=\"#你对-HTML-语义化的理解？\" class=\"headerlink\" title=\"你对 HTML 语义化的理解？\"></a>你对 HTML 语义化的理解？</h2><p>语义化是指使⽤恰当语义的 html 标签，让⻚⾯具有良好的结构与含义，⽐如 <code>&lt;p&gt;</code> 标签就代表段落， <code>&lt;article&gt;</code> 代表正⽂ 内容等等。 语义化的好处主要有两点：</p>\n<ul>\n<li><code>开发者友好</code>：使⽤语义类标签增强了可读性，开发者也能够清晰地看出⽹⻚的结构，也更为便于团队的开发和维护</li>\n<li><code>机器友好</code>：带有语义的⽂字表现⼒丰富，<code>更适合搜索引擎的爬⾍爬取有效信息</code>，语义类还可以<code>⽀持读屏软件</code>，根据 ⽂章可以⾃动⽣成⽬录 这对于简书、知乎这种富⽂本类的应⽤很重要，语义化对于其⽹站的内容传播有很⼤的帮助</li>\n</ul>\n<h2 id=\"有哪些常⽤的-meta-标签？\"><a href=\"#有哪些常⽤的-meta-标签？\" class=\"headerlink\" title=\"有哪些常⽤的 meta 标签？\"></a>有哪些常⽤的 meta 标签？</h2><p><code>http加载相关 -&gt; 编码相关 -&gt; 文档描述相关的 -&gt; 适配相关的 -&gt; 网页内容检测相关</code></p>\n<p><em>No1.</em> <code>http-equiv</code><span style=\"color: red\">（http 等效）</span>，顾名思义，相当于 http 的⽂件头作⽤,⽐如下⾯的代码就可以设置 http 的缓存过期⽇期 HTML</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;meta http-equiv&#x3D;&quot;expires&quot; content&#x3D;&quot;Wed, 20 Jun 2019 22:33:00 GMT&quot; &#x2F;&gt;</code></pre>\n\n<p><em>No2.</em> <code>charset</code>，⽤于描述 HTML ⽂档的编码形式 <code>&lt;meta charset=&quot;UTF-8&quot; &gt;</code></p>\n<p><em>No3.</em> meta 标签由<code>name</code>和<code>content</code>两个属性来定义，来描述⼀个 HTML ⽹⻚⽂档的属性，例如</p>\n<ul>\n<li><code>作者</code>: <code>&lt;meta name=&quot;author&quot; content=&quot;lyralee&quot;&gt;</code></li>\n<li><code>关键词</code>: <code>&lt;meta name=&quot;keywords&quot; content=&quot;js,html&quot;&gt;</code></li>\n<li><code>⽹⻚描述</code>: <code>&lt;meta name=&quot;description&quot; content=&quot;this is a websit&quot;&gt;</code></li>\n<li><code>⽇期和时间</code>:</li>\n<li><code>⻚⾯刷新</code> <code>&lt;meta http-equiv=&quot;refresh&quot; content=&quot;1&quot;&gt;</code></li>\n<li>等，除了⼀些 http 标准规定了⼀些 name 作为⼤家使⽤的共识，</li>\n<li>开发者<code>也可以⾃定义 name</code>。</li>\n</ul>\n<p><em>No4.</em> <code>viewport</code>，移动前端最熟悉不过，Web 开发⼈员可以控制视⼝的⼤⼩和⽐例</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;meta\n  name&#x3D;&quot;viewport&quot;\n  content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1, maximum-scale&#x3D;1, minimum-scale&#x3D;1 &quot;\n&#x2F;&gt;</code></pre>\n\n<p><em>No5.</em> <code>apple-mobile-web-app-status-bar-style</code>,开发过 PWA 应⽤的开发者应该很熟悉，为了⾃定义评估⼯具栏的颜⾊。</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;meta\n  name&#x3D;&quot;apple-mobile-web-app-status-bar-style&quot;\n  content&#x3D;&quot;black-translucent&quot;\n&#x2F;&gt;</code></pre>\n\n<p><em>No6.</em> <code>iphoneX适配的 viewport-fit=cover</code></p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width...... viewport-fit&#x3D;cover&quot; &#x2F;&gt;\n&lt;style&gt;\n  @supports (bottom: env(safe-area-inset-bottom)) &#123;\n    body,\n    .footer（底部栏） &#123;\n      padding-bottom: constant(safe-area-inset-bottom);\n      padding-bottom: env(safe-area-inset-bottom);\n    &#125;\n  &#125;\n&lt;&#x2F;style&gt;</code></pre>\n\n<p><em>No7.</em> <code>format-detection</code></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&lt;meta name&#x3D;&quot;format-detection&quot; content&#x3D;&quot;telephone&#x3D;no&quot; &#x2F;&gt;  &#x2F;&#x2F; telephone&#x3D;no 就禁止了把数字转化为拨号链接！\n&lt;meta name&#x3D;&quot;format-detection&quot; content&#x3D;&quot;email&#x3D;no&quot;  &#x2F;&gt; &#x2F;&#x2F; email&#x3D;*no 禁止作为邮箱地址！\n&lt;meta name&#x3D;&quot;format-detection&quot; content&#x3D;&quot;adress&#x3D;no&quot; &#x2F;&gt; &#x2F;&#x2F; adress&#x3D;*no 禁止跳转至地图！</code></pre>\n\n<p>作者：优瑞囧<br>链接：<a href=\"https://www.jianshu.com/p/82a85a53d5b4\">https://www.jianshu.com/p/82a85a53d5b4</a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>\n<h3 id=\"爬取脚本\"><a href=\"#爬取脚本\" class=\"headerlink\" title=\"爬取脚本\"></a>爬取脚本</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">document.body.append(location.origin + &quot;\\n&quot;);\nArray.from(document.getElementsByTagName(&quot;meta&quot;)).forEach((item) &#x3D;&gt; &#123;\n  document.body.append(&#96;$&#123;item.name&#125; : $&#123;item.content&#125;标记&#96;);\n&#125;);</code></pre>\n\n<h3 id=\"掘金\"><a href=\"#掘金\" class=\"headerlink\" title=\"掘金\"></a>掘金</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; https:&#x2F;&#x2F;juejin.cn\n&#x2F;&#x2F; viewport : width&#x3D;device-width, initial-scale&#x3D;1, user-scalable&#x3D;*no,* viewport-fit&#x3D;cover\n&#x2F;&#x2F; apple-itunes-app : app-id&#x3D;987739104\n&#x2F;&#x2F; theme-color : #ffffff\n&#x2F;&#x2F; msapplication-TileColor : #da532c\n&#x2F;&#x2F; description : zoomdong的收藏集：面经 —— 共收录了13篇文章，有0人关注了该收藏。\n&#x2F;&#x2F; keywords : 面经,面经zoomdong,zoomdong的收藏,面经掘金,掘金</code></pre>\n\n<h2 id=\"src-和-href-的区别？\"><a href=\"#src-和-href-的区别？\" class=\"headerlink\" title=\"src 和 href 的区别？\"></a>src 和 href 的区别？</h2><p><code>src 是指向外部资源的位置</code>，</p>\n<ul>\n<li><p>资源插入到：指向的内容会嵌⼊到⽂档中当前标签所在的位置，在请求 src 资源时会将其指向的资源下载并应⽤到⽂档内，如 js 脚本，img 图⽚和 frame 等元素。</p>\n</li>\n<li><p>阻塞其他资源：<code>当浏览器解析到该元素时，会暂停其他资源的下载和处理</code>，指导将该资源加载、编译、执⾏完毕，所以⼀般 js 脚本会放在底部⽽不是头部。</p>\n</li>\n<li><p>指向资源：<code>href 是指向⽹络资源所在位置（的超链接）</code>，⽤来建⽴和当前元素或⽂档之间的连接，</p>\n</li>\n<li><p>并行下载：当浏览器识别到它他指向的 ⽂件时，就会<code>并⾏下载资源</code>，<code>不会停⽌对当前⽂档的处理</code>。</p>\n</li>\n</ul>\n<h2 id=\"知道-img-的-srcset-的作⽤是什么？\"><a href=\"#知道-img-的-srcset-的作⽤是什么？\" class=\"headerlink\" title=\"知道 img 的 srcset 的作⽤是什么？\"></a>知道 img 的 srcset 的作⽤是什么？</h2><p>可以设计响应式图⽚，我们可以使⽤两个新的属性 srcset 和 sizes 来提供更多额外的资源图像和提示，帮助浏览器选择 正确的⼀个资源。</p>\n<p><code>srcset</code> 定义了我们允许浏览器选择的图像集，以及每个图像的⼤⼩。</p>\n<p><code>sizes</code> 定义了⼀组媒体条件（例如屏幕宽度）并且指明当某些媒体条件为真时，什么样的图⽚尺⼨是最佳选择。</p>\n<p>所以，有了这些属性，浏览器会： 查看设备宽度 检查 sizes 列表中哪个媒体条件是第⼀个为真 查看给予该媒体查询的槽⼤⼩ 加载 srcset 列表中引⽤的最接近所选的槽⼤⼩的图像</p>\n<p><code>&lt;picture&gt; </code>元素通过包含零或多个<code>&lt;source&gt;</code>元素和⼀个 <code>&lt;img&gt; </code>元素来为不同的显示&#x2F;设备场景提供图像版本。浏览器会选择最匹配的⼦ <code>&lt;source&gt; </code>元素，如果没有匹配的，就选择 <code>&lt;img&gt;</code> 元素的 src 属性中的 URL。然后，所选图像呈现 在<code> &lt;img&gt;</code> 元素占据的空间中</p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;picture&gt;\n  &lt;source\n    srcset&#x3D;&quot;&#x2F;media&#x2F;examples&#x2F;surfer-240-200.jpg&quot;\n    media&#x3D;&quot;(min-width: 800px)&quot;\n  &#x2F;&gt;\n  &lt;img src&#x3D;&quot;&#x2F;media&#x2F;examples&#x2F;painted-hand-298-332.jpg&quot; &#x2F;&gt;\n&lt;&#x2F;picture&gt;</code></pre>\n\n<h2 id=\"script-标签中-defer-和-async-的区别？\"><a href=\"#script-标签中-defer-和-async-的区别？\" class=\"headerlink\" title=\"script 标签中 defer 和 async 的区别？\"></a>script 标签中 defer 和 async 的区别？</h2><ul>\n<li>defer：浏览器指示脚本在⽂档被解析后执⾏，script 被<code>异步加载</code>后并<code>不会⽴刻执⾏</code>，⽽是<code>等待⽂档被解析完毕后执⾏</code>。</li>\n<li>async：<code>异步加载</code>脚本，区别是<code>脚本加载完毕后⽴即执⾏</code>，这导致 async 属性下的脚本是乱序的，对于 script 有先后依赖关系的情况，并不适⽤。</li>\n</ul>\n<img src=\"http://t-blog-images.aijs.top/img/20220717111316.png\" style=\"max-width: 100%; width: 400px\" />\n\n<h2 id=\"有⼏种前端储存的⽅式？\"><a href=\"#有⼏种前端储存的⽅式？\" class=\"headerlink\" title=\"有⼏种前端储存的⽅式？\"></a>有⼏种前端储存的⽅式？</h2><p><code>cookies</code>、<code>localstorage</code>、<code>sessionstorage</code>、<code>Web SQL</code>、<code>IndexedDB</code> 这些⽅式的区别是什么？</p>\n<ul>\n<li><p><code>cookies</code>：<br>优点: 是兼容性好，请求头⾃带 cookie ⽅便，<br>缺点: 是⼤⼩只有 4k， ⾃动请求头加⼊ cookie 浪费流量，每个 domain 限制 20 个 cookie</p>\n</li>\n<li><p><code>localStorage</code>：HTML5 加⼊的以键值对(Key-Value)为标准的⽅式，优点是操作⽅便，永久性储存（除⾮⼿动删 除），⼤⼩为 5M，兼容 IE8+</p>\n</li>\n<li><p><code>sessionStorage</code>：与 localStorage 基本类似，区别是 sessionStorage 当⻚⾯关闭后会被清理，⽽且与 cookie、 localStorage 不同，他不能在所有同源窗⼝中共享，是会话级别的储存⽅式</p>\n</li>\n<li><p><code>Web SQL</code>：2010 年被 W3C 废弃的本地数据库数据存储⽅案，但是主流浏览器（⽕狐除外）都已经有了相关的实 现，web sql 类似于 SQLite，是真正意义上的关系型数据库，⽤ sql 进⾏操作，当我们⽤ JavaScript 时要进⾏转换， 较为繁琐。</p>\n</li>\n<li><p><code>IndexedDB</code>： 是被正式纳⼊ HTML5 标准的数据库储存⽅案，它是 <em>NoSQL 数据库，⽤键值对进⾏储存，可以进⾏快</em> 速读取操作，⾮常适合 web 场景，同时⽤ JavaScript 进⾏操作会⾮常⽅便。</p>\n</li>\n</ul>\n<h2 id=\"两个-Tab-页面的通信方式\"><a href=\"#两个-Tab-页面的通信方式\" class=\"headerlink\" title=\"两个 Tab 页面的通信方式\"></a>两个 Tab 页面的通信方式</h2><p><a href=\"/#/post/2022-09-19qa\" target=\"_blank\" >两个 Tab 页面的通信方式</a></p>\n<!-- **url 传参数** -->\n\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><p><a href=\"https://www.jianshu.com/p/d9ca9f85d06e\" target=\"_blank\" >移动端 H5 适配 iphoneX 底部栏，css 快速解决方案</a></p>\n<p><a href=\"https://www.w3.org/TR/css-round-display-1/#descdef-viewport-viewport-fit\" target=\"_blank\" >www.w3.org</a></p>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/@viewport\" target=\"_blank\" >@viewport 已废弃</a></p>\n","text":"doctype 的作⽤是什么？DOCTYPE 是 html5 标准⽹⻚声明，且必须声明在 HTML ⽂档的第⼀⾏。 来告知浏览器的解析器⽤什么⽂档标准解析这个⽂档，不同的渲染模式会影响到浏览器对于 CSS 代码甚⾄ JavaScript 脚本的解析 ⽂档解析类型有： BackCo...","link":"","photos":[],"count_time":{"symbolsCount":"5.9k","symbolsTime":"5 mins."},"categories":[{"name":"前端基础","slug":"前端基础","count":47,"path":"api/categories/前端基础.json"}],"tags":[{"name":"前端基础","slug":"前端基础","count":49,"path":"api/tags/前端基础.json"},{"name":"面试","slug":"面试","count":19,"path":"api/tags/面试.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#doctype-%E7%9A%84%E4%BD%9C%E2%BD%A4%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F\"><span class=\"toc-text\">doctype 的作⽤是什么？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%99%E4%B8%89%E7%A7%8D%E6%A8%A1%E5%BC%8F%E7%9A%84%E5%8C%BA%E5%88%AB%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F\"><span class=\"toc-text\">这三种模式的区别是什么？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#HTML%E3%80%81XHTML%E3%80%81XML-%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">HTML、XHTML、XML 有什么区别</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AF-data-%E5%B1%9E%E6%80%A7%EF%BC%9F\"><span class=\"toc-text\">什么是 data-属性？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BD%A0%E5%AF%B9-HTML-%E8%AF%AD%E4%B9%89%E5%8C%96%E7%9A%84%E7%90%86%E8%A7%A3%EF%BC%9F\"><span class=\"toc-text\">你对 HTML 语义化的理解？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9C%89%E5%93%AA%E4%BA%9B%E5%B8%B8%E2%BD%A4%E7%9A%84-meta-%E6%A0%87%E7%AD%BE%EF%BC%9F\"><span class=\"toc-text\">有哪些常⽤的 meta 标签？</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%88%AC%E5%8F%96%E8%84%9A%E6%9C%AC\"><span class=\"toc-text\">爬取脚本</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8E%98%E9%87%91\"><span class=\"toc-text\">掘金</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#src-%E5%92%8C-href-%E7%9A%84%E5%8C%BA%E5%88%AB%EF%BC%9F\"><span class=\"toc-text\">src 和 href 的区别？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%9F%A5%E9%81%93-img-%E7%9A%84-srcset-%E7%9A%84%E4%BD%9C%E2%BD%A4%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F\"><span class=\"toc-text\">知道 img 的 srcset 的作⽤是什么？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#script-%E6%A0%87%E7%AD%BE%E4%B8%AD-defer-%E5%92%8C-async-%E7%9A%84%E5%8C%BA%E5%88%AB%EF%BC%9F\"><span class=\"toc-text\">script 标签中 defer 和 async 的区别？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9C%89%E2%BC%8F%E7%A7%8D%E5%89%8D%E7%AB%AF%E5%82%A8%E5%AD%98%E7%9A%84%E2%BD%85%E5%BC%8F%EF%BC%9F\"><span class=\"toc-text\">有⼏种前端储存的⽅式？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%A4%E4%B8%AA-Tab-%E9%A1%B5%E9%9D%A2%E7%9A%84%E9%80%9A%E4%BF%A1%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">两个 Tab 页面的通信方式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5\"><span class=\"toc-text\">参考链接</span></a></li></ol>","author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"眼中有光，心中有梦，脚下有路","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"前端基础-CSS3","uid":"04f522a5377d4d5450ce4cf8a54e76ff","slug":"2022-07-17css","date":"2022-07-17T07:39:25.000Z","updated":"2023-02-20T21:20:56.468Z","comments":true,"path":"api/articles/2022-07-17css.json","keywords":null,"cover":[],"text":"浏览器工作原理 当浏览器展示一个文件的时候，它必须兼顾文件的内容和文件的样式信息 如何加载 CSS 和 HTML下面的步骤是浏览加载网页的简化版本: 浏览器载入 HTML 文件（比如从网络上获取）。 将 HTML 文件转化成一个 DOM（Document Object Model...","link":"","photos":[],"count_time":{"symbolsCount":"17k","symbolsTime":"15 mins."},"categories":[{"name":"前端基础","slug":"前端基础","count":47,"path":"api/categories/前端基础.json"}],"tags":[{"name":"前端基础","slug":"前端基础","count":49,"path":"api/tags/前端基础.json"},{"name":"面试","slug":"面试","count":19,"path":"api/tags/面试.json"}],"author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"眼中有光，心中有梦，脚下有路","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}},"next_post":{"title":"前端基础-http","uid":"2467747971f59a01619a9d5abd6f99a3","slug":"2022-07-16http","date":"2022-07-16T04:47:18.000Z","updated":"2023-02-20T21:20:56.467Z","comments":true,"path":"api/articles/2022-07-16http.json","keywords":null,"cover":[],"text":"HTTP ⽅法HTTP1.0 定义了三种请求⽅法： GET, POST 和 HEAD ⽅法HTTP1.1 新增了五种请求⽅法：OPTIONS, PUT, DELETE, TRACE 和 CONNECT HTTP ⽅法的理论作⽤ GET: 通常⽤于请求服务器发送某些资源 HEAD:...","link":"","photos":[],"count_time":{"symbolsCount":"21k","symbolsTime":"19 mins."},"categories":[{"name":"前端基础","slug":"前端基础","count":47,"path":"api/categories/前端基础.json"}],"tags":[{"name":"前端基础","slug":"前端基础","count":49,"path":"api/tags/前端基础.json"},{"name":"面试","slug":"面试","count":19,"path":"api/tags/面试.json"},{"name":"http","slug":"http","count":6,"path":"api/tags/http.json"}],"author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"眼中有光，心中有梦，脚下有路","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}}}