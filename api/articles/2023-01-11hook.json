{"title":"普通数组/稀疏数组排序","uid":"0b323b28c2702d089485911093b73997","slug":"2023-01-11hook","date":"2023-01-11T09:09:12.000Z","updated":"2023-02-20T21:20:56.481Z","comments":true,"path":"api/articles/2023-01-11hook.json","keywords":null,"cover":[],"content":"<h2 id=\"稀疏数组\"><a href=\"#稀疏数组\" class=\"headerlink\" title=\"稀疏数组\"></a>稀疏数组</h2><img src=\"http://t-blog-images.aijs.top/img/202301111711545.webp\" style=\"width:500px;max-width:100%\"/>\n\n<h2 id=\"普通数组\"><a href=\"#普通数组\" class=\"headerlink\" title=\"普通数组\"></a>普通数组</h2><img src=\"http://t-blog-images.aijs.top/img/202301111714587.webp\" style=\"width:500px;max-width:100%\" />\n\n<h2 id=\"useSyncTwoListState\"><a href=\"#useSyncTwoListState\" class=\"headerlink\" title=\"useSyncTwoListState\"></a>useSyncTwoListState</h2><p><code>用于：同步两个数组的值，从使用的角度来看就是一个 useState 操作，逻辑完全内置</code></p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">import &#123; isFunction, listWithKeyToObject &#125; from &quot;@&#x2F;utils&#x2F;common&quot;;\nimport &#123; useMemoizedFn &#125; from &quot;ahooks&quot;;\nimport &#123; useState &#125; from &quot;react&quot;;\n\nexport const useSyncTwoListState &#x3D; &lt;T extends Array&lt;&#123; show: boolean &#125;&gt;&gt;(\n  defaultValue\n) &#x3D;&gt; &#123;\n  &#x2F;&#x2F; 普通数组\n  const [list, setList] &#x3D; useState&lt;T&gt;(defaultValue);\n  &#x2F;&#x2F; 稀疏数组\n  const [showList, setShowList] &#x3D; useState&lt;T&gt;(defaultValue);\n  &#x2F;&#x2F; 更新普通数组\n  const onUpdateList &#x3D; useMemoizedFn(\n    (state: T | ((v: T) &#x3D;&gt; T), cb?: (v: T) &#x3D;&gt; void) &#x3D;&gt; &#123;\n      if (isFunction(state)) &#123;\n        setList((pre_val) &#x3D;&gt; &#123;\n          &#x2F;&#x2F; @ts-ignore\n          const datas: T &#x3D; state?.(pre_val);\n          setShowList(datas.filter((item) &#x3D;&gt; item.show) as T);\n          cb?.(datas);\n          return datas;\n        &#125;);\n      &#125; else &#123;\n        setList(state);\n        &#x2F;&#x2F; @ts-ignore\n        cb?.(state);\n        setShowList((state as any[]).filter((item) &#x3D;&gt; item.show) as T);\n      &#125;\n    &#125;\n  );\n  &#x2F;&#x2F; 更新稀疏数组\n  const onUpdateShowList &#x3D; useMemoizedFn(\n    (state: T | ((v: any) &#x3D;&gt; T), cb: (v: T) &#x3D;&gt; void) &#x3D;&gt; &#123;\n      if (isFunction(state)) &#123;\n        setShowList((preShowList) &#x3D;&gt; &#123;\n          &#x2F;&#x2F; @ts-ignore\n          const _showList: T &#x3D; state?.(preShowList);\n          setList((preList) &#x3D;&gt; &#123;\n            let idx &#x3D; 0;\n            &#x2F;&#x2F; 这个地方是重点：如何将稀疏（子）数组同步到普通（主）数组\n            return preList.map((item) &#x3D;&gt; &#123;\n              if (!item.show) &#123;\n                return item;\n              &#125; else &#123;\n                &#x2F;&#x2F; eslint-disable-next-line no-plusplus\n                return _showList[idx++];\n              &#125;\n            &#125;) as T;\n          &#125;);\n          cb?.(_showList);\n          return _showList;\n        &#125;);\n      &#125; else &#123;\n        setShowList(state);\n        const showObj &#x3D; listWithKeyToObject(state as any[], &quot;id&quot;);\n        setList((preList) &#x3D;&gt; &#123;\n          const newList &#x3D; (preList || [])?.map((item) &#x3D;&gt; (&#123;\n            ...item,\n            ...showObj[item.id],\n          &#125;)) as T;\n          cb?.(newList);\n          return newList;\n        &#125;);\n      &#125;\n    &#125;\n  );\n\n  return [list, showList, onUpdateList, onUpdateShowList] as const;\n&#125;;</code></pre>\n\n<h2 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h2><pre class=\"line-numbers language-tsx\" data-language=\"tsx\"><code class=\"language-tsx\">const [list, showList, setList, setShowList] &#x3D; useSyncTwoListState&lt;IDragItem[]&gt;(\n  [] as IDragItem[]\n);\n\nconst onDelete &#x3D; useMemoizedFn((v: IDragItem) &#x3D;&gt; &#123;\n  const target &#x3D; list.find((item) &#x3D;&gt; item.id &#x3D;&#x3D;&#x3D; v.id) || (&#123;&#125; as IDragItem);\n  target.show &#x3D; false;\n  const ls &#x3D; deepClone(list);\n  setList(ls);\n  handleUpdateOverviewOrders(ls, () &#x3D;&gt; &#123;\n    message.success(&quot;移除成功，可通过添加指标重新添加&quot;);\n  &#125;);\n&#125;);\n\n&#x2F;** 更新 *&#x2F;\nconst handleGetOverviewOrders &#x3D; useMemoizedFn(async () &#x3D;&gt; &#123;\n  try &#123;\n    setLoading(true);\n    const res &#x3D; await getOverviewOrders();\n    if (res.success) &#123;\n      let _list;\n      if (res.result?.length) &#123;\n        _list &#x3D; JSON.parse(res.result[0]).map((item) &#x3D;&gt; (&#123;\n          ...allListObj[item.id],\n          ...item,\n        &#125;));\n      &#125; else &#123;\n        _list &#x3D; allList;\n      &#125;\n      setList(_list);\n    &#125;\n  &#125; finally &#123;\n    &#x2F;* continue regardless of error *&#x2F;\n    setLoading(false);\n  &#125;\n&#125;);\n&#x2F;** 更新 *&#x2F;\nconst onUpdateOverviewOrders &#x3D; useMemoizedFn(async (datas, showTip?) &#x3D;&gt; &#123;\n  const ls &#x3D; datas.map((item) &#x3D;&gt; (&#123;\n    id: item.id,\n    code: item.code,\n    show: item.show,\n  &#125;));\n  const res &#x3D; await updateOverviewOrders([JSON.stringify(ls)]);\n  if (res.success) &#123;\n    showTip ? showTip?.() : message.success(&quot;操作成功&quot;);\n  &#125;\n&#125;);\n\nconst &#123; run: handleUpdateOverviewOrders &#125; &#x3D; useDebounceFn(\n  onUpdateOverviewOrders,\n  &#123; wait: 500 &#125;\n);\n\nconst handleUpdateOverview &#x3D; useMemoizedFn(async (values) &#x3D;&gt; &#123;\n  setList(values, (datas) &#x3D;&gt; &#123;\n    handleUpdateOverviewOrders(datas);\n  &#125;);\n&#125;);\nconst handleUpdateShowOverviews &#x3D; useMemoizedFn(async (values) &#x3D;&gt; &#123;\n  setShowList(values, (datas) &#x3D;&gt; &#123;\n    handleUpdateOverviewOrders(datas);\n  &#125;);\n&#125;);\n\nuseEffect(() &#x3D;&gt; &#123;\n  handleGetOverviewOrders();\n  &#x2F;&#x2F; handleUpdateOverviewOrders(allList)\n&#125;, []);</code></pre>\n\n<h2 id=\"接口设计\"><a href=\"#接口设计\" class=\"headerlink\" title=\"接口设计\"></a>接口设计</h2><p>将 <code>updateOverviewOrders</code> 、<code>getOverviewOrders</code> 设计为一个 POST 接口，传递 <code>[]</code>数组为获取数据，传递数据<code>[&#39;字符串&#39;]</code>为更新数据</p>\n<p><code>这不是一个好的接口设计，工作以来第一次遇到，还是有点出乎意料的</code></p>\n","text":"稀疏数组 普通数组 useSyncTwoListState用于：同步两个数组的值，从使用的角度来看就是一个 useState 操作，逻辑完全内置 import &#123; isFunction, listWithKeyToObject &#125; from &quot;@&#...","link":"","photos":[],"count_time":{"symbolsCount":"4.9k","symbolsTime":"4 mins."},"categories":[{"name":"React","slug":"React","count":39,"path":"api/categories/React.json"}],"tags":[{"name":"React","slug":"React","count":33,"path":"api/tags/React.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%A8%80%E7%96%8F%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">稀疏数组</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%99%AE%E9%80%9A%E6%95%B0%E7%BB%84\"><span class=\"toc-text\">普通数组</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#useSyncTwoListState\"><span class=\"toc-text\">useSyncTwoListState</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">使用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8E%A5%E5%8F%A3%E8%AE%BE%E8%AE%A1\"><span class=\"toc-text\">接口设计</span></a></li></ol>","author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>举手向苍穹，并非一定要摘到星月</p><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"明天上线，惊不惊喜","uid":"829e58fef6f7c95dbeb167f4231498ea","slug":"2023-01-11反思总结","date":"2023-01-11T13:26:25.000Z","updated":"2023-02-20T21:20:56.481Z","comments":true,"path":"api/articles/2023-01-11反思总结.json","keywords":null,"cover":"http://t-blog-images.aijs.top/img/202301171732450.webp","text":"措手不及10 号下午突然，hr 那边同事，跑过来说，晚上要发布本次开发的内容。11 号要用，已经在 hr 大群中同步信息了。相关设计图也已经做出来。挺意外的，反复确认了几次，确实是：“发布到线上”，到了下班时间，后端走了～ 为什么会发生 这个项目经手的人太多 公司裁员，几乎干掉了...","link":"","photos":[],"count_time":{"symbolsCount":573,"symbolsTime":"1 mins."},"categories":[{"name":"复盘","slug":"复盘","count":7,"path":"api/categories/复盘.json"}],"tags":[{"name":"复盘","slug":"复盘","count":7,"path":"api/tags/复盘.json"}],"author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>举手向苍穹，并非一定要摘到星月</p><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}},"next_post":{"title":"客户端渲染与服务端渲染不一致","uid":"c3f5e3bc603af25e48391385cd8562c8","slug":"2023-01-10","date":"2023-01-10T03:29:02.000Z","updated":"2023-07-08T01:06:25.351Z","comments":true,"path":"api/articles/2023-01-10.json","keywords":null,"cover":[],"text":"有的有警告，有的没有警告 修改前import &#123; ICardItem &#125; from &#39;@&#x2F;components&#x2F;drag-grid&#x2F;context&#39;; &#x2F;&#x2F; useNextLocalStorag...","link":"","photos":[],"count_time":{"symbolsCount":"37k","symbolsTime":"34 mins."},"categories":[{"name":"React","slug":"React","count":39,"path":"api/categories/React.json"}],"tags":[{"name":"React","slug":"React","count":33,"path":"api/tags/React.json"}],"author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>举手向苍穹，并非一定要摘到星月</p><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}}}