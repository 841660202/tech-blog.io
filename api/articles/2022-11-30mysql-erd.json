{"title":"5.系统学习 mysql erd","uid":"50df4ae65a1c6c2ab192fc07c4455498","slug":"2022-11-30mysql-erd","date":"2022-11-30T09:13:32.000Z","updated":"2022-11-30T13:38:57.490Z","comments":true,"path":"api/articles/2022-11-30mysql-erd.json","keywords":null,"cover":"https://img2.baidu.com/it/u=3082189317,4216979427&fm=253&fmt=auto&app=120&f=PNG?w=1000&h=500","content":"<h2 id=\"ER\"><a href=\"#ER\" class=\"headerlink\" title=\"ER\"></a>ER</h2><h3 id=\"ER-实体关系-Entity-Relationship\"><a href=\"#ER-实体关系-Entity-Relationship\" class=\"headerlink\" title=\"ER 实体关系 Entity Relationship\"></a>ER 实体关系 Entity Relationship</h3><h3 id=\"ER-图鱼尾符号\"><a href=\"#ER-图鱼尾符号\" class=\"headerlink\" title=\"ER 图鱼尾符号\"></a>ER 图鱼尾符号</h3><h4 id=\"demo1\"><a href=\"#demo1\" class=\"headerlink\" title=\"demo1\"></a>demo1</h4><img src=\"http://t-blog-images.aijs.top/img/202211281703920.webp\" style=\"width:500px;max-width:100%\" />\n\n<p><a href=\"https://blog.csdn.net/u014100552/article/details/120851258\" target=\"_blank\" >见</a></p>\n<h4 id=\"demo2\"><a href=\"#demo2\" class=\"headerlink\" title=\"demo2\"></a>demo2</h4><img src=\"http://t-blog-images.aijs.top/img/202211281701016.webp\" style=\"width:500px;max-width:100%\" />\n\n<p><a href=\"https://www.yiibai.com/dbms/dbms-notation-of-er-diagram.html\" target=\"_blank\" >见</a></p>\n<h2 id=\"vscode-vuerd-vscode-插件自动生成\"><a href=\"#vscode-vuerd-vscode-插件自动生成\" class=\"headerlink\" title=\"vscode vuerd-vscode 插件自动生成\"></a>vscode vuerd-vscode 插件自动生成</h2><p>这个图是自动生成的，</p>\n<p>1 对多<br>0&#x2F;1 对多</p>\n<p>这些事如何在 sql 中体现的？难道是对数据进行分析</p>\n<img src=\"http://t-blog-images.aijs.top/img/202211301647189.webp\" />\n\n<h2 id=\"vuerd-vscode-golang-实体生成（需要自己写脚本）\"><a href=\"#vuerd-vscode-golang-实体生成（需要自己写脚本）\" class=\"headerlink\" title=\"vuerd-vscode golang 实体生成（需要自己写脚本）\"></a>vuerd-vscode golang 实体生成（需要自己写脚本）</h2><p><strong>vuerd-vscode 源码看下，是否有搂表的代码</strong></p>\n<img src=\"http://t-blog-images.aijs.top/img/202211301716008.webp\" />\n\n<p><span style=\"color: red\">以下内容不完整，我还没改呢，暂时先放着，有空的时候来写</span></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">[DATA]\n  .reduce((buffer, data) &#x3D;&gt; &#123;\n    const state &#x3D; data.state;\n    const helper &#x3D; data.helper;\n    const dataTypes &#x3D; data.dataTypes;\n\n    const tableState &#x3D; state.tableState;\n    const canvasState &#x3D; state.canvasState;\n    &#x2F;&#x2F; 类型映射\n    const convertTypeMap &#x3D; &#123;\n      int: &quot;number&quot;,\n      long: &quot;number&quot;,\n      float: &quot;number&quot;,\n      double: &quot;number&quot;,\n      decimal: &quot;number&quot;,\n      boolean: &quot;boolean&quot;,\n      string: &quot;string&quot;,\n      lob: &quot;string&quot;,\n      date: &quot;string&quot;,\n      dateTime: &quot;string&quot;,\n      time: &quot;string&quot;,\n    &#125;;\n\n    const getType &#x3D; (name) &#x3D;&gt; &#123;\n      const dataType &#x3D; dataTypes.find(\n        (dataType) &#x3D;&gt;\n          name.toLowerCase().indexOf(dataType.name.toLowerCase()) &#x3D;&#x3D;&#x3D; 0\n      );\n      return dataType ? dataType.type : &quot;string&quot;;\n    &#125;;\n\n    const getNameCase &#x3D; (name, nameCase) &#x3D;&gt; &#123;\n      let changeName &#x3D; name;\n      switch (nameCase) &#123;\n        case &quot;camelCase&quot;:\n          changeName &#x3D; helper.camelCase(name);\n          break;\n        case &quot;pascalCase&quot;:\n          changeName &#x3D; helper.pascalCase(name);\n          break;\n        case &quot;snakeCase&quot;:\n          changeName &#x3D; helper.snakeCase(name);\n          break;\n      &#125;\n      return changeName;\n    &#125;;\n\n    const orderByNameASC &#x3D; (tables) &#x3D;&gt;\n      tables.sort((a, b) &#x3D;&gt; &#123;\n        const nameA &#x3D; a.name.toLowerCase();\n        const nameB &#x3D; b.name.toLowerCase();\n        if (nameA &lt; nameB) &#123;\n          return -1;\n        &#125; else if (nameA &gt; nameB) &#123;\n          return 1;\n        &#125;\n        return 0;\n      &#125;);\n    &#x2F;&#x2F; 格式化表\n    function formatTable(table) &#123;\n      const tableName &#x3D; getNameCase(table.name, canvasState.tableCase);\n      if (table.comment.trim() !&#x3D;&#x3D; &quot;&quot;) &#123;\n        buffer.push(&#96;&#x2F;&#x2F; $&#123;table.comment&#125;&#96;);\n      &#125;\n      buffer.push(&#96;type $&#123;tableName&#125; &#123;&#96;);\n      table.columns.forEach((column) &#x3D;&gt; &#123;\n        formatColumn(column);\n      &#125;);\n      buffer.push(&#96;&#125;&#96;);\n    &#125;\n    &#x2F;&#x2F; 格式化列\n    function formatColumn(column) &#123;\n      const columnName &#x3D; getNameCase(column.name, canvasState.columnCase);\n      &#x2F;&#x2F; 生成类型\n      const typeName &#x3D; getType(column.dataType);\n      if (column.comment.trim() !&#x3D;&#x3D; &quot;&quot;) &#123;\n        buffer.push(&#96;  &#x2F;&#x2F; $&#123;column.comment&#125;&#96;);\n      &#125;\n      buffer.push(\n        &#96;  $&#123;columnName&#125;: $&#123;convertTypeMap[typeName]&#125;$&#123;\n          column.option.notNull ? &quot;&quot; : &quot; | null&quot;\n        &#125;;&#96;\n      );\n    &#125;\n\n    orderByNameASC(tableState.tables);\n\n    tableState.tables.forEach((table) &#x3D;&gt; &#123;\n      formatTable(table);\n      buffer.push(&quot;&quot;);\n    &#125;);\n\n    return buffer;\n  &#125;, [])\n  .join(&quot;\\n&quot;);</code></pre>\n\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><p><a href=\"https://blog.csdn.net/u014100552/article/details/120851258\" target=\"_blank\" >ER 图鱼尾符号</a></p>\n<p><a href=\"https://www.yiibai.com/dbms/dbms-notation-of-er-diagram.html\" target=\"_blank\" >ER 图的表示法</a></p>\n","text":"ERER 实体关系 Entity RelationshipER 图鱼尾符号demo1 见 demo2 见 vscode vuerd-vscode 插件自动生成这个图是自动生成的， 1 对多0&#x2F;1 对多 这些事如何在 sql 中体现的？难道是对数据进行分析 vuerd-v...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"Mysql","slug":"Mysql","count":12,"path":"api/categories/Mysql.json"}],"tags":[{"name":"Mysql","slug":"Mysql","count":12,"path":"api/tags/Mysql.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#ER\"><span class=\"toc-text\">ER</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#ER-%E5%AE%9E%E4%BD%93%E5%85%B3%E7%B3%BB-Entity-Relationship\"><span class=\"toc-text\">ER 实体关系 Entity Relationship</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#ER-%E5%9B%BE%E9%B1%BC%E5%B0%BE%E7%AC%A6%E5%8F%B7\"><span class=\"toc-text\">ER 图鱼尾符号</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#demo1\"><span class=\"toc-text\">demo1</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#demo2\"><span class=\"toc-text\">demo2</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#vscode-vuerd-vscode-%E6%8F%92%E4%BB%B6%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90\"><span class=\"toc-text\">vscode vuerd-vscode 插件自动生成</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#vuerd-vscode-golang-%E5%AE%9E%E4%BD%93%E7%94%9F%E6%88%90%EF%BC%88%E9%9C%80%E8%A6%81%E8%87%AA%E5%B7%B1%E5%86%99%E8%84%9A%E6%9C%AC%EF%BC%89\"><span class=\"toc-text\">vuerd-vscode golang 实体生成（需要自己写脚本）</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5\"><span class=\"toc-text\">参考链接</span></a></li></ol>","author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"眼中有光，心中有梦，脚下有路","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"6.系统学习 mysql 集合","uid":"e534e8fd944f5586c5ed602b0ca27489","slug":"2022-11-30mysql-set","date":"2022-11-30T13:28:00.000Z","updated":"2022-11-30T13:38:44.192Z","comments":true,"path":"api/articles/2022-11-30mysql-set.json","keywords":null,"cover":"https://img2.baidu.com/it/u=3082189317,4216979427&fm=253&fmt=auto&app=120&f=PNG?w=1000&h=500","text":"并集 UNIONMySQL UNION 运算符允许您将两个或多个查询结果集合并到一个结果集中要使用 UNION 运算符组合两个或多个查询的结果集，必须遵循以下基本规则： 首先，所有 SELECT 语句中出现的列的数量和顺序 必须相同。 其次，列的数据类型必须相同或可转换。 默认情...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"Mysql","slug":"Mysql","count":12,"path":"api/categories/Mysql.json"}],"tags":[{"name":"Mysql","slug":"Mysql","count":12,"path":"api/tags/Mysql.json"}],"author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"眼中有光，心中有梦，脚下有路","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}},"next_post":{"title":"4.系统学习 mysql 事务","uid":"968e01e6b4020ddd66a1e79ae770349d","slug":"2022-11-30mysql-事务","date":"2022-11-30T06:04:20.000Z","updated":"2022-11-30T13:39:08.839Z","comments":true,"path":"api/articles/2022-11-30mysql-事务.json","keywords":null,"cover":"https://img2.baidu.com/it/u=3082189317,4216979427&fm=253&fmt=auto&app=120&f=PNG?w=1000&h=500","text":"事务为什么需要事务MySQL 事务允许您执行一组 MySQL 操作，以确保数据库永远不会包含部分操作的结果。 在一组操作中，如果其中一个操作失败，则会发生回滚以将数据库还原到其原始状态。 如果没有发生错误，则将整个语句集提交给数据库。 事务特点事务是必须满足 4 个条件(ACID...","link":"","photos":[],"count_time":{"symbolsCount":"6.8k","symbolsTime":"6 mins."},"categories":[{"name":"Mysql","slug":"Mysql","count":12,"path":"api/categories/Mysql.json"}],"tags":[{"name":"Mysql","slug":"Mysql","count":12,"path":"api/tags/Mysql.json"}],"author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"眼中有光，心中有梦，脚下有路","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}}}