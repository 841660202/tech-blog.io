{"title":"position sticky 失效了","uid":"8a2b4fbe9c65dfb47fc690fa692de0b8","slug":"2023-01-19sticky","date":"2023-01-19T09:22:16.000Z","updated":"2023-02-20T21:20:56.485Z","comments":true,"path":"api/articles/2023-01-19sticky.json","keywords":null,"cover":[],"content":"<h2 id=\"原理\"><a href=\"#原理\" class=\"headerlink\" title=\"原理\"></a>原理</h2><p><strong>sticky</strong></p>\n<ol>\n<li>元素根据正常文档流进行定位，</li>\n<li>然后相对它的最近滚动祖先（nearest scrolling ancestor）和 containing block（最近块级祖先 nearest block-level ancestor），包括 table-related 元素，基于 top、right、bottom 和 left 的值进行偏移。</li>\n<li>偏移值不会影响任何其他元素的位置。 该值总是创建一个新的层叠上下文（stacking context）。</li>\n<li>注意，<code>一个 sticky 元素会“固定”在离它最近的一个拥有“滚动机制”的祖先上（当该祖先的 overflow 是 hidden、scroll、auto 或 overlay 时）</code>，<code>即便这个祖先不是最近的真实可滚动祖先</code>。这有效地抑制了任何“sticky”行为（详情见 Github issue on W3C CSSWG）。</li>\n</ol>\n<h2 id=\"tab\"><a href=\"#tab\" class=\"headerlink\" title=\"tab\"></a>tab</h2><h3 id=\"图\"><a href=\"#图\" class=\"headerlink\" title=\"图\"></a>图</h3><img src=\"http://t-blog-images.aijs.top/img/202301191722715.webp\" />\n\n<h3 id=\"代码\"><a href=\"#代码\" class=\"headerlink\" title=\"代码\"></a>代码</h3><pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">position: sticky;\ntop: 206px;\nz-index: 8;\nbackground: #fff;</code></pre>\n\n<h2 id=\"ant-table-表头\"><a href=\"#ant-table-表头\" class=\"headerlink\" title=\"ant table 表头\"></a>ant table 表头</h2><h3 id=\"图-1\"><a href=\"#图-1\" class=\"headerlink\" title=\"图\"></a>图</h3><img src=\"http://t-blog-images.aijs.top/img/202301191720723.webp\" />\n\n<h3 id=\"代码-1\"><a href=\"#代码-1\" class=\"headerlink\" title=\"代码\"></a>代码</h3><pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">overflow: hidden;\nposition: sticky;\ntop: 268px; &#x2F;*此值需要动态计算 *&#x2F;\n&#x2F;* background: orange; *&#x2F;\nz-index: 8;</code></pre>\n\n<h2 id=\"setting-icon\"><a href=\"#setting-icon\" class=\"headerlink\" title=\"setting icon\"></a>setting icon</h2><h3 id=\"图-2\"><a href=\"#图-2\" class=\"headerlink\" title=\"图\"></a>图</h3><img src=\"http://t-blog-images.aijs.top/img/202301201037376.webp\" />\n\n<h3 id=\"代码-2\"><a href=\"#代码-2\" class=\"headerlink\" title=\"代码\"></a>代码</h3><pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">right: 9px;\ntransform: translateY(55px);\nposition: absolute;\nwidth: 50px;\nheight: 36px;\nbackground: orange;\nfont-size: 12px;</code></pre>\n\n<p>这个 icon 不可放到 table 的表头进行<code>sticky</code>定位，原因是：垂直方向是 ok 的，水平存在滚动，并不适合</p>\n<h2 id=\"setting-icon-组件暴露到外部\"><a href=\"#setting-icon-组件暴露到外部\" class=\"headerlink\" title=\"setting icon 组件暴露到外部\"></a>setting icon 组件暴露到外部</h2><img src=\"http://t-blog-images.aijs.top/img/202301281526243.webp\" />\n\n<img src=\"http://t-blog-images.aijs.top/img/202301281530205.webp\" />\n\n<h3 id=\"问题：\"><a href=\"#问题：\" class=\"headerlink\" title=\"问题：\"></a>问题：</h3><ol>\n<li>setting icon 控制表头字段展示，setting 取自上下文如下：</li>\n<li>table context 并没有暴露到外部业务中，所以不能将 setting 组件直接放到 context 外部</li>\n<li>业务中 <code>tab 切换</code> 、<code>table 的表头</code>和 <code>setting组件</code> 又必须渲染到同一的 BFC，否则 sticky 不生效</li>\n</ol>\n<h3 id=\"方案-1\"><a href=\"#方案-1\" class=\"headerlink\" title=\"方案 1:\"></a>方案 1:</h3><p>将 table context 做整个 detail 页面的 context，改动很大，有一定的工作量，并且可能造成其他 bug</p>\n<h3 id=\"方案-2（简单）\"><a href=\"#方案-2（简单）\" class=\"headerlink\" title=\"方案 2（简单）:\"></a>方案 2（简单）:</h3><p>将有 table context 装配完的 setting 组件暴露到外部，作为函数的参数用到 detail 顶级组件中进行渲染，使 <code>tab 切换</code> 、<code>table 的表头</code>和 <code>setting组件</code>满足<code>position: sticky的生效条件</code> <a href=\"https://developer.mozilla.org/zh-CN/docs/Web/CSS/position\" target=\"_blank\" >见</a></p>\n<h2 id=\"最后-useRefSize\"><a href=\"#最后-useRefSize\" class=\"headerlink\" title=\"最后 useRefSize\"></a>最后 useRefSize</h2><ol>\n<li>上面是手动调的的样式不具备灵活性</li>\n<li>ahooks 使用 useSize 可以计算元素高度，使用时候二次封装下，将 useRef 和 useSize 封装为一个 useRefSize</li>\n<li>对于复杂的结构，可能需要结合<code>css-in-js</code>实现, 动态样式类的计算</li>\n</ol>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">&#x2F;&#x2F; use-ref-size.ts\nimport &#123; useSize &#125; from &quot;ahooks&quot;;\nimport &#123; useRef &#125; from &quot;react&quot;;\n\ntype Size &#x3D; &#123;\n  width?: number;\n  height?: number;\n&#125;;\n\nexport const useRefSize &#x3D; () &#x3D;&gt; &#123;\n  const ref &#x3D; useRef(null);\n  const size &#x3D; useSize(ref);\n  return [ref, size as Size] as const;\n&#125;;</code></pre>\n\n<pre class=\"line-numbers language-tsx\" data-language=\"tsx\"><code class=\"language-tsx\">&#x2F;** @jsxRuntime classic *&#x2F;\n&#x2F;** @jsx jsx *&#x2F;\n&#x2F;** @jsxFrag React.Fragment *&#x2F;\nimport &#123; css, jsx &#125; from &quot;@emotion&#x2F;react&quot;;\n&#x2F;&#x2F; ...\n&lt;div\n  css&#x3D;&#123;css&#96;\n    padding: 0 20px;\n    width: $&#123;ContainerSize.width&#125;px;\n    .ant-table-container .ant-table-header &#123;\n      overflow: hidden;\n      position: sticky;\n      top: $&#123;pos_setting_top&#125;px;\n      z-index: 8;\n    &#125;\n  &#96;&#125;\n&gt;\n  &#123;&#x2F;* .... *&#x2F;&#125;\n&lt;&#x2F;div&gt;;\n\n&#x2F;&#x2F; ....</code></pre>\n","text":"原理sticky 元素根据正常文档流进行定位， 然后相对它的最近滚动祖先（nearest scrolling ancestor）和 containing block（最近块级祖先 nearest block-level ancestor），包括 table-related 元素，...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"CSS","slug":"CSS","count":4,"path":"api/categories/CSS.json"}],"tags":[{"name":"CSS","slug":"CSS","count":4,"path":"api/tags/CSS.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">原理</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#tab\"><span class=\"toc-text\">tab</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9B%BE\"><span class=\"toc-text\">图</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">代码</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#ant-table-%E8%A1%A8%E5%A4%B4\"><span class=\"toc-text\">ant table 表头</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9B%BE-1\"><span class=\"toc-text\">图</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81-1\"><span class=\"toc-text\">代码</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#setting-icon\"><span class=\"toc-text\">setting icon</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9B%BE-2\"><span class=\"toc-text\">图</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81-2\"><span class=\"toc-text\">代码</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#setting-icon-%E7%BB%84%E4%BB%B6%E6%9A%B4%E9%9C%B2%E5%88%B0%E5%A4%96%E9%83%A8\"><span class=\"toc-text\">setting icon 组件暴露到外部</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%97%AE%E9%A2%98%EF%BC%9A\"><span class=\"toc-text\">问题：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%A1%88-1\"><span class=\"toc-text\">方案 1:</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%A1%88-2%EF%BC%88%E7%AE%80%E5%8D%95%EF%BC%89\"><span class=\"toc-text\">方案 2（简单）:</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9C%80%E5%90%8E-useRefSize\"><span class=\"toc-text\">最后 useRefSize</span></a></li></ol>","author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Map & Set & Object","uid":"4a39cce638cfb347201792d2fa0ff3a8","slug":"2023-01-21map&set","date":"2023-01-21T06:48:19.000Z","updated":"2023-02-20T21:20:56.485Z","comments":true,"path":"api/articles/2023-01-21map&set.json","keywords":null,"cover":null,"text":"MapMap 的特点 有序： Map 对象保存键值对，并且能够记住键的原始插入顺序。 键值随意：任何值（对象或者基本类型）都可以作为一个键或一个值。 Map 对象是键值对的集合。 键唯一：Map 中的一个键只能出现一次；它在 Map 的集合中是独一无二的。 可迭代：Map 对象按...","link":"","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"前端基础","slug":"前端基础","count":54,"path":"api/categories/前端基础.json"}],"tags":[{"name":"前端基础","slug":"前端基础","count":56,"path":"api/tags/前端基础.json"}],"author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}},"next_post":{"title":"有时效性的get请求缓存","uid":"b4cbd5b4715b471baee9e1ca3749d21c","slug":"2023-01-19cache-get","date":"2023-01-19T07:53:50.000Z","updated":"2023-02-20T21:20:56.485Z","comments":true,"path":"api/articles/2023-01-19cache-get.json","keywords":null,"cover":null,"text":"背景 避免相同 GET 请求重复发送，占用网络资源 将数据在 service 曾进行缓存 为什么是 service 层原因： 在 store 或者 context 进行缓存，处理起来麻烦，比较分散，不易维护 思路 闭包进行缓存 相同get请求、有效时间内不发起请求,非 get 请...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"前端","slug":"前端","count":6,"path":"api/categories/前端.json"}],"tags":[{"name":"前端","slug":"前端","count":6,"path":"api/tags/前端.json"}],"author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}}}