{"title":"企业微信文件预览","uid":"74208bc76768a419347d0ad3e15c33b0","slug":"2022-07-05wxfile","date":"2022-07-05T15:16:30.000Z","updated":"2022-09-16T13:54:56.210Z","comments":true,"path":"api/articles/2022-07-05wxfile.json","keywords":null,"cover":[],"content":"<h2 id=\"企业微信文件预览\"><a href=\"#企业微信文件预览\" class=\"headerlink\" title=\"企业微信文件预览\"></a>企业微信文件预览</h2><p><strong>试错 1:</strong></p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">const fileName &#x3D; &quot;xxxxx.jpeg&quot;; &#x2F;&#x2F; 举个例子\ndownloadAttachment(downloadUrl).then((res) &#x3D;&gt; &#123;\n  var reader &#x3D; new FileReader();\n  reader.readAsDataURL(res); &#x2F;&#x2F; 转换为base64，可以直接放入a标签href\n  reader.onload &#x3D; function (e) &#123;\n    const anchorEle &#x3D; document.createElement(&quot;a&quot;);\n    document.body.appendChild(anchorEle);\n    anchorEle.href &#x3D; e?.target?.result as any;\n    anchorEle.download &#x3D; fileName;\n    anchorEle.click();\n    setTimeout(() &#x3D;&gt; &#123;\n      document.body.removeChild(anchorEle);\n    &#125;);\n  &#125;;\n&#125;);</code></pre>\n\n<p><strong>试错 2: file-saver</strong></p>\n<p><strong>试错 3: file-saver</strong></p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">export const downloadFile &#x3D; (target, filename &#x3D; &quot;&quot;, type &#x3D; &quot;url&quot;) &#x3D;&gt; &#123;\n  const link &#x3D; document.createElement(&quot;a&quot;);\n  const body &#x3D; document.querySelector(&quot;body&quot;);\n  if (!body) return;\n\n  &#x2F;&#x2F; 需下载的文件类型\n  if (type &#x3D;&#x3D;&#x3D; &quot;url&quot;) &#123;\n    link.href &#x3D; target;\n  &#125; else if (type &#x3D;&#x3D;&#x3D; &quot;blob&quot;) &#123;\n    link.href &#x3D; window.URL.createObjectURL(target);\n  &#125;\n\n  &#x2F;&#x2F; 文件名\n  if (filename) link.download &#x3D; filename;\n\n  link.style.display &#x3D; &quot;none&quot;;\n  body.appendChild(link);\n\n  link.click();\n\n  window.URL.revokeObjectURL(link.href); &#x2F;&#x2F; 释放 URL 对象\n  body.removeChild(link);\n&#125;;</code></pre>\n\n<p>在浏览器上没问题，在企业微信上<code>嗝屁～</code>，有人要说了，直接<code>window.open(downloadUrl)</code>,通常来说没毛病。</p>\n<p><strong>可是</strong>，要在请求<code>downloadUrl</code>接口时候要加一个请求头，这尼玛整的～</p>\n<img src=\"http://t-blog-images.aijs.top/img/20220705223754.webp\" />\n\n<h2 id=\"这场景真-🐶\"><a href=\"#这场景真-🐶\" class=\"headerlink\" title=\"这场景真 🐶\"></a>这场景真 🐶</h2><p>为什么有这么奇葩的事情呢？—— 继之前，对同一个域名，以请求头区分是<strong>企业微信</strong>、<strong>非企业微信</strong>，两种环境的授权校验方式不同。本身涉及没使用 userAgent,设计缺陷，导致一连串问题。</p>\n<p>问：<code>你怎么不重构？</code> 答：<code>部门都被裁了，我再努力有用吗？</code></p>\n<h2 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h2><p>方案 1: 按照之前的设计，再申请个域名，按照域名把应用拆分（<code>这个要走审核</code>）</p>\n<p>方案 2: 后端处理用<code>userAgent</code>处理下，其他地方逻辑不动，只处理 a 标签下载的情况（<code>这个要后端改---没权限我觉得我自己改或许更快</code>）</p>\n<p>方案 3: 把 API 改了，哪里出问题改哪里 <code>api/wx/download</code> 给这个增加请求头， 代理到 <code>api/download</code>（<code>这里应该会带过来请求头</code>）</p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">let fileUrl &#x3D;\n  &quot;themis&#x2F;attach&#x2F;download?cloudKey&#x3D;&quot; +\n  attachment.themisCloudKey +\n  &quot;&amp;fileName&#x3D;&quot; +\n  encodeURIComponen(attachment.name);\n&#x2F;&#x2F; 企业微信\nif (getWechatUserAgent(navigator.userAgent)) &#123;\n  downloadFile(&#96;&#x2F;api&#x2F;redline&#x2F;wx&#x2F;$&#123;fileUrl&#125;&#96;);\n  &#x2F;&#x2F; 非企业微信\n&#125; else &#123;\n  downloadFile(&#96;&#x2F;api&#x2F;redline&#x2F;$&#123;fileUrl&#125;&#96;);\n&#125;</code></pre>\n\n<img src=\"http://t-blog-images.aijs.top/img/20220706000557.webp\" />\n\n<img src=\"http://t-blog-images.aijs.top/img/20220706000652.webp\" />\n\n<p>哈哈～，开心～</p>\n","text":"企业微信文件预览试错 1: const fileName &#x3D; &quot;xxxxx.jpeg&quot;; &#x2F;&#x2F; 举个例子 downloadAttachment(downloadUrl).then((res) &#x3D;&gt; &#123; v...","link":"","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"企业微信","slug":"企业微信","count":5,"path":"api/categories/企业微信.json"}],"tags":[{"name":"企业微信","slug":"企业微信","count":5,"path":"api/tags/企业微信.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BC%81%E4%B8%9A%E5%BE%AE%E4%BF%A1%E6%96%87%E4%BB%B6%E9%A2%84%E8%A7%88\"><span class=\"toc-text\">企业微信文件预览</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%99%E5%9C%BA%E6%99%AF%E7%9C%9F-%F0%9F%90%B6\"><span class=\"toc-text\">这场景真 🐶</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88\"><span class=\"toc-text\">解决方案</span></a></li></ol>","author":{"name":"陈海龙","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"需要就学呗，多大点事😂","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"cookie注入问题","uid":"4d4a2baebc5a8e28d7b1ee35ff588bdb","slug":"2022-07-12cookie","date":"2022-07-12T07:37:09.000Z","updated":"2022-09-16T13:54:56.211Z","comments":true,"path":"api/articles/2022-07-12cookie.json","keywords":null,"cover":[],"text":"问题注入的 cookie 怎么没有啦，在vconsole中调试查看，storage有cookie信息,接口调用，发现没有 cookie 被SSO校验拦截住了 抓包结果服务端渲染，中间有代理转发，nextjs 服务端自适应 接口请求 问题分析通过 chrome,手动注入调试发现正常...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"webview","slug":"webview","count":1,"path":"api/categories/webview.json"}],"tags":[{"name":"webview","slug":"webview","count":1,"path":"api/tags/webview.json"},{"name":"cookie","slug":"cookie","count":1,"path":"api/tags/cookie.json"}],"author":{"name":"陈海龙","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"需要就学呗，多大点事😂","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}},"next_post":{"title":"前端基础-js算法","uid":"b6eefb99ab4e0f88e52602483fde65dd","slug":"2022-07-04js","date":"2022-07-04T07:31:24.000Z","updated":"2022-09-16T13:54:56.209Z","comments":true,"path":"api/articles/2022-07-04js.json","keywords":null,"cover":[],"text":"排序冒泡排序 选择排序 插入排序 归并排序 希尔排序 快速排序 &#x2F;* 快排是冒泡的一种改进，基于分治思想 *&#x2F; const arr2 &#x3D; [2, 44, 1, 0, -22, 56, -78]; function quickSort2(arr) &#...","link":"","photos":[],"count_time":{"symbolsCount":"28k","symbolsTime":"26 mins."},"categories":[{"name":"前端基础","slug":"前端基础","count":27,"path":"api/categories/前端基础.json"}],"tags":[{"name":"前端基础","slug":"前端基础","count":29,"path":"api/tags/前端基础.json"}],"author":{"name":"陈海龙","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"需要就学呗，多大点事😂","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}}}