{"title":"数据存储的复盘","uid":"beed7925d3f184cc44d11ac5313f14be","slug":"2023-02-09数据","date":"2023-02-09T02:06:51.000Z","updated":"2023-02-20T21:20:56.488Z","comments":true,"path":"api/articles/2023-02-09数据.json","keywords":null,"cover":null,"content":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><ol>\n<li>列表查询查询条件，需要创建筛选器进行服务端存储</li>\n<li>用户打开页面获取筛选器列表</li>\n<li>点击筛选器列表，获取筛选器详情，并用筛选器详情进行列表查询操作</li>\n</ol>\n<p>要点：查询条件，与筛选器条件一致性</p>\n<h2 id=\"问题\"><a href=\"#问题\" class=\"headerlink\" title=\"问题\"></a>问题</h2><ol>\n<li>后端将筛选器存的数据进行非必要拆分</li>\n<li>筛选器与查询列表的接口条件字段对不上</li>\n<li>筛选器与查询列表的字段，数组类型，转化成字符串存储，返回的时候又要转化成数组去使用</li>\n<li>数组类型中的 number 类型，会被转化成 string 类型，无法与 select 进行选中，需要处理成 number 类型</li>\n<li>startTime、endTime 时间戳类型，前端没有传入数据，被后端默认为 0 处理了</li>\n<li>未传入的 id 类型（如业务 id）,被后端处理成了’0’</li>\n</ol>\n<p>理由：</p>\n<ol>\n<li>mysql 数据库存一个字符串太大，会字段过长，</li>\n<li>项目没有使用 mongodb</li>\n</ol>\n<p>导致前端要转数据，查询时候还要做一些错误数据、无用字段的清理</p>\n<details class=\"custom-details\">\n<summary>Details</summary>\n<p><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">export const cleanFilter &#x3D; (obj) &#x3D;&gt; &#123;\n  Object.keys(obj).forEach((k) &#x3D;&gt; &#123;\n    if (&#x2F;.+Infos$&#x2F;.test(k)) &#123;\n      delete obj[k];\n    &#125;\n    if (&#x2F;^modifie*&#x2F;.test(k)) &#123;\n      delete obj[k];\n    &#125;\n    if (&#x2F;^gmt*&#x2F;.test(k)) &#123;\n      delete obj[k];\n    &#125;\n  &#125;);\n  delete obj.creator;\n  delete obj.createdBy;\n  delete obj.createStart;\n  delete obj.createEnd;\n  delete obj.id;\n  &#x2F;&#x2F;   产生的原因，后端设计表时候defaultvalue设置为 0\n  obj.startTime &#x3D;&#x3D;&#x3D; 0 &amp;&amp; delete obj.startTime;\n  obj.endTime &#x3D;&#x3D;&#x3D; 0 &amp;&amp; delete obj.endTime;\n  &#x2F;&#x2F;   产生的原因，后端代码逻辑默认值的问题\n  obj.bizId &#x3D;&#x3D;&#x3D; &quot;0&quot; &amp;&amp; delete obj.bizId;\n  !obj.customerCode &amp;&amp; delete obj.customerCode;\n  !obj.customerInfo &amp;&amp; delete obj.customerInfo;\n  !obj.searchKey &amp;&amp; delete obj.searchKey;\n  return obj;\n&#125;;</code></pre>\n\n</p>\n</details>\n<h2 id=\"对于后端存储的思考\"><a href=\"#对于后端存储的思考\" class=\"headerlink\" title=\"对于后端存储的思考\"></a>对于后端存储的思考</h2><h3 id=\"需要存储的内容\"><a href=\"#需要存储的内容\" class=\"headerlink\" title=\"需要存储的内容\"></a>需要存储的内容</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; id: 筛选器id\n&#x2F;&#x2F; userId: 外键id\n&#x2F;&#x2F; filterInfo: 筛选器内容信息一个json&#x2F;jsonString结构\n&#x2F;&#x2F; filterName: 筛选器名称\n&#x2F;&#x2F; filterType: 筛选器类型</code></pre>\n\n<h3 id=\"存储方式\"><a href=\"#存储方式\" class=\"headerlink\" title=\"存储方式\"></a>存储方式</h3><ol>\n<li>mysql,<ol>\n<li>即使 filterInfo 很大，能大到哪里去？1M 肯定够了，再多就是不支持，</li>\n<li>用户会无聊搞这么大的查询条件？</li>\n<li>longText？</li>\n<li>即使后面需要处理，再处理成 mongodb 也是没问题的</li>\n</ol>\n</li>\n<li>mongodb， 不用 mysql，接入一个 mongodb 总行了吧<ol>\n<li>接入 mongodb 比数据拆解、转化来转化去的成本更低</li>\n<li>可维护性更高</li>\n</ol>\n</li>\n</ol>\n","text":"背景 列表查询查询条件，需要创建筛选器进行服务端存储 用户打开页面获取筛选器列表 点击筛选器列表，获取筛选器详情，并用筛选器详情进行列表查询操作 要点：查询条件，与筛选器条件一致性 问题 后端将筛选器存的数据进行非必要拆分 筛选器与查询列表的接口条件字段对不上 筛选器与查询列表的...","link":"","photos":[],"count_time":{"symbolsCount":"1.7k","symbolsTime":"2 mins."},"categories":[{"name":"复盘","slug":"复盘","count":7,"path":"api/categories/复盘.json"}],"tags":[{"name":"复盘","slug":"复盘","count":7,"path":"api/tags/复盘.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%83%8C%E6%99%AF\"><span class=\"toc-text\">背景</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">问题</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AF%B9%E4%BA%8E%E5%90%8E%E7%AB%AF%E5%AD%98%E5%82%A8%E7%9A%84%E6%80%9D%E8%80%83\"><span class=\"toc-text\">对于后端存储的思考</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%9C%80%E8%A6%81%E5%AD%98%E5%82%A8%E7%9A%84%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">需要存储的内容</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AD%98%E5%82%A8%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">存储方式</span></a></li></ol></li></ol>","author":{"name":"十三","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>多学一点，多想一点，多做一点</p><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"博客页面/源码分离","uid":"b615acafbb8ee4433c2f5fdfa0424a84","slug":"2023-02-09hexo","date":"2023-02-09T15:20:55.000Z","updated":"2023-02-20T21:20:56.487Z","comments":true,"path":"api/articles/2023-02-09hexo.json","keywords":null,"cover":[],"text":"背景源码&#x2F;页面放一起暴露，太不安全 创建新的仓库tech-blog.io 更改 hexo 配置# _config.yml deploy: type: git repo: https:&#x2F;&#x2F;github.com&#x2F;841660202&#x2F;t...","link":"","photos":[],"count_time":{"symbolsCount":307,"symbolsTime":"1 mins."},"categories":[{"name":"hexo","slug":"hexo","count":2,"path":"api/categories/hexo.json"}],"tags":[{"name":"hexo","slug":"hexo","count":4,"path":"api/tags/hexo.json"}],"author":{"name":"十三","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>多学一点，多想一点，多做一点</p><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}},"next_post":{"title":"垃圾回收机制","uid":"1e558081e29dbc1646c77a0cee4dbc74","slug":"2023-02-08GC","date":"2023-02-08T12:22:21.000Z","updated":"2023-05-15T13:17:32.975Z","comments":true,"path":"api/articles/2023-02-08GC.json","keywords":null,"cover":"http://t-blog-images.aijs.top/img/202302082055497.webp","text":"是什么清除不在使用的对象，释放所占用的内存 当定义一个变量，给它重新赋值一个新的对象后，原来的对象就不再使用了，就可以把它清除掉 策略 引用计数法 标记清除法 引用计数法 当对象被引用一次，引用数+1， 被取消引用一次，引用数-1， 当引用数为 0 的时候，就触发垃圾回收机制进行...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"前端基础","slug":"前端基础","count":54,"path":"api/categories/前端基础.json"}],"tags":[{"name":"前端基础","slug":"前端基础","count":56,"path":"api/tags/前端基础.json"}],"author":{"name":"十三","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>多学一点，多想一点，多做一点</p><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}}}