{"title":"2.系统学习 mysql 约束","uid":"6a629baafba13a0aeb236b74ca7f009f","slug":"2022-11-26mysql-约束","date":"2022-11-26T03:02:20.000Z","updated":"2022-12-02T14:12:51.574Z","comments":true,"path":"api/articles/2022-11-26mysql-约束.json","keywords":null,"cover":"https://img2.baidu.com/it/u=3082189317,4216979427&fm=253&fmt=auto&app=120&f=PNG?w=1000&h=500","content":"<h2 id=\"约束\"><a href=\"#约束\" class=\"headerlink\" title=\"约束\"></a>约束</h2><h3 id=\"非空-not-null\"><a href=\"#非空-not-null\" class=\"headerlink\" title=\"非空 not null\"></a>非空 not null</h3><p>NOT NULL 约束是列约束，迫使一列的值非 NULL 值。</p>\n<p>NOT NULL 约束的语法如下：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">column_name data_type NOT NULL DEFAULT value;\n-- 列 NOT NULL 只包含一个约束，它指定列不得包含任何 NULL 值的规则。\n\n-- 建表语句非空约束\nCREATE TABLE tasks (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    title VARCHAR(255) NOT NULL,\n    start_date DATE NOT NULL,\n    end_date DATE\n);\n\n\n-- 第三，将NOT NULL约束添加到end_date列。为此，您使用以下ALTER TABLE语句：\nALTER TABLE table_name\nCHANGE old_column_name new_column_name new_column_definition;</code></pre>\n\n<h3 id=\"主键-primary-key-（1-个、可组合）\"><a href=\"#主键-primary-key-（1-个、可组合）\" class=\"headerlink\" title=\"主键 primary key （1 个、可组合）\"></a>主键 primary key （1 个、可组合）</h3><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">-- 列尾增加主键约束\nCREATE TABLE users(\n   user_id INT AUTO_INCREMENT PRIMARY KEY,\n   username VARCHAR(40),\n   password VARCHAR(255),\n   email VARCHAR(255)\n);\n-- 语句尾部增加约束\nCREATE TABLE roles(\n   role_id INT AUTO_INCREMENT,\n   role_name VARCHAR(50),\n   PRIMARY KEY(role_id)\n);\n\n-- 组合主键\nCREATE TABLE user_roles(\n   user_id INT NOT NULL,\n   role_id INT NOT NULL,\n  --  组合\n   PRIMARY KEY(user_id,role_id),\n   FOREIGN KEY(user_id) REFERENCES users(user_id),\n   FOREIGN KEY(role_id) REFERENCES roles(role_id)\n);\n\n-- 增加主键约束\nALTER TABLE table_name\nADD PRIMARY KEY(primary_key_column);\n\n-- 与PRIMARY索引不同\n-- MySQL允许UNIQUE索引中有NULL值。\n-- 表可以有多个UNIQUE索引。\n\n\n\n-- 为username列添加 UNIQUE 索引。\nALTER TABLE users\nADD UNIQUE INDEX username_unique (username ASC) ;\n\n-- 为email列添加 UNIQUE 索引。\nALTER TABLE users\nADD UNIQUE INDEX email_unique (email ASC) ;</code></pre>\n\n<h3 id=\"外键-foreign-key-（可多个、可组合）\"><a href=\"#外键-foreign-key-（可多个、可组合）\" class=\"headerlink\" title=\"外键 foreign key （可多个、可组合）\"></a>外键 foreign key （可多个、可组合）</h3><p><strong>不同表外键</strong></p>\n<ul>\n<li>customers 表和 orders 表<code>之间的关系是一对多</code></li>\n<li>customers 表称为<code>父表</code>，orders 表称为<code>子表</code></li>\n</ul>\n<p><strong>相同表外键</strong></p>\n<ul>\n<li>子表和父表是相同的,<code>自关联</code></li>\n</ul>\n<p><strong>存在形式</strong></p>\n<ul>\n<li>外键可以是一个列或一组列。子表中的列通常引用父表中的主键列。</li>\n<li>表可以具有多个外键，子表中的每个外键可以引用不同的父表。</li>\n</ul>\n<p><strong>操作</strong></p>\n<ul>\n<li>建表时外键约束语句</li>\n<li>加列时外键约束语句</li>\n<li>增加外键约束</li>\n<li>删除外键约束</li>\n<li>组合外键约束</li>\n</ul>\n<p><strong>ON DELETE&#x2F;ON UPDATE</strong></p>\n<ul>\n<li><em>ON DELETE</em> 子句允许您定义<code>删除父表中的记录时子表中记录的内容</code>。如果省略 ON DELETE 子句并删除父表中包含子表中记录的记录，MySQL 将拒绝删除。此外，MySQL 还为您提供操作，以便您可以使用其他选项，例如 - <code>ON DELETE CASCADE</code>要求 MySQL 删除子表中的记录，当父表中的记录被删除时，记录将引用父表中的记录</li>\n<li><code>ON DELETE SET NULL</code> 不希望删除子表中的相关记录。MySQL 会将子表中的外键列值设置为 NULL 删除父表中的记录时，条件是子表中的外键列必须接受 NULL 值</li>\n<li><code>ON DELETE NO ACTION</code> 或 <code>ON DELETE RESTRICT</code> 操作，MySQL 将拒绝删除。<br/>\n<br/></li>\n<li><em>ON UPDATE</em> 子句使您可以指定<code>更新父表中的行时子表中的行会发生什么</code>。您可以省略 ON UPDATE 子句，以便在更新父表中的行时让 MySQL 拒绝对子表中行的任何更新。</li>\n<li><code>ON UPDATE CASCADE</code> 操作允许您执行跨表更新，并且当更新父表</li>\n<li><code>ON UPDATE SET NULL</code> 中的行时，操作会将子表中的行中的值重置为值 NULL</li>\n<li><code>ON UPDATE NO ACTION</code> 或 <code>ON UPDATE RESTRICT</code> 行动拒绝任何更新。</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">\nCREATE DATABASE IF NOT EXISTS dbdemo;\n\nUSE dbdemo;\n\nCREATE TABLE categories(\n   cat_id int not null auto_increment primary key,\n   cat_name varchar(255) not null,\n   cat_description text\n) ENGINE&#x3D;InnoDB;\n-- 建表增加约束\nCREATE TABLE products(\n   prd_id int not null auto_increment primary key,\n   prd_name varchar(355) not null,\n   prd_price decimal,\n   cat_id int not null,\n  --  以下为外键约束\n   FOREIGN KEY fk_cat(cat_id)\n   REFERENCES categories(cat_id)\n   ON UPDATE CASCADE\n   ON DELETE RESTRICT\n)ENGINE&#x3D;InnoDB;\n\n-- 改表语句增加外键约束\nALTER TABLE table_name\nADD CONSTRAINT constraint_name\nFOREIGN KEY foreign_key_name(columns)\nREFERENCES parent_table(columns)\nON DELETE action\nON UPDATE action;\n\n-- 查看建表语句\n\nSHOW CREATE TABLE products;\n\n-- 删除外键约束\nALTER TABLE table_name\nDROP FOREIGN KEY constraint_name;\n\n-- 数据导入，避免外键因顺序问题存在的约束\n\n-- 要禁用外键检查，请使用以下语句：\n\nSET foreign_key_checks &#x3D; 0;\n-- 当然，您可以使用以下语句启用它：\n\nSET foreign_key_checks &#x3D; 1;</code></pre>\n\n<h3 id=\"unique-唯一-（可多个、可组合）\"><a href=\"#unique-唯一-（可多个、可组合）\" class=\"headerlink\" title=\"unique 唯一 （可多个、可组合）\"></a>unique 唯一 （可多个、可组合）</h3><ul>\n<li>创建时候添加（单个&#x2F;组合约束）</li>\n<li>删除约束（单个&#x2F;组合约束）</li>\n<li>添加约束（单个&#x2F;组合约束）</li>\n<li>查看表中的约束<code>SHOW INDEX FROM 数据库.表名字</code></li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">-- 建表增加约束\n\n-- 单个列约束 方式1\nCREATE TABLE table_1(\n    column_name_1  data_type UNIQUE,\n);\n\n-- 单个列约束 方式2\n\nCREATE TABLE table_1(\n   ...\n   column_name_1 data_type,\n   ...\n   UNIQUE(column_name_1)\n);\n-- 组合约束\n\nCREATE TABLE table_1(\n\n   ...\n   column_name_1 data_type,\n   column_name_2 data type,\n   ...\n   UNIQUE(column_name_1,column_name_2)\n);\n-- 组合约束（指定名字）\nCREATE TABLE table_1(\n   ...\n   column_name_1 data_type,\n   column_name_2 data type,\n   ...\n   CONSTRAINT constraint_name UNIQUE(column_name_1,column_name_2)\n);\n\n-- 查看表中的所有约束\n\nSHOW INDEX FROM 数据库.表名字\n\n\n\n-- 删除约束\n-- 方式1\nDROP INDEX index_name ON table_name;\n\n-- 方式2\nALTER TABLE table_name\nDROP INDEX index_name;\n\n-- 删除组合约束\nDROP INDEX uc_name_address ON suppliers;\n\n-- 添加约束\nALTER TABLE table_name\nADD CONSTRAINT constraint_name UNIQUE (column_list);\n\n-- 添加组合约束\nALTER TABLE suppliers\nADD CONSTRAINT uc_name_address UNIQUE (name,address);</code></pre>\n\n<h3 id=\"CHECK-约束-MySQL-不支持-CHECK-约束\"><a href=\"#CHECK-约束-MySQL-不支持-CHECK-约束\" class=\"headerlink\" title=\"CHECK 约束(MySQL 不支持 CHECK 约束)\"></a>CHECK 约束(MySQL 不支持 CHECK 约束)</h3><p>CHECK 约束，允许您在<code>插入</code>和<code>更新</code>之前验证列或列组的数据</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">-- 要确保价格始终大于或等于成本，请使用以下CHECK约束：\n\n-- MySQL不支持CHECK约束\nCREATE TABLE IF NOT EXISTS parts (\n    part_no VARCHAR(18) PRIMARY KEY,\n    description VARCHAR(40),\n    cost DECIMAL(10 , 2 ) NOT NULL CHECK (cost &gt; 0),\n    price DECIMAL(10 , 2 ) NOT NULL CHECK (price &gt; 0),\n    CHECK (price &gt;&#x3D; cost)\n);</code></pre>\n\n<h4 id=\"使用触发器模拟\"><a href=\"#使用触发器模拟\" class=\"headerlink\" title=\"使用触发器模拟\"></a>使用触发器模拟</h4><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">-- 首先，创建一个新表parts 演示：\n\nCREATE TABLE IF NOT EXISTS parts (\n    part_no VARCHAR(18) PRIMARY KEY,\n    description VARCHAR(40),\n    cost DECIMAL(10 , 2 ) NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n-- 接下来，创建一个存储过程以检查cost和price列中的值。\n-- 存储过程的基本语法： https:&#x2F;&#x2F;blog.csdn.net&#x2F;qq_45856289&#x2F;article&#x2F;details&#x2F;116665243\n-- 存储过程文档： https:&#x2F;&#x2F;www.begtut.com&#x2F;mysql&#x2F;introduction-to-sql-stored-procedures.html\nDELIMITER $\n\nCREATE PROCEDURE &#96;check_parts&#96;(IN cost DECIMAL(10,2), IN price DECIMAL(10,2)) -- 两个入参\nBEGIN\n    IF cost &lt; 0 THEN\n        SIGNAL SQLSTATE &#39;45000&#39;\n           SET MESSAGE_TEXT &#x3D; &#39;check constraint on parts.cost failed&#39;;\n    END IF;\n\n    IF price &lt; 0 THEN\n      SIGNAL SQLSTATE &#39;45001&#39;\n    SET MESSAGE_TEXT &#x3D; &#39;check constraint on parts.price failed&#39;;\n    END IF;\n\n    IF price &lt; cost THEN\n SIGNAL SQLSTATE &#39;45002&#39;\n           SET MESSAGE_TEXT &#x3D; &#39;check constraint on parts.price &amp; parts.cost failed&#39;;\n    END IF;\nEND\n\n$ DELIMITER ;\n\n\n-- 然后，创建  BEFORE INSERT 并BEFORE UPDATE触发。在触发器内部，调用check_parts()存储过程。\n\n-- before insert\nDELIMITER $\nCREATE TRIGGER &#96;parts_before_insert&#96; BEFORE INSERT ON &#96;parts&#96;\nFOR EACH ROW\nBEGIN\n    CALL check_parts(new.cost,new.price);\nEND$\nDELIMITER ;\n-- before update\nDELIMITER $\nCREATE TRIGGER &#96;parts_before_update&#96; BEFORE UPDATE ON &#96;parts&#96;\nFOR EACH ROW\nBEGIN\n    CALL check_parts(new.cost,new.price);\nEND$\nDELIMITER ;</code></pre>\n\n<h4 id=\"使用视图模拟\"><a href=\"#使用视图模拟\" class=\"headerlink\" title=\"使用视图模拟\"></a>使用视图模拟</h4><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">\n-- 创建一个带有基表检查选项的视图。在SELECT视图的语句中，我们只选择满足CHECK条件的有效行。如果对视图进行任何插入或更新，将导致新行不显示在视图中。\n\n-- 首先，删除parts表以删除所有关联的触发器并创建一个新的表，如parts表，但具有不同的名称parts_data：\n\nDROP TABLE IF EXISTS parts;\n\nCREATE TABLE IF NOT EXISTS parts_data (\n    part_no VARCHAR(18) PRIMARY KEY,\n    description VARCHAR(40),\n    cost DECIMAL(10 , 2 ) NOT NULL,\n    price DECIMAL(10,2) NOT NULL\n);\n-- 接下来，创建parts基于parts_data表命名的视图。通过这样做，我们可以保持使用parts表的应用程序的代码保持不变。此外，旧parts表的所有权限保持不变。\n\nCREATE VIEW parts AS\n    SELECT\n        part_no, description, cost, price\n    FROM\n        parts_data\n    WHERE\n        cost &gt; 0 AND price &gt; 0 AND price &gt;&#x3D; cost\nWITH CHECK OPTION;\n-- 然后，通过parts视图在parts_data表中插入一个新行：\n\nINSERT INTO parts(part_no, description, cost, price)\nVALUES(&#39;A-001&#39;,&#39;Cooler&#39;,100,120);</code></pre>\n\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><p><a href=\"https://www.begtut.com/mysql/mysql-not-null-constraint.html\" target=\"_blank\" >非空约束</a></p>\n<p><a href=\"https://www.begtut.com/mysql/mysql-primary-key.html\" target=\"_blank\" >主键约束</a></p>\n<p><a href=\"https://www.begtut.com/mysql/mysql-foreign-key.html\" target=\"_blank\" >外键约束</a></p>\n<p><a href=\"https://www.begtut.com/mysql/mysql-unique-constraint.html\" target=\"_blank\" >唯一约束</a></p>\n<p><a href=\"https://www.begtut.com/mysql/mysql-check-constraint.html\" target=\"_blank\" >CHECK 约束</a></p>\n","text":"约束非空 not nullNOT NULL 约束是列约束，迫使一列的值非 NULL 值。 NOT NULL 约束的语法如下： column_name data_type NOT NULL DEFAULT value; -- 列 NOT NULL 只包含一个约束，它指定列不得包含任...","link":"","photos":[],"count_time":{"symbolsCount":"6.7k","symbolsTime":"6 mins."},"categories":[{"name":"Mysql","slug":"Mysql","count":12,"path":"api/categories/Mysql.json"}],"tags":[{"name":"Mysql","slug":"Mysql","count":12,"path":"api/tags/Mysql.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BA%A6%E6%9D%9F\"><span class=\"toc-text\">约束</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%9D%9E%E7%A9%BA-not-null\"><span class=\"toc-text\">非空 not null</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%BB%E9%94%AE-primary-key-%EF%BC%881-%E4%B8%AA%E3%80%81%E5%8F%AF%E7%BB%84%E5%90%88%EF%BC%89\"><span class=\"toc-text\">主键 primary key （1 个、可组合）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%A4%96%E9%94%AE-foreign-key-%EF%BC%88%E5%8F%AF%E5%A4%9A%E4%B8%AA%E3%80%81%E5%8F%AF%E7%BB%84%E5%90%88%EF%BC%89\"><span class=\"toc-text\">外键 foreign key （可多个、可组合）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#unique-%E5%94%AF%E4%B8%80-%EF%BC%88%E5%8F%AF%E5%A4%9A%E4%B8%AA%E3%80%81%E5%8F%AF%E7%BB%84%E5%90%88%EF%BC%89\"><span class=\"toc-text\">unique 唯一 （可多个、可组合）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#CHECK-%E7%BA%A6%E6%9D%9F-MySQL-%E4%B8%8D%E6%94%AF%E6%8C%81-CHECK-%E7%BA%A6%E6%9D%9F\"><span class=\"toc-text\">CHECK 约束(MySQL 不支持 CHECK 约束)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E8%A7%A6%E5%8F%91%E5%99%A8%E6%A8%A1%E6%8B%9F\"><span class=\"toc-text\">使用触发器模拟</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8%E8%A7%86%E5%9B%BE%E6%A8%A1%E6%8B%9F\"><span class=\"toc-text\">使用视图模拟</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5\"><span class=\"toc-text\">参考链接</span></a></li></ol>","author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"生活不止眼前的苟且，还有诗和远方","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"3.系统学习 mysql CRUD","uid":"c0939ae244a4c8b0accf26e60862ce5e","slug":"2022-11-30mysql-crud","date":"2022-11-30T01:32:15.000Z","updated":"2022-12-02T14:13:36.772Z","comments":true,"path":"api/articles/2022-11-30mysql-crud.json","keywords":null,"cover":"https://img2.baidu.com/it/u=3082189317,4216979427&fm=253&fmt=auto&app=120&f=PNG?w=1000&h=500","text":"增INSERT &#x2F; INSERT INTO SELECT 单行插入 多行插入 默认值插入 日期值插入 -- 单行&#x2F;多行插入 INSERT INTO table_name(c1,c2,...) VALUES(v1,v2,..); -- 多行插入 INSERT I...","link":"","photos":[],"count_time":{"symbolsCount":"6.5k","symbolsTime":"6 mins."},"categories":[{"name":"Mysql","slug":"Mysql","count":12,"path":"api/categories/Mysql.json"}],"tags":[{"name":"Mysql","slug":"Mysql","count":12,"path":"api/tags/Mysql.json"}],"author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"生活不止眼前的苟且，还有诗和远方","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}},"next_post":{"title":"1.系统学习 mysql 操作","uid":"2dc569547b91ee92b16da7ef33c8ec1b","slug":"2022-11-26mysql-操作","date":"2022-11-26T01:00:20.000Z","updated":"2022-12-02T14:12:17.833Z","comments":true,"path":"api/articles/2022-11-26mysql-操作.json","keywords":null,"cover":"https://img2.baidu.com/it/u=3082189317,4216979427&fm=253&fmt=auto&app=120&f=PNG?w=1000&h=500","text":"库操作-- 创建 CREATE DATABASE [IF NOT EXISTS] database_name [CHARACTER SET charset_name] [COLLATE collation_name] -- 查看建库语句 SHOW CREATE DATABASE ...","link":"","photos":[],"count_time":{"symbolsCount":"4.6k","symbolsTime":"4 mins."},"categories":[{"name":"Mysql","slug":"Mysql","count":12,"path":"api/categories/Mysql.json"}],"tags":[{"name":"Mysql","slug":"Mysql","count":12,"path":"api/tags/Mysql.json"}],"author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"生活不止眼前的苟且，还有诗和远方","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}}}