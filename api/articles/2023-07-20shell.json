{"title":"宝塔续","uid":"c4296adc04d8300827346ef621456b20","slug":"2023-07-20shell","date":"2023-07-20T15:02:59.000Z","updated":"2023-08-11T13:44:19.574Z","comments":true,"path":"api/articles/2023-07-20shell.json","keywords":null,"cover":[],"content":"<h2 id=\"本地免登远程如何配置\"><a href=\"#本地免登远程如何配置\" class=\"headerlink\" title=\"本地免登远程如何配置\"></a>本地免登远程如何配置</h2><p>要实现本地免登陆远程计算机，您可以使用 SSH 密钥对进行身份验证。以下是配置本地免登陆远程的步骤：</p>\n<ol>\n<li><p>在本地计算机上生成 SSH 密钥对：</p>\n<ul>\n<li>打开终端或命令提示符。</li>\n<li>输入以下命令：<code>ssh-keygen -t rsa</code>。</li>\n<li>系统会提示您选择密钥存储位置和设置密码。如果不想设置密码，可以直接按 Enter 键跳过。</li>\n</ul>\n</li>\n<li><p>将公钥复制到远程计算机：</p>\n<ul>\n<li>使用以下命令将公钥复制到远程计算机：<code>ssh-copy-id user@remote_host</code>。<br>其中，<code>user</code>是远程计算机上的用户名，<code>remote_host</code>是远程计算机的 IP 地址或主机名。</li>\n<li>您可能需要输入远程计算机的密码进行身份验证。</li>\n</ul>\n</li>\n<li><p>确认配置是否成功：</p>\n<ul>\n<li>使用以下命令尝试 SSH 连接到远程计算机：<code>ssh user@remote_host</code>。</li>\n<li>如果成功连接而无需输入密码，则表示配置成功。</li>\n</ul>\n</li>\n</ol>\n<p>通过以上步骤，您就可以在本地计算机上配置 SSH 密钥对，实现免登陆登录到远程计算机。请记住，使用 SSH 密钥对进行身份验证时，确保密钥文件的权限设置正确（例如，私钥文件的权限应为 600）。</p>\n<h2 id=\"scp-命令\"><a href=\"#scp-命令\" class=\"headerlink\" title=\"scp 命令\"></a>scp 命令</h2><p><code>scp</code>命令用于在本地计算机与远程计算机之间复制文件或目录。它使用安全的 SSH 协议来进行数据传输。</p>\n<p>以下是<code>scp</code>命令的基本语法：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">scp [选项] 源文件 目标文件</code></pre>\n\n<p>其中，选项可以根据您的需求进行调整，以下是常用选项的说明：</p>\n<ul>\n<li><code>-r</code>：递归复制整个目录（包括子目录）</li>\n<li><code>-P &lt;端口号&gt;</code>：指定 SSH 连接的端口号，默认为 22</li>\n<li><code>-p</code>：保留文件的修改时间和权限</li>\n<li><code>-q</code>：静默模式，不显示详细输出信息</li>\n<li><code>-v</code>：详细模式，显示详细输出信息</li>\n</ul>\n<p>以下是几个示例来说明如何使用<code>scp</code>命令：</p>\n<ol>\n<li>将本地文件复制到远程计算机：</li>\n</ol>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">scp local_file.txt user@remote_host:&#x2F;path&#x2F;to&#x2F;destination</code></pre>\n\n<p>其中，<code>local_file.txt</code>是本地计算机上的文件，<code>user</code>是远程计算机上的用户名，<code>remote_host</code>是远程计算机的 IP 地址或主机名，<code>/path/to/destination</code>是远程计算机上的目标路径。</p>\n<ol start=\"2\">\n<li>从远程计算机复制文件到本地：</li>\n</ol>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">scp user@remote_host:&#x2F;path&#x2F;to&#x2F;remote_file.txt &#x2F;local&#x2F;path&#x2F;destination</code></pre>\n\n<p>其中，<code>remote_file.txt</code>是远程计算机上的文件，<code>/local/path/destination</code>是本地计算机上的目标路径。</p>\n<ol start=\"3\">\n<li>递归复制整个目录：</li>\n</ol>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">scp -r &#x2F;local&#x2F;directory user@remote_host:&#x2F;path&#x2F;to&#x2F;destination</code></pre>\n\n<p>其中，<code>/local/directory</code>是本地计算机上的目录。</p>\n<p>请注意，对于需要进行身份验证的远程计算机，您可能需要输入密码或使用 SSH 密钥进行身份验证。使用<code>-i</code>选项可以指定 SSH 密钥的路径。</p>\n<p>这只是<code>scp</code>命令的基本用法，它还有其他高级功能和选项，您可以通过<code>man scp</code>命令查看详细的文档。</p>\n<h2 id=\"本地脚本\"><a href=\"#本地脚本\" class=\"headerlink\" title=\"本地脚本\"></a>本地脚本</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#!&#x2F;bin&#x2F;sh\n\n# 定义颜色的ANSI转义序列\nRED&#x3D;&#39;\\033[0;31m&#39;\nGREEN&#x3D;&#39;\\033[0;32m&#39;\nYELLOW&#x3D;&#39;\\033[0;33m&#39;\nNC&#x3D;&#39;\\033[0m&#39; # 恢复默认颜色\n\n\n# 使用颜色的echo语句\n# echo -e &quot;$&#123;RED&#125;这是红色文本$&#123;NC&#125;&quot;\n# echo -e &quot;$&#123;GREEN&#125;这是绿色文本$&#123;NC&#125;&quot;\n# echo -e &quot;$&#123;YELLOW&#125;这是黄色文本$&#123;NC&#125;&quot;\n\nlast_directory&#x3D;$(pwd)\nrelease_dir&#x3D;&quot;$last_directory&#x2F;release&quot;\necho &quot;$release_dir&quot;\n\nif [ ! -d &quot;$release_dir&quot; ]; then\n    mkdir -p &quot;$release_dir&quot;\n    echo &quot;目录已创建：$release_dir&quot;\nelse\n    echo &quot;目录已存在：$release_dir&quot;\nfi\n\necho &quot;$&#123;GREEN&#125; 切换目录!!! $&#123;NC&#125;&quot;\n\ncd .&#x2F;tim&#x2F;Modules&#x2F;Web\n\necho &quot;$&#123;GREEN&#125; 启动打包!!! $&#123;NC&#125;&quot;\n\nyarn build\n\necho &quot;$&#123;GREEN&#125; 打包完成!!! $&#123;NC&#125;&quot;\n\ncurrent_datetime&#x3D;$(date +&quot;%Y%m%d_%H.%M&quot;)\nname&#x3D;&quot;$release_dir&#x2F;$current_datetime-$1.zip&quot;\n\necho &quot;$&#123;GREEN&#125; 开始压缩!!! $&#123;NC&#125;&quot;\n\nzip -rq $name .&#x2F;dist\n\necho &quot;$&#123;GREEN&#125; 压缩完成!!! $&#123;NC&#125;&quot;\n\necho &quot;$&#123;GREEN&#125; 压缩包路径：$name $&#123;NC&#125;&quot;</code></pre>\n\n<pre class=\"line-numbers language-sh\" data-language=\"sh\"><code class=\"language-sh\">sh .&#x2F;build.sh 仿真数据回显\n\n\n# or\n\nchmod +x build.sh\n.&#x2F;build.sh 仿真数据回显</code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">✨  Done in 36.40s.\n#  打包完成!!!\n#  开始压缩!!!\n#  压缩完成!!!\n#  压缩包路径：&#x2F;Users&#x2F;chenhailong&#x2F;code&#x2F;lnx&#x2F;tim-project&#x2F;release&#x2F;20230720_22.50-仿真数据回显.zip</code></pre>\n\n<h2 id=\"远程脚本\"><a href=\"#远程脚本\" class=\"headerlink\" title=\"远程脚本\"></a>远程脚本</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">#!&#x2F;bin&#x2F;bash\n\n\nif [[ $1 &#x3D;&#x3D; &#39;?&#39; ]]; then\n    echo &quot;&quot;\n    echo &quot;提示信息&quot;\n    echo &quot;&quot;\n    echo &quot;.&#x2F;rb.sh 环境 发布包&quot;\n    echo &quot;&quot;\n    echo &quot;- 环境：pre&#x2F;pro&#x2F;dev&quot;\n    echo &quot;- 发布包：xxx.zip&quot;\n    echo &quot;&quot;\n    echo &quot;示例：.&#x2F;rb.sh dev 20230719-style.zip&quot;\n    echo &quot;&quot;\n    exit\nfi\n\nif [[ -n $1 &amp;&amp; -n $2 ]]; then\n    if [[ $1 &#x3D;&#x3D; &#39;pre&#39; ]]; then\n        echo $1\n        rm -rf .&#x2F;pre-9999&#x2F;dist &amp;&amp; unzip $2 -d .&#x2F;pre-9999\n    elif [[ $1 &#x3D;&#x3D; &#39;pro&#39; ]]; then\n        echo $1\n        rm -rf .&#x2F;pro-8000&#x2F;dist &amp;&amp; unzip $2 -d .&#x2F;pro-8000\n    elif [[ $1 &#x3D;&#x3D; &#39;dev&#39; ]]; then\n        echo $1\n        rm -rf .&#x2F;dev-7000&#x2F;dist &amp;&amp; unzip $2 -d .&#x2F;dev-7000\n    else\n        echo &quot;Invalid argument: $1&quot;\n    fi\nelse\n    echo &quot;参数有误: $1 $2  (环境：pre&#x2F;pro&#x2F;dev)、（发布包：xxx.zip）&quot;\n    echo &quot;示例：.&#x2F;rb.sh dev 20230719-style.zip&quot;\nfi</code></pre>\n\n<h2 id=\"批量删除命令\"><a href=\"#批量删除命令\" class=\"headerlink\" title=\"批量删除命令\"></a>批量删除命令</h2><h3 id=\"命令\"><a href=\"#命令\" class=\"headerlink\" title=\"命令\"></a>命令</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># grep 命令用于在文本文件中搜索指定的模式。如果你想在文件名中搜索以 &quot;20230724_&quot; 开头的 zip 文件，可以使用 ls 命令配合 grep 命令来实现\nls &#x2F;path&#x2F;to&#x2F;directory | grep &#39;^20230724_.*\\.zip$&#39; | xargs rm\nls .&#x2F; | grep &#39;^20230724_.*\\.zip$&#39; | xargs rm\n# | xargs rm 的作用是，它将前一个命令的输出（文件列表）作为参数传递给 rm 命令，从而删除这些文件\n\n# 使用 find 命令来找到并删除这些文件\nfind &#x2F;path&#x2F;to&#x2F;directory -type f -name &quot;20230724_*.zip&quot; -exec rm &#123;&#125; \\;\nfind .&#x2F; -type f -name &quot;20230724_*.zip&quot; -exec rm &#123;&#125; \\;\n# 整个参数 -exec rm &#123;&#125; \\; 的含义是，对于每个 find 命令找到的文件，将其文件名替换到 &#123;&#125; 的位置，然后执行 rm 命令来删除这个文件。</code></pre>\n\n<h3 id=\"测试\"><a href=\"#测试\" class=\"headerlink\" title=\"测试\"></a>测试</h3><img src=\"http://t-blog-images.aijs.top/img/202308112124895.webp\" />\n","text":"本地免登远程如何配置要实现本地免登陆远程计算机，您可以使用 SSH 密钥对进行身份验证。以下是配置本地免登陆远程的步骤： 在本地计算机上生成 SSH 密钥对： 打开终端或命令提示符。 输入以下命令：ssh-keygen -t rsa。 系统会提示您选择密钥存储位置和设置密码。如果...","link":"","photos":[],"count_time":{"symbolsCount":"4.5k","symbolsTime":"4 mins."},"categories":[{"name":"shell","slug":"shell","count":5,"path":"api/categories/shell.json"}],"tags":[{"name":"shell","slug":"shell","count":6,"path":"api/tags/shell.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9C%AC%E5%9C%B0%E5%85%8D%E7%99%BB%E8%BF%9C%E7%A8%8B%E5%A6%82%E4%BD%95%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">本地免登远程如何配置</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#scp-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">scp 命令</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9C%AC%E5%9C%B0%E8%84%9A%E6%9C%AC\"><span class=\"toc-text\">本地脚本</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%9C%E7%A8%8B%E8%84%9A%E6%9C%AC\"><span class=\"toc-text\">远程脚本</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%89%B9%E9%87%8F%E5%88%A0%E9%99%A4%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">批量删除命令</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">命令</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B5%8B%E8%AF%95\"><span class=\"toc-text\">测试</span></a></li></ol></li></ol>","author":{"name":"十三","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>自律，为了更好的自己</p><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"ModuleNotFoundError No module named 'requests'","uid":"228098f2136c9f5bb0f3c96d9e151e02","slug":"2023-07-24py","date":"2023-07-24T02:23:45.000Z","updated":"2023-07-31T06:42:49.730Z","comments":true,"path":"api/articles/2023-07-24py.json","keywords":null,"cover":[],"text":"requests 无法引入# 安装命令 python3 -m pip install requests 安装日志👑 ~&#x2F;Desktop&#x2F;lnx&#x2F;py-5 $ python3 -m pip install requests Collecting req...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"Python","slug":"Python","count":4,"path":"api/categories/Python.json"}],"tags":[{"name":"Python","slug":"Python","count":4,"path":"api/tags/Python.json"}],"author":{"name":"十三","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>自律，为了更好的自己</p><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}},"next_post":{"title":"父子组件数据不一致","uid":"7160f8f90ec20d38188bb78c979fe324","slug":"2023-07-17bug","date":"2023-07-17T08:46:15.000Z","updated":"2023-07-20T14:58:47.214Z","comments":true,"path":"api/articles/2023-07-17bug.json","keywords":null,"cover":[],"text":"父子组件数据不一致 直接原因：useEffect 没有更新 根本原因：这里的代码，切换文章应该是文章 id，写成了分享 shareId，很多文件没有分享，未分享的文章切换就会出错 ","link":"","photos":[],"count_time":{"symbolsCount":93,"symbolsTime":"1 mins."},"categories":[{"name":"React","slug":"React","count":39,"path":"api/categories/React.json"}],"tags":[{"name":"React","slug":"React","count":33,"path":"api/tags/React.json"}],"author":{"name":"十三","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>自律，为了更好的自己</p><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}}}