{"title":"移动端适配 - px2rem","uid":"5589bdb9343542e072e63bc6a1f57ae5","slug":"2023-02-22px2rem","date":"2023-02-22T12:52:58.000Z","updated":"2023-02-27T12:46:06.492Z","comments":true,"path":"api/articles/2023-02-22px2rem.json","keywords":null,"cover":"http://t-blog-images.aijs.top/img/202302231640242.webp","content":"<h2 id=\"5w2h\"><a href=\"#5w2h\" class=\"headerlink\" title=\"5w2h\"></a>5w2h</h2><ol>\n<li>为什么会有 px2rem?</li>\n<li>什么是 px2rem?</li>\n<li>现在？</li>\n<li>我？</li>\n<li>在理论和实现方面？</li>\n<li>要如何深入理解？</li>\n<li>理解到什么程度？</li>\n</ol>\n<h2 id=\"移动端适配的目的\"><a href=\"#移动端适配的目的\" class=\"headerlink\" title=\"移动端适配的目的\"></a>移动端适配的目的</h2><p>移动端适配的宗旨是:</p>\n<ol>\n<li>让拥有不同屏幕大小的终端设备拥有一致的 UI 界面,</li>\n<li>让拥有更大屏幕的终端展示更多的内容</li>\n</ol>\n<h2 id=\"几个概念\"><a href=\"#几个概念\" class=\"headerlink\" title=\"几个概念\"></a>几个概念</h2><ol>\n<li>设备像素</li>\n<li><code>设备像素比 DPR = 设备像素 / css 像素</code></li>\n<li>设计稿：按照<code>设备像素(device pixel)</code>为单位制作设计稿</li>\n<li>前端工作：参照设备像素比(device pixel ratio)进行换算成<code>像素 = 设备像素 / 设备像素比</code></li>\n</ol>\n<h2 id=\"关系\"><a href=\"#关系\" class=\"headerlink\" title=\"关系\"></a>关系</h2><p>因为<code>root fontSize -&gt; rem布局</code>，所以只需要改变 root fontSize 就可以实现适配</p>\n<!-- ## 什么是像素\n\n是指在由一个数字序列表示的图像中的一个最小单位，称为像素。 —— 百度百科\n\n## 什么是物理像素\n\n物理像素是组成相机成像传感器的最基础单元 —— 百度百科\n\n## 什么是独立像素\n\n定义 UI 布局时使用的虚拟像素单位 DP —— 百度百科\n\n## 什么是设备像素比\n\n<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/API/Window/devicePixelRatio\" target=\"_blank\" >devicePixelRatio MDN</a> -->\n\n<h2 id=\"px2rem-原理\"><a href=\"#px2rem-原理\" class=\"headerlink\" title=\"px2rem 原理\"></a>px2rem 原理</h2><img src=\"http://t-blog-images.aijs.top/img/202302231640242.webp\" />\n\n<p>哈～，用 babel 的图改的 <a href=\"https://img-blog.csdnimg.cn/img_convert/065d01891f54eb2e8b3f7d2f6bad34d5.png#alt=\" target=\"_blank\" >babel 图</a></p>\n<h2 id=\"px2rem-源码\"><a href=\"#px2rem-源码\" class=\"headerlink\" title=\"px2rem 源码\"></a>px2rem 源码</h2><div style=\"display: flex;align-items: center;padding-top:4px;padding-bottom: 4px\"><a target=\"_blank\" href=\"https://github.com/songsiqi/px2rem\">https://github.com/songsiqi/px2rem</a><img src=\"https://img.shields.io/github/stars/songsiqi/px2rem?style=social\" /></div>\n\n<h3 id=\"文档-px2rem-执行\"><a href=\"#文档-px2rem-执行\" class=\"headerlink\" title=\"文档 px2rem 执行\"></a>文档 px2rem 执行</h3><pre><code><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">let Px2rem &#x3D; require(&quot;.&#x2F;px2rem&quot;);\nlet px2rem &#x3D; new Px2rem(&#123;\n  remUnit: 75,\n  remPrecision: 8,\n&#125;);\nlet cssText &#x3D; &#96;\n#root&#123;\n    width:750px;\n    height:750px;\n    font-size:12px;&#x2F;*px*&#x2F;\n    border: 1px solid #ddd; &#x2F;*no*&#x2F;\n&#125;\n&#96;;\nlet newCSS &#x3D; px2rem.generateRem(cssText);\nconsole.log(newCSS);\n\n&#x2F;&#x2F; #root &#123;\n&#x2F;&#x2F;   width: 10rem;\n&#x2F;&#x2F;   height: 10rem;\n&#x2F;&#x2F;   border: 1px solid #ddd;\n&#x2F;&#x2F; &#125;\n\n&#x2F;&#x2F; [data-dpr&#x3D;&quot;1&quot;] #root &#123;\n&#x2F;&#x2F;   font-size: 6px;\n&#x2F;&#x2F; &#125;\n\n&#x2F;&#x2F; [data-dpr&#x3D;&quot;2&quot;] #root &#123;\n&#x2F;&#x2F;   font-size: 12px;\n&#x2F;&#x2F; &#125;\n\n&#x2F;&#x2F; [data-dpr&#x3D;&quot;3&quot;] #root &#123;\n&#x2F;&#x2F;   font-size: 18px;\n&#x2F;&#x2F; &#125;</code></pre>\n</code></pre>\n<p>大概知道，它能做什么。对于现在的我来说就是个“黑盒子”，给代码，产出转化后的代码，接下来看看“黑盒子”里面都有什么</p>\n<h2 id=\"如何调试？\"><a href=\"#如何调试？\" class=\"headerlink\" title=\"如何调试？\"></a>如何调试？</h2><ol>\n<li><p>在 test&#x2F;assets 中，从 test2x.css, 新建一个 test.css 文件</p>\n</li>\n<li><p>test.css 文件只保留一个选择器上下各留两段注释</p>\n<pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">&#x2F;* normal *&#x2F;\nbody &#123;\n  background: #eee;\n  color: #888; &#x2F;* color is gray *&#x2F;\n  border: 1px solid; &#x2F;*no*&#x2F;\n  height: 20px; &#x2F;* px *&#x2F;\n  padding: 6px; &#x2F;*px*&#x2F;\n  -webkit-animation: anim1 linear infinite;\n&#125;\n\n&#x2F;* hello world *&#x2F;</code></pre>\n</li>\n<li><p>px2rem.test.js</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&quot;use strict&quot;;\n\nvar assert &#x3D; require(&quot;assert&quot;);\nvar Px2rem &#x3D; require(&quot;..&#x2F;lib&#x2F;px2rem&quot;);\nvar path &#x3D; require(&quot;path&quot;);\nvar fs &#x3D; require(&quot;fs&quot;);\n&#x2F;&#x2F; import: 测试用例\ndescribe(&quot;should work with @2x origin css file&quot;, function () &#123;\n  var px2remIns &#x3D; new Px2rem(&#x2F;*&#123;remUnit: 75, baseDpr: 2&#125;*&#x2F;);\n  var srcPath1 &#x3D; path.join(__dirname, &quot;assets&#x2F;test.css&quot;);\n  var srcText1 &#x3D; fs.readFileSync(srcPath1, &#123; encoding: &quot;utf8&quot; &#125;);\n\n  it(&quot;[default] test&quot;, function () &#123;\n    var outputText &#x3D; px2remIns.generateThree(srcText1); &#x2F;&#x2F; 主要来看下它的执行\n    assert.equal(&quot;1&quot;, &quot;1&quot;); &#x2F;&#x2F; 这里随便写，不是重点\n  &#125;);\n&#125;);</code></pre>\n</li>\n<li><p>generateThree 方法内部打上两行日志：</p>\n<ol>\n<li>输入的数据</li>\n<li>之后的数据长什么样子要晓得（即： <code>css.parse(cssText)</code>）</li>\n</ol>\n</li>\n</ol>\n<h2 id=\"css-parse-cssText-生成的-ast-是什么样子？\"><a href=\"#css-parse-cssText-生成的-ast-是什么样子？\" class=\"headerlink\" title=\"css.parse(cssText) 生成的 ast 是什么样子？\"></a>css.parse(cssText) 生成的 ast 是什么样子？</h2><details class=\"custom-details\">\n<summary>查看代码</summary>\n<p><pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n  &quot;type&quot;: &quot;stylesheet&quot;,\n  &quot;stylesheet&quot;: &#123;\n    &quot;rules&quot;: [\n      &#123;\n        &quot;type&quot;: &quot;comment&quot;,\n        &quot;comment&quot;: &quot; normal &quot;,\n        &quot;position&quot;: &#123;\n          &quot;start&quot;: &#123;\n            &quot;line&quot;: 1,\n            &quot;column&quot;: 1\n          &#125;,\n          &quot;end&quot;: &#123;\n            &quot;line&quot;: 1,\n            &quot;column&quot;: 13\n          &#125;\n        &#125;\n      &#125;,\n      &#123;\n        &quot;type&quot;: &quot;rule&quot;,\n        &quot;selectors&quot;: [&quot;body&quot;],\n        &quot;declarations&quot;: [\n          &#123;\n            &quot;type&quot;: &quot;declaration&quot;,\n            &quot;property&quot;: &quot;background&quot;,\n            &quot;value&quot;: &quot;#eee&quot;,\n            &quot;position&quot;: &#123;\n              &quot;start&quot;: &#123;\n                &quot;line&quot;: 3,\n                &quot;column&quot;: 3\n              &#125;,\n              &quot;end&quot;: &#123;\n                &quot;line&quot;: 3,\n                &quot;column&quot;: 19\n              &#125;\n            &#125;\n          &#125;,\n          &#123;\n            &quot;type&quot;: &quot;declaration&quot;,\n            &quot;property&quot;: &quot;color&quot;,\n            &quot;value&quot;: &quot;#888&quot;,\n            &quot;position&quot;: &#123;\n              &quot;start&quot;: &#123;\n                &quot;line&quot;: 4,\n                &quot;column&quot;: 3\n              &#125;,\n              &quot;end&quot;: &#123;\n                &quot;line&quot;: 4,\n                &quot;column&quot;: 14\n              &#125;\n            &#125;\n          &#125;,\n          &#123;\n            &quot;type&quot;: &quot;comment&quot;,\n            &quot;comment&quot;: &quot; color is gray &quot;,\n            &quot;position&quot;: &#123;\n              &quot;start&quot;: &#123;\n                &quot;line&quot;: 4,\n                &quot;column&quot;: 16\n              &#125;,\n              &quot;end&quot;: &#123;\n                &quot;line&quot;: 4,\n                &quot;column&quot;: 35\n              &#125;\n            &#125;\n          &#125;,\n          &#123;\n            &quot;type&quot;: &quot;declaration&quot;,\n            &quot;property&quot;: &quot;border&quot;,\n            &quot;value&quot;: &quot;1px solid&quot;,\n            &quot;position&quot;: &#123;\n              &quot;start&quot;: &#123;\n                &quot;line&quot;: 5,\n                &quot;column&quot;: 3\n              &#125;,\n              &quot;end&quot;: &#123;\n                &quot;line&quot;: 5,\n                &quot;column&quot;: 20\n              &#125;\n            &#125;\n          &#125;,\n          &#123;\n            &quot;type&quot;: &quot;comment&quot;,\n            &quot;comment&quot;: &quot;no&quot;,\n            &quot;position&quot;: &#123;\n              &quot;start&quot;: &#123;\n                &quot;line&quot;: 5,\n                &quot;column&quot;: 22\n              &#125;,\n              &quot;end&quot;: &#123;\n                &quot;line&quot;: 5,\n                &quot;column&quot;: 28\n              &#125;\n            &#125;\n          &#125;,\n          &#123;\n            &quot;type&quot;: &quot;declaration&quot;,\n            &quot;property&quot;: &quot;height&quot;,\n            &quot;value&quot;: &quot;20px&quot;,\n            &quot;position&quot;: &#123;\n              &quot;start&quot;: &#123;\n                &quot;line&quot;: 6,\n                &quot;column&quot;: 3\n              &#125;,\n              &quot;end&quot;: &#123;\n                &quot;line&quot;: 6,\n                &quot;column&quot;: 15\n              &#125;\n            &#125;\n          &#125;,\n          &#123;\n            &quot;type&quot;: &quot;comment&quot;,\n            &quot;comment&quot;: &quot; px &quot;,\n            &quot;position&quot;: &#123;\n              &quot;start&quot;: &#123;\n                &quot;line&quot;: 6,\n                &quot;column&quot;: 17\n              &#125;,\n              &quot;end&quot;: &#123;\n                &quot;line&quot;: 6,\n                &quot;column&quot;: 25\n              &#125;\n            &#125;\n          &#125;,\n          &#123;\n            &quot;type&quot;: &quot;declaration&quot;,\n            &quot;property&quot;: &quot;padding&quot;,\n            &quot;value&quot;: &quot;6px&quot;,\n            &quot;position&quot;: &#123;\n              &quot;start&quot;: &#123;\n                &quot;line&quot;: 7,\n                &quot;column&quot;: 3\n              &#125;,\n              &quot;end&quot;: &#123;\n                &quot;line&quot;: 7,\n                &quot;column&quot;: 15\n              &#125;\n            &#125;\n          &#125;,\n          &#123;\n            &quot;type&quot;: &quot;comment&quot;,\n            &quot;comment&quot;: &quot;px&quot;,\n            &quot;position&quot;: &#123;\n              &quot;start&quot;: &#123;\n                &quot;line&quot;: 7,\n                &quot;column&quot;: 17\n              &#125;,\n              &quot;end&quot;: &#123;\n                &quot;line&quot;: 7,\n                &quot;column&quot;: 23\n              &#125;\n            &#125;\n          &#125;,\n          &#123;\n            &quot;type&quot;: &quot;declaration&quot;,\n            &quot;property&quot;: &quot;-webkit-animation&quot;,\n            &quot;value&quot;: &quot;anim1 linear infinite&quot;,\n            &quot;position&quot;: &#123;\n              &quot;start&quot;: &#123;\n                &quot;line&quot;: 8,\n                &quot;column&quot;: 3\n              &#125;,\n              &quot;end&quot;: &#123;\n                &quot;line&quot;: 8,\n                &quot;column&quot;: 43\n              &#125;\n            &#125;\n          &#125;\n        ],\n        &quot;position&quot;: &#123;\n          &quot;start&quot;: &#123;\n            &quot;line&quot;: 2,\n            &quot;column&quot;: 1\n          &#125;,\n          &quot;end&quot;: &#123;\n            &quot;line&quot;: 9,\n            &quot;column&quot;: 2\n          &#125;\n        &#125;\n      &#125;,\n      &#123;\n        &quot;type&quot;: &quot;comment&quot;,\n        &quot;comment&quot;: &quot; hello world &quot;,\n        &quot;position&quot;: &#123;\n          &quot;start&quot;: &#123;\n            &quot;line&quot;: 11,\n            &quot;column&quot;: 1\n          &#125;,\n          &quot;end&quot;: &#123;\n            &quot;line&quot;: 11,\n            &quot;column&quot;: 18\n          &#125;\n        &#125;\n      &#125;\n    ],\n    &quot;parsingErrors&quot;: []\n  &#125;\n&#125;</code></pre>\n\n<p>:::<br>看上去很乱，不慌，换个方式看看</p>\n<h2 id=\"源码-gt-ast-分析\"><a href=\"#源码-gt-ast-分析\" class=\"headerlink\" title=\"源码-&gt;ast 分析\"></a>源码-&gt;ast 分析</h2><h3 id=\"节点-1\"><a href=\"#节点-1\" class=\"headerlink\" title=\"节点 1\"></a>节点 1</h3><img src=\"http://t-blog-images.aijs.top/img/202302222113309.webp\" />\n\n<h3 id=\"节点-2\"><a href=\"#节点-2\" class=\"headerlink\" title=\"节点 2\"></a>节点 2</h3><img src=\"http://t-blog-images.aijs.top/img/202302222116829.webp\" />\n\n<h3 id=\"节点-2-精简内容\"><a href=\"#节点-2-精简内容\" class=\"headerlink\" title=\"节点 2 精简内容\"></a>节点 2 精简内容</h3><img src=\"http://t-blog-images.aijs.top/img/202302222133046.webp\" />\n\n<h3 id=\"节点-3\"><a href=\"#节点-3\" class=\"headerlink\" title=\"节点 3\"></a>节点 3</h3><img src=\"http://t-blog-images.aijs.top/img/202302222117418.webp\" />\n\n<h3 id=\"节点-4\"><a href=\"#节点-4\" class=\"headerlink\" title=\"节点 4\"></a>节点 4</h3><img src=\"http://t-blog-images.aijs.top/img/202302222118329.webp\" />\n\n<h3 id=\"astexplorer-同样可以看到效果\"><a href=\"#astexplorer-同样可以看到效果\" class=\"headerlink\" title=\"astexplorer 同样可以看到效果\"></a>astexplorer 同样可以看到效果</h3><p><strong>注意了要选择：rework 格式的，其他格式的转化结果更为复杂</strong></p>\n<p><a href=\"https://astexplorer.net/\" target=\"_blank\" >https://astexplorer.net/</a></p>\n<img src=\"http://t-blog-images.aijs.top/img/202302222152241.webp\" />\n\n<h3 id=\"注释-会生成什么？\"><a href=\"#注释-会生成什么？\" class=\"headerlink\" title=\"注释 会生成什么？\"></a>注释 会生成什么？</h3><pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">&#x2F;* normal *&#x2F;</code></pre>\n\n<p>转化成</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n  &quot;type&quot;: &quot;comment&quot;,\n  &quot;comment&quot;: &quot; normal &quot;,\n  &quot;position&quot;: &#123;\n    &quot;start&quot;: &#123;\n      &quot;line&quot;:1,&quot;column&quot;: 1;\n    &#125;\n    ,\n    &quot;end&quot;: &#123;\n      &quot;line&quot;:1,&quot;column&quot;: 13;\n    &#125;\n  &#125;\n&#125;</code></pre>\n\n<h3 id=\"选择器-会生成什么？\"><a href=\"#选择器-会生成什么？\" class=\"headerlink\" title=\"选择器 会生成什么？\"></a>选择器 会生成什么？</h3><pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">body &#123;\n  background: #eee;\n  color: #888; &#x2F;* color is gray *&#x2F;\n  border: 1px solid; &#x2F;*no*&#x2F;\n  height: 20px; &#x2F;* px *&#x2F;\n  padding: 6px; &#x2F;*px*&#x2F;\n  -webkit-animation: anim1 linear infinite;\n&#125;</code></pre>\n\n<p>转化成</p>\n<p>:::details 查看代码</p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n  &quot;type&quot;: &quot;rule&quot;,\n  &quot;selectors&quot;: [&quot;body&quot;],\n  &quot;position&quot;: &#123;\n    &quot;start&quot;: &#123;\n      &quot;line&quot;: 2,\n      &quot;column&quot;: 1\n    &#125;,\n    &quot;end&quot;: &#123;\n      &quot;line&quot;: 9,\n      &quot;column&quot;: 2\n    &#125;\n  &#125;,\n  &quot;declarations&quot;: [\n    &#123;\n      &#x2F;&#x2F; background: #eee;\n      &quot;type&quot;: &quot;declaration&quot;,\n      &quot;property&quot;: &quot;background&quot;,\n      &quot;value&quot;: &quot;#eee&quot;,\n      &quot;position&quot;: &#123;\n        &quot;start&quot;: &#123;\n          &quot;line&quot;: 3,\n          &quot;column&quot;: 3\n        &#125;,\n        &quot;end&quot;: &#123;\n          &quot;line&quot;: 3,\n          &quot;column&quot;: 19\n        &#125;\n      &#125;\n    &#125;,\n    &#x2F;&#x2F; color: #888; &#x2F;* color is gray *&#x2F; 会拆解成两部分 1. 属性-值  2. 注释\n    &#123;\n      &quot;type&quot;: &quot;declaration&quot;,\n      &quot;property&quot;: &quot;color&quot;,\n      &quot;value&quot;: &quot;#888&quot;,\n      &quot;position&quot;: &#123;\n        &quot;start&quot;: &#123;\n          &quot;line&quot;: 4,\n          &quot;column&quot;: 3\n        &#125;,\n        &quot;end&quot;: &#123;\n          &quot;line&quot;: 4,\n          &quot;column&quot;: 14\n        &#125;\n      &#125;\n    &#125;,\n    &#123;\n      &quot;type&quot;: &quot;comment&quot;,\n      &quot;comment&quot;: &quot; color is gray &quot;,\n      &quot;position&quot;: &#123;\n        &quot;start&quot;: &#123;\n          &quot;line&quot;: 4,\n          &quot;column&quot;: 16\n        &#125;,\n        &quot;end&quot;: &#123;\n          &quot;line&quot;: 4,\n          &quot;column&quot;: 35\n        &#125;\n      &#125;\n    &#125;,\n    &#x2F;&#x2F; border: 1px solid; &#x2F;*no*&#x2F;  会拆解成两部分 1. 属性-值  2. 注释\n    &#123;\n      &quot;type&quot;: &quot;declaration&quot;,\n      &quot;property&quot;: &quot;border&quot;,\n      &quot;value&quot;: &quot;1px solid&quot;,\n      &quot;position&quot;: &#123;\n        &quot;start&quot;: &#123;\n          &quot;line&quot;: 5,\n          &quot;column&quot;: 3\n        &#125;,\n        &quot;end&quot;: &#123;\n          &quot;line&quot;: 5,\n          &quot;column&quot;: 20\n        &#125;\n      &#125;\n    &#125;,\n    &#123;\n      &quot;type&quot;: &quot;comment&quot;,\n      &quot;comment&quot;: &quot;no&quot;,\n      &quot;position&quot;: &#123;\n        &quot;start&quot;: &#123;\n          &quot;line&quot;: 5,\n          &quot;column&quot;: 22\n        &#125;,\n        &quot;end&quot;: &#123;\n          &quot;line&quot;: 5,\n          &quot;column&quot;: 28\n        &#125;\n      &#125;\n    &#125;,\n    &#x2F;&#x2F; height: 20px; &#x2F;* px *&#x2F; 会拆解成两部分 1. 属性-值  2. 注释\n    &#123;\n      &quot;type&quot;: &quot;declaration&quot;,\n      &quot;property&quot;: &quot;height&quot;,\n      &quot;value&quot;: &quot;20px&quot;,\n      &quot;position&quot;: &#123;\n        &quot;start&quot;: &#123;\n          &quot;line&quot;: 6,\n          &quot;column&quot;: 3\n        &#125;,\n        &quot;end&quot;: &#123;\n          &quot;line&quot;: 6,\n          &quot;column&quot;: 15\n        &#125;\n      &#125;\n    &#125;,\n    &#123;\n      &quot;type&quot;: &quot;comment&quot;,\n      &quot;comment&quot;: &quot; px &quot;,\n      &quot;position&quot;: &#123;\n        &quot;start&quot;: &#123;\n          &quot;line&quot;: 6,\n          &quot;column&quot;: 17\n        &#125;,\n        &quot;end&quot;: &#123;\n          &quot;line&quot;: 6,\n          &quot;column&quot;: 25\n        &#125;\n      &#125;\n    &#125;,\n    &#x2F;&#x2F; padding: 6px; &#x2F;*px*&#x2F; 会拆解成两部分 1. 属性-值  2. 注释\n    &#123;\n      &quot;type&quot;: &quot;declaration&quot;,\n      &quot;property&quot;: &quot;padding&quot;,\n      &quot;value&quot;: &quot;6px&quot;,\n      &quot;position&quot;: &#123;\n        &quot;start&quot;: &#123;\n          &quot;line&quot;: 7,\n          &quot;column&quot;: 3\n        &#125;,\n        &quot;end&quot;: &#123;\n          &quot;line&quot;: 7,\n          &quot;column&quot;: 15\n        &#125;\n      &#125;\n    &#125;,\n    &#123;\n      &quot;type&quot;: &quot;comment&quot;,\n      &quot;comment&quot;: &quot;px&quot;,\n      &quot;position&quot;: &#123;\n        &quot;start&quot;: &#123;\n          &quot;line&quot;: 7,\n          &quot;column&quot;: 17\n        &#125;,\n        &quot;end&quot;: &#123;\n          &quot;line&quot;: 7,\n          &quot;column&quot;: 23\n        &#125;\n      &#125;\n    &#125;,\n    &#x2F;&#x2F; -webkit-animation: anim1 linear infinite;\n    &#123;\n      &quot;type&quot;: &quot;declaration&quot;,\n      &quot;property&quot;: &quot;-webkit-animation&quot;,\n      &quot;value&quot;: &quot;anim1 linear infinite&quot;,\n      &quot;position&quot;: &#123;\n        &quot;start&quot;: &#123;\n          &quot;line&quot;: 8,\n          &quot;column&quot;: 3\n        &#125;,\n        &quot;end&quot;: &#123;\n          &quot;line&quot;: 8,\n          &quot;column&quot;: 43\n        &#125;\n      &#125;\n    &#125;\n  ]\n&#125;</code></pre>\n\n</p>\n</details>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><pre class=\"line-numbers language-css\" data-language=\"css\"><code class=\"language-css\">&#x2F;* \n1. 含有注释的会被拆解成两部分，不含注释的会被拆为1部分\n2. 属性和值会被拆分成：\n    &#123;\n      &quot;type&quot;: &quot;declaration&quot;, &#x2F;&#x2F; 类型\n      &quot;property&quot;: &quot;padding&quot;, &#x2F;&#x2F; 属性\n      &quot;value&quot;: &quot;6px&quot;,        &#x2F;&#x2F; 值\n      &quot;position&quot;: &#123;          &#x2F;&#x2F; 位置： 代码开始位置（行line，列column），结束位置（行line，列column）\n        &quot;start&quot;: &#123;\n          &quot;line&quot;: 7,\n          &quot;column&quot;: 3\n        &#125;,\n        &quot;end&quot;: &#123;\n          &quot;line&quot;: 7,\n          &quot;column&quot;: 15\n        &#125;\n      &#125;\n    &#125;\n 3.  hello world 注释会被直接转化\n    \n    &#123;\n        &quot;type&quot;: &quot;comment&quot;,\n        &quot;comment&quot;: &quot; hello world &quot;,\n        &quot;position&quot;: &#123;\n          &quot;start&quot;: &#123;\n            &quot;line&quot;: 11,\n            &quot;column&quot;: 1\n          &#125;,\n          &quot;end&quot;: &#123;\n            &quot;line&quot;: 11,\n            &quot;column&quot;: 18\n          &#125;\n        &#125;\n      &#125;\n  4. 选择器与注释之间会被放置到不同的类型中\n*&#x2F;</code></pre>\n\n<h2 id=\"px2rem-generateThree-源码\"><a href=\"#px2rem-generateThree-源码\" class=\"headerlink\" title=\"px2rem - generateThree 源码\"></a>px2rem - generateThree 源码</h2><ol>\n<li>源码重点是 for 循环，因 ast 是树形结构必然是深度遍历</li>\n<li><code>declaration.type === &quot;declaration&quot; &amp;&amp; pxRegExp.test(declaration.value)</code> 匹配到类似 <code>2px</code>的值进行处理</li>\n<li>这个处理有点意思了，它不是直接就处理，而是当后面看看后面的注释是不是注释 <code>px</code> 或 是去完空格是<code>px</code></li>\n<li>最后一行，直接在语法（json）树上做值的变更<code>declaration.value = self._getCalcValue(&quot;px&quot;, declaration.value, dpr); // common transform</code>（因为是引用类型，直接改 value 就可以了）</li>\n</ol>\n<details class=\"custom-details\">\n<summary>查看代码</summary>\n<p><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; 根据dpr生成不同 [data-dpr&#x3D;&quot;1&quot;]、[data-dpr&#x3D;&quot;2&quot;]、[data-dpr&#x3D;&quot;3&quot;]\nPx2rem.prototype.generateThree &#x3D; function (cssText, dpr) &#123;\n  console.log(&quot;cssText&quot;, cssText);\n  dpr &#x3D; dpr || 2;\n  var self &#x3D; this;\n  var config &#x3D; self.config;\n  var astObj &#x3D; css.parse(cssText);\n  console.log(&quot;astObj&quot;, JSON.stringify(astObj, null, 2));\n\n  function processRules(rules) &#123;\n    for (var i &#x3D; 0; i &lt; rules.length; i++) &#123;\n      var rule &#x3D; rules[i];\n      &#x2F;&#x2F; 媒体查询\n      if (rule.type &#x3D;&#x3D;&#x3D; &quot;media&quot;) &#123;\n        processRules(rule.rules); &#x2F;&#x2F; recursive invocation while dealing with media queries\n        continue;\n        &#x2F;&#x2F; 动画\n      &#125; else if (rule.type &#x3D;&#x3D;&#x3D; &quot;keyframes&quot;) &#123;\n        processRules(rule.keyframes); &#x2F;&#x2F; recursive invocation while dealing with keyframes\n        continue;\n        &#x2F;&#x2F;\n      &#125; else if (rule.type !&#x3D;&#x3D; &quot;rule&quot; &amp;&amp; rule.type !&#x3D;&#x3D; &quot;keyframe&quot;) &#123;\n        continue;\n      &#125;\n\n      var declarations &#x3D; rule.declarations;\n\n      for (var j &#x3D; 0; j &lt; declarations.length; j++) &#123;\n        var declaration &#x3D; declarations[j];\n        &#x2F;&#x2F; need transform: declaration &amp;&amp; has &#39;px&#39;\n        if (\n          &#x2F;&#x2F; 这里使用了正则进行匹配\n          &#x2F;&#x2F; prettier-ignore\n          declaration.type &#x3D;&#x3D;&#x3D; &quot;declaration&quot; &amp;&amp; pxRegExp.test(declaration.value)\n        ) &#123;\n          var nextDeclaration &#x3D; rule.declarations[j + 1];\n          &#x2F;&#x2F; 注释\n          if (nextDeclaration &amp;&amp; nextDeclaration.type &#x3D;&#x3D;&#x3D; &quot;comment&quot;) &#123;\n            &#x2F;&#x2F; 不进行转化\n            &#x2F;&#x2F; next next declaration is comment\n            if (nextDeclaration.comment.trim() &#x3D;&#x3D;&#x3D; config.keepComment) &#123;\n              &#x2F;&#x2F; no transform\n              declarations.splice(j + 1, 1); &#x2F;&#x2F; delete corresponding comment &#x2F;&#x2F; 完事，把注释删掉\n              continue;\n            &#125; else if (\n              &#x2F;&#x2F; px注释？保持px\n              nextDeclaration.comment.trim() &#x3D;&#x3D;&#x3D; config.forcePxComment\n            ) &#123;\n              &#x2F;&#x2F; force px\n              declarations.splice(j + 1, 1); &#x2F;&#x2F; delete corresponding comment &#x2F;&#x2F; 完事，把注释删掉\n            &#125;\n          &#125;\n          &#x2F;&#x2F; 计算值\n          declaration.value &#x3D; self._getCalcValue(&quot;px&quot;, declaration.value, dpr); &#x2F;&#x2F; common transform\n        &#125;\n      &#125;\n    &#125;\n  &#125;\n\n  processRules(astObj.stylesheet.rules);\n\n  return css.stringify(astObj);\n&#125;;</code></pre>\n\n</p>\n</details>\n<h3 id=\"getCalcValue-值的计算\"><a href=\"#getCalcValue-值的计算\" class=\"headerlink\" title=\"_getCalcValue 值的计算\"></a>_getCalcValue 值的计算</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; get calculated value of px or rem\nPx2rem.prototype._getCalcValue &#x3D; function (type, value, dpr) &#123;\n  console.log(&quot;type, value, dpr&quot;, type, value, dpr);\n  var config &#x3D; this.config;\n  var pxGlobalRegExp &#x3D; new RegExp(pxRegExp.source, &quot;g&quot;);\n\n  function getValue(val) &#123;\n    &#x2F;&#x2F; 计算取多少位精度\n    val &#x3D; parseFloat(val.toFixed(config.remPrecision)); &#x2F;&#x2F; control decimal precision of the calculated value\n    return val &#x3D;&#x3D; 0 ? val : val + type;\n  &#125;\n  &#x2F;&#x2F; 值进行替换操作\n  return value.replace(pxGlobalRegExp, function ($0, $1) &#123;\n    &#x2F;&#x2F; prettier-ignore\n    return type &#x3D;&#x3D;&#x3D; &quot;px&quot; ? getValue(($1 * dpr) &#x2F; config.baseDpr) &#x2F;*保持px*&#x2F;: getValue($1 &#x2F; config.remUnit)&#x2F;*转为rem *&#x2F;;\n  &#125;);\n&#125;;</code></pre>\n\n<h3 id=\"config-的值\"><a href=\"#config-的值\" class=\"headerlink\" title=\"config 的值\"></a>config 的值</h3><details class=\"custom-details\">\n<summary>查看代码</summary>\n<p><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">var defaultConfig &#x3D; &#123;\n  baseDpr: 2, &#x2F;&#x2F; base device pixel ratio (default: 2)\n  remUnit: 75, &#x2F;&#x2F; rem unit value (default: 75)\n  remPrecision: 6, &#x2F;&#x2F; rem value precision (default: 6)\n  forcePxComment: &quot;px&quot;, &#x2F;&#x2F; force px comment (default: &#96;px&#96;)\n  keepComment: &quot;no&quot;, &#x2F;&#x2F; no transform value comment (default: &#96;no&#96;)\n&#125;;\n\nfunction Px2rem(options) &#123;\n  this.config &#x3D; &#123;&#125;;\n  extend(this.config, defaultConfig, options);\n&#125;\n\n&#x2F;&#x2F; 测试代码中有实例化：  var px2remIns &#x3D; new Px2rem(&#x2F;*&#123;remUnit: 75, baseDpr: 2&#125;*&#x2F;);\n&#x2F;&#x2F; 之后执行：          var outputText &#x3D; px2remIns.generateThree(srcText1); &#x2F;&#x2F;默认baseDpr为2\n&#x2F;&#x2F; 所以按照上面运行后： 除了注释外，基本上是原样输出的，不用差异\n\n&#x2F;&#x2F; 改为 var outputText &#x3D; px2remIns.generateThree(srcText1, 1 );\n\n&#x2F;&#x2F; body &#123;\n&#x2F;&#x2F;   background: #eee;\n&#x2F;&#x2F;   color: #888;\n&#x2F;&#x2F;   &#x2F;* color is gray *&#x2F;\n&#x2F;&#x2F;   border: 1px solid;\n&#x2F;&#x2F;   height: 10px;   这个 20x-&gt;10px\n&#x2F;&#x2F;   padding: 3px;   这个 6x-&gt;3px\n&#x2F;&#x2F;   -webkit-animation: anim1 linear infinite;\n&#x2F;&#x2F; &#125;\n\n&#x2F;&#x2F; 这么改动的原因是执行了 type &#x3D; &#39;px&#39;, 即： getValue(($1 * dpr) &#x2F; config.baseDpr)\n\n&#x2F;&#x2F; 值进行替换操作\n&#x2F;&#x2F; return value.replace(pxGlobalRegExp, function ($0, $1) &#123;\n&#x2F;&#x2F;   &#x2F;&#x2F; prettier-ignore\n&#x2F;&#x2F;   return type &#x3D;&#x3D;&#x3D; &quot;px&quot; ? getValue(($1 * dpr) &#x2F; config.baseDpr) &#x2F;*保持px*&#x2F;: getValue($1 &#x2F; config.remUnit)&#x2F;*转为rem *&#x2F;;\n&#x2F;&#x2F; &#125;);\n&#x2F;&#x2F; function getValue(val) &#123;\n&#x2F;&#x2F;   &#x2F;&#x2F; 计算取多少位精度\n&#x2F;&#x2F;   val &#x3D; parseFloat(val.toFixed(config.remPrecision)); &#x2F;&#x2F; control decimal precision of the calculated value\n&#x2F;&#x2F;   return val &#x3D;&#x3D; 0 ? val : val + type;\n&#x2F;&#x2F; &#125;\n\n&#x2F;&#x2F; 按照计算逻辑应该是\n&#x2F;&#x2F;   height: 10.000000px;   这个 20x-&gt;10.000000px\n&#x2F;&#x2F;   padding: 3.000000px;   这个 6x-&gt;3.000000px\n\n&#x2F;&#x2F; parseFloat(val.toFixed(config.remPrecision)) ，parseFloat函数，在参数是小数点后都是0的，会做处理 转化成整数了\n\n&#x2F;&#x2F; 嗯到这里就对的上了</code></pre>\n\n<p>:::<br><img src=\"http://t-blog-images.aijs.top/img/202302222225104.webp\" /></p>\n<h2 id=\"ast-gt-generate\"><a href=\"#ast-gt-generate\" class=\"headerlink\" title=\"ast -&gt; generate\"></a>ast -&gt; generate</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">css.stringify(astObj); &#x2F;&#x2F; 将ast转化成代码输出</code></pre>\n\n<hr>\n<h2 id=\"Px2rem-prototype-generateRem\"><a href=\"#Px2rem-prototype-generateRem\" class=\"headerlink\" title=\"Px2rem.prototype.generateRem\"></a>Px2rem.prototype.generateRem</h2><p>:::details 查看代码</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; generate rem version stylesheet\nPx2rem.prototype.generateRem &#x3D; function (cssText) &#123;\n  var self &#x3D; this;\n  var config &#x3D; self.config;\n  var astObj &#x3D; css.parse(cssText);\n  &#x2F;**\n   * 规则处理函数\n   * @param &#123;*&#125; rules  规则\n   * @param &#123;*&#125; noDealPx  不处理px,默认是false\n   *&#x2F;\n  function processRules(rules, noDealPx) &#123;\n    &#x2F;&#x2F; FIXME: keyframes do not support &#96;force px&#96; comment\n    for (var i &#x3D; 0; i &lt; rules.length; i++) &#123;\n      var rule &#x3D; rules[i];\n      if (rule.type &#x3D;&#x3D;&#x3D; &quot;media&quot;) &#123;\n        &#x2F;&#x2F; 处理媒体查询时的递归调用\n        processRules(rule.rules); &#x2F;&#x2F; recursive invocation while dealing with media queries\n        continue;\n      &#125; else if (rule.type &#x3D;&#x3D;&#x3D; &quot;keyframes&quot;) &#123;\n        &#x2F;&#x2F; 处理关键帧时的递归调用\n        processRules(rule.keyframes, true); &#x2F;&#x2F; recursive invocation while dealing with keyframes\n        continue;\n      &#125; else if (rule.type !&#x3D;&#x3D; &quot;rule&quot; &amp;&amp; rule.type !&#x3D;&#x3D; &quot;keyframe&quot;) &#123;\n        continue;\n      &#125;\n      &#x2F;&#x2F; 生成 [data-dpr&#x3D;\n      if (!noDealPx) &#123;\n        &#x2F;&#x2F; generate 3 new rules which has [data-dpr]\n        var newRules &#x3D; [];\n        for (var dpr &#x3D; 1; dpr &lt;&#x3D; 3; dpr++) &#123;\n          var newRule &#x3D; &#123;&#125;;\n          newRule.type &#x3D; rule.type;\n          newRule.selectors &#x3D; rule.selectors.map(function (sel) &#123;\n            return &#39;[data-dpr&#x3D;&quot;&#39; + dpr + &#39;&quot;] &#39; + sel;\n          &#125;);\n          newRule.declarations &#x3D; [];\n          newRules.push(newRule);\n        &#125;\n      &#125;\n\n      var declarations &#x3D; rule.declarations;\n      for (var j &#x3D; 0; j &lt; declarations.length; j++) &#123;\n        var declaration &#x3D; declarations[j];\n        &#x2F;&#x2F; need transform: declaration &amp;&amp; has &#39;px&#39;\n        &#x2F;&#x2F; prettier-ignore\n        if (declaration.type &#x3D;&#x3D;&#x3D; &quot;declaration&quot; &amp;&amp; pxRegExp.test(declaration.value)) &#123;\n          var nextDeclaration &#x3D; declarations[j + 1];\n          if (nextDeclaration &amp;&amp; nextDeclaration.type &#x3D;&#x3D;&#x3D; &quot;comment&quot;) &#123;\n            &#x2F;&#x2F; next next declaration is comment\n            if (nextDeclaration.comment.trim() &#x3D;&#x3D;&#x3D; config.forcePxComment) &#123;\n              &#x2F;&#x2F; force px\n              &#x2F;&#x2F; do not transform &#96;0px&#96;\n              if (declaration.value &#x3D;&#x3D;&#x3D; &quot;0px&quot;) &#123;\n                declaration.value &#x3D; &quot;0&quot;;\n                declarations.splice(j + 1, 1); &#x2F;&#x2F; delete corresponding comment\n                continue;\n              &#125;\n              if (!noDealPx) &#123;\n                &#x2F;&#x2F; generate 3 new declarations and put them in the new rules which has [data-dpr]\n                for (var dpr &#x3D; 1; dpr &lt;&#x3D; 3; dpr++) &#123;\n                  var newDeclaration &#x3D; &#123;&#125;;\n                  extend(true, newDeclaration, declaration);\n                  &#x2F;&#x2F; prettier-ignore\n                  newDeclaration.value &#x3D; self._getCalcValue(&quot;px&quot;, newDeclaration.value, dpr);\n                  newRules[dpr - 1].declarations.push(newDeclaration);\n                &#125;\n                declarations.splice(j, 2); &#x2F;&#x2F; delete this rule and corresponding comment\n                j--;\n              &#125; else &#123;\n                &#x2F;&#x2F; FIXME: keyframes do not support &#96;force px&#96; comment\n                &#x2F;&#x2F; prettier-ignore\n                declaration.value &#x3D; self._getCalcValue(&quot;rem&quot;, declaration.value); &#x2F;&#x2F; common transform\n                declarations.splice(j + 1, 1); &#x2F;&#x2F; delete corresponding comment\n              &#125;\n            &#125; else if (nextDeclaration.comment.trim() &#x3D;&#x3D;&#x3D; config.keepComment) &#123;\n              &#x2F;&#x2F; no transform\n              &#x2F;&#x2F; 删除注释\n              declarations.splice(j + 1, 1); &#x2F;&#x2F; delete corresponding comment\n            &#125; else &#123;\n              declaration.value &#x3D; self._getCalcValue(&quot;rem&quot;, declaration.value); &#x2F;&#x2F; common transform\n            &#125;\n          &#125; else &#123;\n            declaration.value &#x3D; self._getCalcValue(&quot;rem&quot;, declaration.value); &#x2F;&#x2F; common transform &#x2F;&#x2F; 普通转化\n          &#125;\n        &#125;\n      &#125;\n      &#x2F;&#x2F; 如果原始规则没有声明，请删除它\n      &#x2F;&#x2F; if the origin rule has no declarations, delete it\n      if (!rules[i].declarations.length) &#123;\n        rules.splice(i, 1);\n        i--;\n      &#125;\n\n      if (!noDealPx) &#123;\n        &#x2F;&#x2F; 添加包含强制使用px的声明的新规则\n        &#x2F;&#x2F; add the new rules which contain declarations that are forced to use px\n        if (newRules[0].declarations.length) &#123;\n          rules.splice(i + 1, 0, newRules[0], newRules[1], newRules[2]);\n          i +&#x3D; 3; &#x2F;&#x2F; skip the added new rules\n        &#125;\n      &#125;\n    &#125;\n  &#125;\n\n  processRules(astObj.stylesheet.rules);\n  return css.stringify(astObj);\n&#125;;</code></pre>\n\n</p>\n</details>\n<h3 id=\"代码块分析\"><a href=\"#代码块分析\" class=\"headerlink\" title=\"代码块分析\"></a>代码块分析</h3><img src=\"http://t-blog-images.aijs.top/img/202302231525679.webp\" />\n\n<img src=\"http://t-blog-images.aijs.top/img/202302231536403.webp\" />\n\n<img src=\"http://t-blog-images.aijs.top/img/202302231548977.webp\" />\n\n<h2 id=\"工具调试\"><a href=\"#工具调试\" class=\"headerlink\" title=\"工具调试\"></a>工具调试</h2><p>写个日志，然后<code>pn test</code>输出太麻烦了</p>\n<h3 id=\"debug-配置\"><a href=\"#debug-配置\" class=\"headerlink\" title=\"debug 配置\"></a>debug 配置</h3><pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n  &#x2F;&#x2F; Use IntelliSense to learn about possible attributes.\n  &#x2F;&#x2F; Hover to view descriptions of existing attributes.\n  &#x2F;&#x2F; For more information, visit: https:&#x2F;&#x2F;go.microsoft.com&#x2F;fwlink&#x2F;?linkid&#x3D;830387\n  &quot;version&quot;: &quot;0.2.0&quot;,\n  &quot;configurations&quot;: [\n    &#x2F;&#x2F; &#123;\n    &#x2F;&#x2F;   &quot;type&quot;: &quot;node&quot;,\n    &#x2F;&#x2F;   &quot;request&quot;: &quot;launch&quot;,\n    &#x2F;&#x2F;   &quot;name&quot;: &quot;Launch Program&quot;,\n    &#x2F;&#x2F;   &quot;skipFiles&quot;: [&quot;&lt;node_internals&gt;&#x2F;**&quot;],\n    &#x2F;&#x2F;   &#x2F;&#x2F; &quot;program&quot;: &quot;$&#123;workspaceFolder&#125;&#x2F;index.js&quot;\n    &#x2F;&#x2F;   &quot;program&quot;: &quot;$&#123;workspaceFolder&#125;&#x2F;test&#x2F;px2rem.test.js&quot;\n    &#x2F;&#x2F; &#125;,\n    &#123;\n      &quot;name&quot;: &quot;Run mocha&quot;,\n      &quot;type&quot;: &quot;node&quot;,\n      &quot;request&quot;: &quot;launch&quot;,\n      &quot;program&quot;: &quot;$&#123;workspaceRoot&#125;&#x2F;node_modules&#x2F;mocha&#x2F;bin&#x2F;_mocha&quot;,\n      &quot;stopOnEntry&quot;: false,\n      &#x2F;&#x2F; &quot;args&quot;: [&quot;test&#x2F;index.js&quot;, &quot;--no-timeouts&quot;],\n      &quot;cwd&quot;: &quot;$&#123;workspaceRoot&#125;&quot;,\n      &quot;runtimeExecutable&quot;: null,\n      &quot;env&quot;: &#123;\n        &quot;NODE_ENV&quot;: &quot;testing&quot;\n      &#125;\n    &#125;\n  ]\n&#125;</code></pre>\n\n<h3 id=\"vscode-debug-调试\"><a href=\"#vscode-debug-调试\" class=\"headerlink\" title=\"vscode debug 调试\"></a>vscode debug 调试</h3><img src=\"http://t-blog-images.aijs.top/img/202302231554055.webp\" />\n\n<h3 id=\"内部依赖包\"><a href=\"#内部依赖包\" class=\"headerlink\" title=\"内部依赖包\"></a>内部依赖包</h3><ol>\n<li>css 包</li>\n<li>extend 包: for Node.js, 实现 深度拷贝 功能 <a href=\"https://github.com/justmoon/node-extend/blob/main/index.js\" target=\"_blank\" >见</a></li>\n</ol>\n<h2 id=\"总结-1\"><a href=\"#总结-1\" class=\"headerlink\" title=\"总结\"></a>总结</h2><img src=\"http://t-blog-images.aijs.top/img/202302231648311.webp\" />\n\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ol>\n<li><a href=\"https://juejin.cn/post/6957611897550012430\" target=\"_blank\" >自适应布局方案与 px2rem-loader 加强版源码实现</a></li>\n<li><a href=\"https://github.com/songsiqi/px2rem\" target=\"_blank\" >https://github.com/songsiqi/px2rem</a></li>\n<li><a href=\"https://www.twilio.com/blog/abstract-syntax-trees\" target=\"_blank\" >ASTs - What are they and how to use them</a></li>\n</ol>\n<h2 id=\"代码仓库\"><a href=\"#代码仓库\" class=\"headerlink\" title=\"代码仓库\"></a>代码仓库</h2><ol>\n<li><a href=\"https://github.com/841660202/px2rem/tree/generateThree\" target=\"_blank\" >generateThree</a></li>\n<li><a href=\"https://github.com/841660202/px2rem/tree/generateRem\" target=\"_blank\" >generateRem</a></li>\n</ol>\n","text":"5w2h 为什么会有 px2rem? 什么是 px2rem? 现在？ 我？ 在理论和实现方面？ 要如何深入理解？ 理解到什么程度？ 移动端适配的目的移动端适配的宗旨是: 让拥有不同屏幕大小的终端设备拥有一致的 UI 界面, 让拥有更大屏幕的终端展示更多的内容 几个概念 设备像素 ...","link":"","photos":[],"count_time":{"symbolsCount":"29k","symbolsTime":"27 mins."},"categories":[{"name":"移动端适配","slug":"移动端适配","count":4,"path":"api/categories/移动端适配.json"}],"tags":[{"name":"源码","slug":"源码","count":16,"path":"api/tags/源码.json"},{"name":"移动端适配","slug":"移动端适配","count":4,"path":"api/tags/移动端适配.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#5w2h\"><span class=\"toc-text\">5w2h</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%A7%BB%E5%8A%A8%E7%AB%AF%E9%80%82%E9%85%8D%E7%9A%84%E7%9B%AE%E7%9A%84\"><span class=\"toc-text\">移动端适配的目的</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%87%A0%E4%B8%AA%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">几个概念</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%85%B3%E7%B3%BB\"><span class=\"toc-text\">关系</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#px2rem-%E5%8E%9F%E7%90%86\"><span class=\"toc-text\">px2rem 原理</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#px2rem-%E6%BA%90%E7%A0%81\"><span class=\"toc-text\">px2rem 源码</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%96%87%E6%A1%A3-px2rem-%E6%89%A7%E8%A1%8C\"><span class=\"toc-text\">文档 px2rem 执行</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A6%82%E4%BD%95%E8%B0%83%E8%AF%95%EF%BC%9F\"><span class=\"toc-text\">如何调试？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#css-parse-cssText-%E7%94%9F%E6%88%90%E7%9A%84-ast-%E6%98%AF%E4%BB%80%E4%B9%88%E6%A0%B7%E5%AD%90%EF%BC%9F\"><span class=\"toc-text\">css.parse(cssText) 生成的 ast 是什么样子？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BA%90%E7%A0%81-gt-ast-%E5%88%86%E6%9E%90\"><span class=\"toc-text\">源码-&gt;ast 分析</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%8A%82%E7%82%B9-1\"><span class=\"toc-text\">节点 1</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%8A%82%E7%82%B9-2\"><span class=\"toc-text\">节点 2</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%8A%82%E7%82%B9-2-%E7%B2%BE%E7%AE%80%E5%86%85%E5%AE%B9\"><span class=\"toc-text\">节点 2 精简内容</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%8A%82%E7%82%B9-3\"><span class=\"toc-text\">节点 3</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E8%8A%82%E7%82%B9-4\"><span class=\"toc-text\">节点 4</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#astexplorer-%E5%90%8C%E6%A0%B7%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%E6%95%88%E6%9E%9C\"><span class=\"toc-text\">astexplorer 同样可以看到效果</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E9%87%8A-%E4%BC%9A%E7%94%9F%E6%88%90%E4%BB%80%E4%B9%88%EF%BC%9F\"><span class=\"toc-text\">注释 会生成什么？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%80%89%E6%8B%A9%E5%99%A8-%E4%BC%9A%E7%94%9F%E6%88%90%E4%BB%80%E4%B9%88%EF%BC%9F\"><span class=\"toc-text\">选择器 会生成什么？</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#px2rem-generateThree-%E6%BA%90%E7%A0%81\"><span class=\"toc-text\">px2rem - generateThree 源码</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#getCalcValue-%E5%80%BC%E7%9A%84%E8%AE%A1%E7%AE%97\"><span class=\"toc-text\">_getCalcValue 值的计算</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#config-%E7%9A%84%E5%80%BC\"><span class=\"toc-text\">config 的值</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#ast-gt-generate\"><span class=\"toc-text\">ast -&gt; generate</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Px2rem-prototype-generateRem\"><span class=\"toc-text\">Px2rem.prototype.generateRem</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E5%9D%97%E5%88%86%E6%9E%90\"><span class=\"toc-text\">代码块分析</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B7%A5%E5%85%B7%E8%B0%83%E8%AF%95\"><span class=\"toc-text\">工具调试</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#debug-%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">debug 配置</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#vscode-debug-%E8%B0%83%E8%AF%95\"><span class=\"toc-text\">vscode debug 调试</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%86%85%E9%83%A8%E4%BE%9D%E8%B5%96%E5%8C%85\"><span class=\"toc-text\">内部依赖包</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93-1\"><span class=\"toc-text\">总结</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5\"><span class=\"toc-text\">参考链接</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%A3%E7%A0%81%E4%BB%93%E5%BA%93\"><span class=\"toc-text\">代码仓库</span></a></li></ol>","author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"<div><p>眼中有光，心中有梦，脚下有路</p><p>做好该做的，然后做自己想做的</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"思维模型和思考方式","uid":"051f5d5714c1620031ccda827f9d7975","slug":"2023-02-23","date":"2023-02-22T16:38:56.000Z","updated":"2023-02-23T13:26:54.132Z","comments":true,"path":"api/articles/2023-02-23.json","keywords":null,"cover":"https://img3.qianzhan.com/news/202111/19/20211119-d288964e0c05a13b_760x5000.jpg","text":"背景一次面试让我发现了，我存在的问题。想了三天，才写本篇 不够系统： 学的知识点比较分散，关联性太差 对面试问题：没有问清楚就做出回答，以至于有些问题没有答到点子上，也不能将已有的东西，有效的传达 对于面试官的总结：总结的不全面，更多总结到一个点，问我是不是，我习惯性的说是的 反...","link":"","photos":[],"count_time":{"symbolsCount":707,"symbolsTime":"1 mins."},"categories":[{"name":"复盘","slug":"复盘","count":8,"path":"api/categories/复盘.json"}],"tags":[{"name":"复盘","slug":"复盘","count":8,"path":"api/tags/复盘.json"}],"author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"<div><p>眼中有光，心中有梦，脚下有路</p><p>做好该做的，然后做自己想做的</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}},"next_post":{"title":"js代码注释","uid":"6048c84185b9e926fc5bd13fc5af10cc","slug":"2023-02-22comment","date":"2023-02-22T08:22:35.000Z","updated":"2023-02-23T13:26:54.130Z","comments":true,"path":"api/articles/2023-02-22comment.json","keywords":null,"cover":null,"text":"js 文件中的注释 ","link":"","photos":[],"count_time":{"symbolsCount":10,"symbolsTime":"1 mins."},"categories":[{"name":"工具","slug":"工具","count":19,"path":"api/categories/工具.json"}],"tags":[{"name":"工具","slug":"工具","count":13,"path":"api/tags/工具.json"}],"author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"<div><p>眼中有光，心中有梦，脚下有路</p><p>做好该做的，然后做自己想做的</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}}}