{"title":"react hook 如何增加依赖更新","uid":"66abc3dc4231aab7cbe8387d3c356301","slug":"2022-08-23react-hook","date":"2022-08-23T08:25:15.000Z","updated":"2022-09-16T14:01:56.906Z","comments":true,"path":"api/articles/2022-08-23react-hook.json","keywords":null,"cover":[],"content":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>想将，业务逻辑按钮组封装为 hook,在移动端和 pc 端之间进行逻辑复用。在详情页面使用时候，发现并没有生效</p>\n<p>原因： 无法给 useActions，增加依赖项，类似 useEffect 的第二参数一样。</p>\n<p>查询了 ahooks 的 hook，了解类似解决方案</p>\n<h2 id=\"useActions\"><a href=\"#useActions\" class=\"headerlink\" title=\"useActions\"></a>useActions</h2><pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">import &#123; EUserType, EnumProblemStatus &#125; from &quot;@&#x2F;const&quot;;\nimport &#123; CommonModel &#125; from &quot;@&#x2F;models&quot;;\nimport &#123; useMemo &#125; from &quot;react&quot;;\nimport &#123; useSelector &#125; from &quot;react-redux&quot;;\n\nexport const useActions &#x3D; (detail) &#x3D;&gt; &#123;\n  const user &#x3D; useSelector(CommonModel.selectors.getUser);\n  const &#123; state: status &#125; &#x3D; detail;\n\n  const userType &#x3D; useMemo(() &#x3D;&gt; &#123;\n    if (detail?.creatorPerson?.personId &#x3D;&#x3D;&#x3D; user.staffId) &#123;\n      return EUserType.creator;\n    &#125;\n    if (detail?.solverStaffPerson?.personId &#x3D;&#x3D;&#x3D; user.staffId) &#123;\n      return EUserType.operator;\n    &#125;\n    if (\n      detail?.cooperationStaffs?.findIndex(\n        (item) &#x3D;&gt; item.personId &#x3D;&#x3D;&#x3D; user.staffId\n      ) &gt; -1\n    ) &#123;\n      return EUserType.helper;\n    &#125;\n    return EUserType.other;\n  &#125;, [\n    detail?.cooperationStaffs,\n    detail.creatorPerson?.personId,\n    detail?.solverStaffPerson?.personId,\n    user?.staffId,\n  ]);\n  const btnComps &#x3D; useMemo(\n    () &#x3D;&gt; (&#123;\n      &#x2F;&#x2F; edit: &#123;\n      &#x2F;&#x2F;   text: &#39;编辑&#39;,\n      &#x2F;&#x2F;   key: &#39;edit&#39;,\n      &#x2F;&#x2F; &#125;,\n      start_solve: &#123;\n        text: &quot;开始处理&quot;,\n        key: &quot;start_solve&quot;,\n        value: 2,\n      &#125;,\n      cancel: &#123;\n        text: &quot;撤销&quot;,\n        icon: &quot;icon-huifu&quot;,\n        disabledMessage: &quot;非创建人不可撤销&quot;,\n        key: &quot;cancel&quot;,\n        type: &quot;default&quot;,\n        confirm: true,\n        value: 7,\n        disabled: user.staffId !&#x3D;&#x3D; detail?.creatorPerson?.personId,\n      &#125;,\n      trans: &#123;\n        text: &quot;转交&quot;,\n        icon: &quot;icon-transfer&quot;,\n        key: &quot;trans&quot;,\n        message: &quot;请选择转交人&quot;,\n        required: true,\n        contact: true,\n        limit: 1,\n        allowType: [&quot;staff&quot;],\n        defaultValue: [],\n        disabledValues: [user.staffId],\n        value: 8,\n      &#125;,\n      finish: &#123;\n        text: &quot;完结&quot;,\n        icon: &quot;icon-guangbo&quot;,\n        key: &quot;finish&quot;,\n        confirm: true,\n        value: 6,\n      &#125;,\n      cuiBan: &#123;\n        text: &quot;催办&quot;,\n        key: &quot;cuiBan&quot;,\n        confirm: true,\n        value: 12,\n      &#125;,\n      solved: &#123;\n        text: &quot;已解决&quot;,\n        icon: &quot;icon-yiwancheng&quot;,\n        key: &quot;solved&quot;,\n        confirm: true,\n        value: 5,\n      &#125;,\n      changer: &#123;\n        text: &quot;变更经办人&quot;,\n        key: &quot;changer&quot;,\n        contact: true,\n        limit: 1,\n        allowType: [&quot;staff&quot;],\n        defaultValue: [],\n        message: &quot;请选择转变更经办人&quot;,\n        required: true,\n        value: 8,\n        disabledValues: [user.staffId],\n      &#125;,\n      add_helper: &#123;\n        text: &quot;添加协作人&quot;,\n        key: &quot;add_helper&quot;,\n        icon: &quot;icon-teamwork&quot;,\n        contact: true,\n        allowType: [&quot;staff&quot;],\n        defaultValue: [],\n        message: &quot;请选择协作人&quot;,\n        required: true,\n        value: 9,\n      &#125;,\n      notify_creator: &#123;\n        text: &quot;提醒确认&quot;,\n        key: &quot;notify_creator&quot;,\n        icon: &quot;icon-querentixing&quot;,\n        confirm: true,\n        value: 13,\n      &#125;,\n      receiver: &#123;\n        text: &quot;认领处理&quot;,\n        key: &quot;receiver&quot;,\n        icon: &quot;icon-receiver&quot;,\n        confirm: true,\n        value: 8,\n      &#125;,\n      exit_helper: &#123;\n        text: &quot;退出协作&quot;,\n        key: &quot;exit_helper&quot;,\n        confirm: true,\n        value: 11,\n      &#125;,\n      join: &#123;\n        text: &quot;加入协作&quot;,\n        confirm: true,\n        key: &quot;join&quot;,\n        value: 9,\n      &#125;,\n      continue: &#123;\n        text: &quot;继续处理&quot;,\n        key: &quot;continue&quot;,\n        value: 2,\n      &#125;,\n      end: &#123;\n        text: &quot;完结&quot;,\n        key: &quot;end&quot;,\n        confirm: true,\n        value: 6,\n      &#125;,\n    &#125;),\n    [detail.problemId]\n  );\n  const actionBtns &#x3D; useMemo(() &#x3D;&gt; &#123;\n    const btns &#x3D; [];\n    switch (status) &#123;\n      case EnumProblemStatus.waiting:\n        switch (userType) &#123;\n          case EUserType.creator:\n            &#x2F;&#x2F; btns.push(btnComps.edit)\n            btns.push(btnComps.cancel);\n            btns.push(btnComps.cuiBan);\n            btns.push(btnComps.changer);\n            btns.push(btnComps.add_helper);\n            break;\n          case EUserType.operator:\n            btns.push(btnComps.trans);\n            btns.push(btnComps.start_solve);\n            btns.push(btnComps.add_helper);\n            break;\n          case EUserType.helper:\n            btns.push(btnComps.exit_helper);\n            break;\n          case EUserType.other:\n            btns.push(btnComps.receiver);\n            btns.push(btnComps.join);\n            break;\n          default:\n        &#125;\n        break;\n      case EnumProblemStatus.processing:\n        switch (userType) &#123;\n          case EUserType.creator:\n            &#x2F;&#x2F; btns.push(btnComps.edit)\n            btns.push(btnComps.add_helper);\n            break;\n          case EUserType.operator:\n            btns.push(btnComps.trans);\n            btns.push(btnComps.solved);\n            btns.push(btnComps.add_helper);\n            break;\n          case EUserType.helper:\n            btns.push(btnComps.exit_helper);\n            break;\n          case EUserType.other:\n            btns.push(btnComps.receiver);\n            btns.push(btnComps.join);\n            break;\n          default:\n        &#125;\n        break;\n      case EnumProblemStatus.delay:\n        switch (userType) &#123;\n          case EUserType.creator:\n            &#x2F;&#x2F; btns.push(btnComps.edit)\n            btns.push(btnComps.cancel);\n            btns.push(btnComps.cuiBan);\n            btns.push(btnComps.add_helper);\n            break;\n          case EUserType.operator:\n            btns.push(btnComps.trans);\n            btns.push(btnComps.solved);\n            btns.push(btnComps.continue);\n            btns.push(btnComps.add_helper);\n            break;\n          case EUserType.helper:\n            btns.push(btnComps.exit_helper);\n            break;\n          case EUserType.other:\n            btns.push(btnComps.receiver);\n            btns.push(btnComps.join);\n            break;\n          default:\n        &#125;\n        break;\n      case EnumProblemStatus.overdue:\n        switch (userType) &#123;\n          case EUserType.creator:\n            &#x2F;&#x2F; btns.push(btnComps.edit)\n            btns.push(btnComps.cancel);\n            btns.push(btnComps.cuiBan);\n            btns.push(btnComps.add_helper);\n            break;\n          case EUserType.operator:\n            btns.push(btnComps.trans);\n            btns.push(btnComps.solved);\n            btns.push(btnComps.continue);\n            btns.push(btnComps.add_helper);\n            break;\n          case EUserType.helper:\n            btns.push(btnComps.exit_helper);\n            break;\n          case EUserType.other:\n            btns.push(btnComps.receiver);\n            btns.push(btnComps.join);\n            break;\n          default:\n        &#125;\n        break;\n      case EnumProblemStatus.solved:\n        switch (userType) &#123;\n          case EUserType.creator:\n            btns.push(btnComps.end);\n            break;\n          case EUserType.operator:\n            btns.push(btnComps.notify_creator);\n            break;\n          default:\n        &#125;\n        break;\n      case EnumProblemStatus.finish:\n        break;\n\n      case EnumProblemStatus.cancel:\n        break;\n\n      default:\n        break;\n    &#125;\n    return btns;\n  &#125;, [detail.status, userType]);\n\n  return actionBtns;\n&#125;;</code></pre>\n\n<h2 id=\"ahooks-中-依赖刷新\"><a href=\"#ahooks-中-依赖刷新\" class=\"headerlink\" title=\"ahooks 中 依赖刷新\"></a>ahooks 中 依赖刷新</h2><p><a href=\"https://ahooks.js.org/zh-CN/hooks/use-request/refresy-deps#%E4%BE%9D%E8%B5%96%E5%88%B7%E6%96%B0\" target=\"_blank\" >见</a></p>\n<p>useRequest 提供了一个 options.refreshDeps 参数，当它的值变化后，会重新触发请求。</p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">const [userId, setUserId] &#x3D; useState(&quot;1&quot;);\n\nconst &#123; data, run &#125; &#x3D; useRequest(() &#x3D;&gt; getUserSchool(userId), &#123;\n  refreshDeps: [userId],\n&#125;);</code></pre>\n\n<p>上面的示例代码，useRequest 会在初始化和 userId 变化时，触发函数执行。</p>\n<p>与下面代码实现功能完全一致</p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">const [userId, setUserId] &#x3D; useState(&quot;1&quot;);\n\nconst &#123; data, refresh &#125; &#x3D; useRequest(() &#x3D;&gt; getUserSchool(userId));\n\nuseEffect(() &#x3D;&gt; &#123;\n  refresh();\n&#125;, [userId]);</code></pre>\n\n<h2 id=\"useRequest-源码找找\"><a href=\"#useRequest-源码找找\" class=\"headerlink\" title=\"useRequest 源码找找\"></a>useRequest 源码找找</h2><p><a href=\"https://github.com/alibaba/hooks/blob/93630e73f445871fb6b14fcb0bf3b9fddb1ba0aa/packages/hooks/src/useRequest/src/useRequest.ts#L24\" target=\"_blank\" > options?: Options&lt;TData, TParams&gt;,</a></p>\n<p><a href=\"https://github.com/alibaba/hooks/blob/93630e73f445871fb6b14fcb0bf3b9fddb1ba0aa/packages/hooks/src/useRequest/src/types.ts#L52\" target=\"_blank\" > refreshDeps type</a></p>\n<p><a href=\"https://github.com/alibaba/hooks/blob/93630e73f445871fb6b14fcb0bf3b9fddb1ba0aa/packages/hooks/src/useRequest/src/useRequestImplement.ts#L27\" target=\"_blank\" > const fetchInstance &#x3D; useCreation(() &#x3D;&gt; {</a></p>\n<p><a href=\"https://github.com/alibaba/hooks/blob/93630e73f445871fb6b14fcb0bf3b9fddb1ba0aa/packages/hooks/src/useCreation/index.ts#L5\" target=\"_blank\" ><code>export default function useCreation&lt;T&gt;(factory: () =&gt; T, deps: DependencyList) &#123;</code></a></p>\n<h2 id=\"useCreation\"><a href=\"#useCreation\" class=\"headerlink\" title=\"useCreation\"></a>useCreation</h2><p><a href=\"https://ahooks.js.org/zh-CN/hooks/use-creation#usecreation\" target=\"_blank\" > usecreation</a></p>\n<img src=\"http://t-blog-images.aijs.top/img/202208231957375.webp\" />\n\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">function useCreation&lt;T&gt;(factory: () &#x3D;&gt; T, deps: any[]): T;</code></pre>\n\n<pre class=\"line-numbers language-tsx\" data-language=\"tsx\"><code class=\"language-tsx\">import React, &#123; useState &#125; from &quot;react&quot;;\nimport &#123; useCreation &#125; from &quot;ahooks&quot;;\n\nclass Foo &#123;\n  constructor() &#123;\n    this.data &#x3D; Math.random();\n  &#125;\n\n  data: number;\n&#125;\n\nexport default function () &#123;\n  const foo &#x3D; useCreation(() &#x3D;&gt; new Foo(), []); &#x2F;&#x2F; 依赖项没变化， 不会重复执行 factory\n  const [, setFlag] &#x3D; useState(&#123;&#125;);\n  return (\n    &lt;&gt;\n      &lt;p&gt;&#123;foo.data&#125;&lt;&#x2F;p&gt;\n      &lt;button\n        type&#x3D;&quot;button&quot;\n        onClick&#x3D;&#123;() &#x3D;&gt; &#123;\n          setFlag(&#123;&#125;); &#x2F;&#x2F; 对象更新\n        &#125;&#125;\n      &gt;\n        Rerender\n      &lt;&#x2F;button&gt;\n    &lt;&#x2F;&gt;\n  );\n&#125;</code></pre>\n\n<p><a href=\"https://github.com/alibaba/hooks/blob/93630e73f445871fb6b14fcb0bf3b9fddb1ba0aa/packages/hooks/src/useRequest/src/useRequestImplement.ts#L27\" target=\"_blank\" >至此，这里的实例化也好理解了</a></p>\n<h2 id=\"以上内容想歪了\"><a href=\"#以上内容想歪了\" class=\"headerlink\" title=\"以上内容想歪了\"></a>以上内容想歪了</h2><ul>\n<li>中途试用了useCreation, eslint不能够提示依赖项，所以又回到了<code>useMemo</code></li>\n</ul>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">&#x2F;&#x2F; useActions\nimport &#123; EnumProblemStatus, EUserType &#125; from &quot;@&#x2F;const&quot;;\nimport &#123; IProblemDetail &#125; from &quot;@&#x2F;services&#x2F;problems&quot;;\nimport &#123; useMemo &#125; from &quot;react&quot;;\n\nexport const useActions &#x3D; (\n  detail: IProblemDetail,\n  user: Staff,\n  mobile &#x3D; false\n) &#x3D;&gt; &#123;\n  const userType &#x3D; useMemo(() &#x3D;&gt; &#123;\n    if (detail?.creatorPerson?.personId &#x3D;&#x3D;&#x3D; user.staffId) &#123;\n      return EUserType.creator;\n    &#125;\n    if (detail?.solverStaffPerson?.personId &#x3D;&#x3D;&#x3D; user.staffId) &#123;\n      return EUserType.operator;\n    &#125;\n    if (\n      detail?.cooperationStaffs?.findIndex(\n        (item) &#x3D;&gt; item.personId &#x3D;&#x3D;&#x3D; user.staffId\n      ) &gt; -1\n    ) &#123;\n      return EUserType.helper;\n    &#125;\n    return EUserType.other;\n  &#125;, [\n    detail?.cooperationStaffs,\n    detail.creatorPerson?.personId,\n    detail?.solverStaffPerson?.personId,\n    user?.staffId,\n  ]);\n\n  const btnComps &#x3D; useMemo(() &#x3D;&gt; &#123;\n    const &#123; creatorPerson, solverStaffPerson, cooperationStaffs &#x3D; [] &#125; &#x3D; detail;\n    if (!creatorPerson) return;\n\n    const disabled_solverStaffPersonIds &#x3D; []\n      .concat(creatorPerson.personId)\n      .concat(solverStaffPerson.personId || []);\n\n    const disabled_cooperationStaffsIds &#x3D; []\n      .concat(creatorPerson.personId)\n      .concat(solverStaffPerson.personId || [])\n      .concat(cooperationStaffs.map((item) &#x3D;&gt; item.personId));\n\n    return &#123;\n      &#x2F;&#x2F; edit: &#123;\n      &#x2F;&#x2F;   title: &#39;编辑&#39;,\n      &#x2F;&#x2F;   key: &#39;edit&#39;,\n      &#x2F;&#x2F; &#125;,\n      comment: &#123;\n        title: &quot;评论&quot;,\n        key: &quot;comment&quot;,\n        icon: &quot;icon-kuaisuhuifu&quot;,\n        keep: true,\n      &#125;,\n      start_solve: &#123;\n        title: &quot;开始处理&quot;,\n        key: &quot;start_solve&quot;,\n        icon: &quot;icon-kaishi&quot;,\n        value: 2,\n      &#125;,\n      cancel: &#123;\n        title: &quot;撤销&quot;,\n        icon: &quot;icon-huifu&quot;,\n        disabledMessage: &quot;非创建人不可撤销&quot;,\n        key: &quot;cancel&quot;,\n        type: &quot;default&quot;,\n        confirm: true,\n        value: 7,\n      &#125;,\n      trans: &#123;\n        title: &quot;转交&quot;,\n        icon: &quot;icon-transfer&quot;,\n        key: &quot;trans&quot;,\n        message: &quot;请选择转交人&quot;,\n        required: true,\n        contact: true,\n        limit: 1,\n        allowType: [&quot;staff&quot;],\n        defaultValue: [],\n        disabledValues: disabled_solverStaffPersonIds,\n        value: 8,\n      &#125;,\n      finish: &#123;\n        title: &quot;完结&quot;,\n        icon: &quot;icon-guangbo&quot;,\n        key: &quot;finish&quot;,\n        confirm: true,\n        value: 6,\n      &#125;,\n      cuiBan: &#123;\n        title: &quot;催办&quot;,\n        key: &quot;cuiBan&quot;,\n        icon: &quot;icon-guangbo&quot;,\n        confirm: true,\n        value: 12,\n      &#125;,\n      solved: &#123;\n        title: &quot;已解决&quot;,\n        icon: &quot;icon-yiwancheng&quot;,\n        key: &quot;solved&quot;,\n        confirm: true,\n        value: 5,\n      &#125;,\n      changer: &#123;\n        title: &quot;变更经办人&quot;,\n        key: &quot;changer&quot;,\n        contact: true,\n        icon: &quot;icon-transfer&quot;,\n        limit: 1,\n        allowType: [&quot;staff&quot;],\n        defaultValue: [],\n        message: &quot;请选择转变更经办人&quot;,\n        required: true,\n        value: 8,\n        disabledValues: disabled_solverStaffPersonIds,\n      &#125;,\n      add_helper: &#123;\n        title: &quot;添加协作人&quot;,\n        key: &quot;add_helper&quot;,\n        icon: &quot;icon-teamwork&quot;,\n        contact: true,\n        allowType: [&quot;staff&quot;],\n        defaultValue: [],\n        message: &quot;请选择协作人&quot;,\n        required: true,\n        value: 9,\n        disabledValues: disabled_cooperationStaffsIds,\n      &#125;,\n      notify_creator: &#123;\n        title: &quot;提醒确认&quot;,\n        key: &quot;notify_creator&quot;,\n        icon: &quot;icon-querentixing&quot;,\n        confirm: true,\n        value: 13,\n      &#125;,\n      receiver: &#123;\n        title: &quot;认领处理&quot;,\n        key: &quot;receiver&quot;,\n        icon: &quot;icon-receiver&quot;,\n        confirm: true,\n        value: 8,\n      &#125;,\n      exit_helper: &#123;\n        title: &quot;退出协作&quot;,\n        key: &quot;exit_helper&quot;,\n        confirm: true,\n        icon: &quot;icon-tuichu&quot;,\n        value: 11,\n      &#125;,\n      join: &#123;\n        title: &quot;加入协作&quot;,\n        confirm: true,\n        key: &quot;join&quot;,\n        icon: &quot;icon-join&quot;,\n        value: 9,\n      &#125;,\n      continue: &#123;\n        title: &quot;继续处理&quot;,\n        key: &quot;continue&quot;,\n        value: 2,\n      &#125;,\n      end: &#123;\n        title: &quot;完结&quot;,\n        key: &quot;end&quot;,\n        confirm: true,\n        icon: &quot;icon-jieshu&quot;,\n        value: 6,\n      &#125;,\n    &#125;;\n  &#125;, [detail]);\n\n  const actions &#x3D; useMemo(() &#x3D;&gt; &#123;\n    const btns &#x3D; [];\n    const solverId &#x3D; detail.solverStaffPerson?.personId;\n    if (!btnComps) return [];\n\n    mobile &amp;&amp; btns.push(btnComps.comment);\n    switch (detail.state) &#123;\n      case EnumProblemStatus.waiting:\n        switch (userType) &#123;\n          case EUserType.creator:\n            &#x2F;&#x2F; btns.push(btnComps.edit)\n            btns.push(btnComps.cancel);\n            btns.push(btnComps.cuiBan);\n            btns.push(btnComps.changer);\n            btns.push(btnComps.add_helper);\n            break;\n          case EUserType.operator:\n            btns.push(btnComps.trans);\n            btns.push(btnComps.start_solve);\n            btns.push(btnComps.add_helper);\n            break;\n          case EUserType.helper:\n            btns.push(btnComps.exit_helper);\n            break;\n          case EUserType.other:\n            btns.push(btnComps.receiver);\n            btns.push(btnComps.join);\n            break;\n          default:\n        &#125;\n        break;\n      case EnumProblemStatus.processing:\n        switch (userType) &#123;\n          case EUserType.creator:\n            &#x2F;&#x2F; btns.push(btnComps.edit)\n            !solverId &amp;&amp; btns.push(btnComps.changer);\n            btns.push(btnComps.add_helper);\n            break;\n          case EUserType.operator:\n            btns.push(btnComps.trans);\n            btns.push(btnComps.solved);\n            btns.push(btnComps.add_helper);\n            break;\n          case EUserType.helper:\n            btns.push(btnComps.exit_helper);\n            break;\n          case EUserType.other:\n            btns.push(btnComps.receiver);\n            btns.push(btnComps.join);\n            break;\n          default:\n        &#125;\n        break;\n      case EnumProblemStatus.delay:\n        switch (userType) &#123;\n          case EUserType.creator:\n            &#x2F;&#x2F; btns.push(btnComps.edit)\n            btns.push(btnComps.cancel);\n            btns.push(btnComps.cuiBan);\n            !solverId &amp;&amp; btns.push(btnComps.changer);\n            btns.push(btnComps.add_helper);\n            break;\n          case EUserType.operator:\n            btns.push(btnComps.trans);\n            btns.push(btnComps.solved);\n            btns.push(btnComps.continue);\n            btns.push(btnComps.add_helper);\n            break;\n          case EUserType.helper:\n            btns.push(btnComps.exit_helper);\n            break;\n          case EUserType.other:\n            btns.push(btnComps.receiver);\n            btns.push(btnComps.join);\n            break;\n          default:\n        &#125;\n        break;\n      case EnumProblemStatus.overdue:\n        switch (userType) &#123;\n          case EUserType.creator:\n            &#x2F;&#x2F; btns.push(btnComps.edit)\n            btns.push(btnComps.cancel);\n            btns.push(btnComps.cuiBan);\n            !solverId &amp;&amp; btns.push(btnComps.changer);\n            btns.push(btnComps.add_helper);\n            break;\n          case EUserType.operator:\n            btns.push(btnComps.trans);\n            btns.push(btnComps.solved);\n            btns.push(btnComps.continue);\n            btns.push(btnComps.add_helper);\n            break;\n          case EUserType.helper:\n            btns.push(btnComps.exit_helper);\n            break;\n          case EUserType.other:\n            btns.push(btnComps.receiver);\n            btns.push(btnComps.join);\n            break;\n          default:\n        &#125;\n        break;\n      case EnumProblemStatus.solved:\n        switch (userType) &#123;\n          case EUserType.creator:\n            btns.push(btnComps.end);\n            break;\n          case EUserType.operator:\n            btns.push(btnComps.notify_creator);\n            break;\n          default:\n        &#125;\n        break;\n      case EnumProblemStatus.finish:\n        break;\n\n      case EnumProblemStatus.cancel:\n        break;\n\n      default:\n        break;\n    &#125;\n    return btns;\n  &#125;, [\n    detail.solverStaffPerson?.personId,\n    detail.state,\n    btnComps,\n    mobile,\n    userType,\n  ]);\n  return actions;\n&#125;;</code></pre>\n\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">&#x2F;&#x2F; 使用\nconst actionBtns &#x3D; useActions(detail, user);</code></pre>\n","text":"背景想将，业务逻辑按钮组封装为 hook,在移动端和 pc 端之间进行逻辑复用。在详情页面使用时候，发现并没有生效 原因： 无法给 useActions，增加依赖项，类似 useEffect 的第二参数一样。 查询了 ahooks 的 hook，了解类似解决方案 useActio...","link":"","photos":[],"count_time":{"symbolsCount":"19k","symbolsTime":"17 mins."},"categories":[{"name":"React","slug":"React","count":17,"path":"api/categories/React.json"}],"tags":[{"name":"React","slug":"React","count":14,"path":"api/tags/React.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%83%8C%E6%99%AF\"><span class=\"toc-text\">背景</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#useActions\"><span class=\"toc-text\">useActions</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#ahooks-%E4%B8%AD-%E4%BE%9D%E8%B5%96%E5%88%B7%E6%96%B0\"><span class=\"toc-text\">ahooks 中 依赖刷新</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#useRequest-%E6%BA%90%E7%A0%81%E6%89%BE%E6%89%BE\"><span class=\"toc-text\">useRequest 源码找找</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#useCreation\"><span class=\"toc-text\">useCreation</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%A5%E4%B8%8A%E5%86%85%E5%AE%B9%E6%83%B3%E6%AD%AA%E4%BA%86\"><span class=\"toc-text\">以上内容想歪了</span></a></li></ol>","author":{"name":"陈海龙","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"需要就学呗，多大点事😂","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"有过期机制的localStorage","uid":"b204c24ab6e396e5de06d4bc0adf7d2a","slug":"2022-08-24expirestorage","date":"2022-08-24T08:49:06.000Z","updated":"2022-09-16T13:54:56.316Z","comments":true,"path":"api/articles/2022-08-24expirestorage.json","keywords":null,"cover":[],"text":"场景对于一些数据不经常更新的数据，保持一定时间的新鲜的时候可以用于缓存 localStorage见原文 把原文代码改了下，主要对JSON.parse进行 fixed Storage.prototype.setStorageWithAge &#x3D; (key, value, e...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"存储","slug":"存储","count":1,"path":"api/categories/存储.json"}],"tags":[{"name":"存储","slug":"存储","count":1,"path":"api/tags/存储.json"}],"author":{"name":"陈海龙","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"需要就学呗，多大点事😂","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}},"next_post":{"title":"tree","uid":"c362c8649d871624a90f1e24b5ef0828","slug":"2022-08-23tree","date":"2022-08-23T07:31:09.000Z","updated":"2022-09-16T13:54:56.314Z","comments":true,"path":"api/articles/2022-08-23tree.json","keywords":null,"cover":[],"text":"mysql 存储的几种方式见 1,4 用过， 2 见过（当前公司 DHR 系统组织架构在用） js 获取树某个节点场景：编辑树节点，刷新树数据，进行编辑节点回显，某些情况下，树节点被转移他人，当前节点不需要回显 代码&#x2F;** * * @param &#123;要查询的节点...","link":"","photos":[],"count_time":{"symbolsCount":"5.7k","symbolsTime":"5 mins."},"categories":[{"name":"tree","slug":"tree","count":1,"path":"api/categories/tree.json"}],"tags":[{"name":"tree","slug":"tree","count":1,"path":"api/tags/tree.json"}],"author":{"name":"陈海龙","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"需要就学呗，多大点事😂","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}}}