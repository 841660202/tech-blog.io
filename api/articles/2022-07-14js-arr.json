{"title":"前端基础-数组","uid":"12cc7106661c51633c97f9b1ac94a946","slug":"2022-07-14js-arr","date":"2022-07-14T07:40:32.000Z","updated":"2022-09-16T13:54:56.212Z","comments":true,"path":"api/articles/2022-07-14js-arr.json","keywords":null,"cover":"http://t-blog-images.aijs.top/img/202208022304934.png","content":"<h2 id=\"思维导图\"><a href=\"#思维导图\" class=\"headerlink\" title=\"思维导图\"></a>思维导图</h2><ul>\n<li>创建</li>\n<li>取值</li>\n<li>查找</li>\n<li>扁平化</li>\n<li>遍历</li>\n<li>返回 boolean</li>\n<li>返回字符串</li>\n<li>增&#x2F;删&#x2F;改&#x2F;拷贝&#x2F;解构</li>\n</ul>\n<details class=\"custom-details\">\n<summary>详细内容</summary>\n<p><img src=\"http://t-blog-images.aijs.top/img/202208022304934.png\"  style=\"max-width: 100%; width: 500px\"/></p>\n</p>\n</details>\n<h2 id=\"查看数组-proto\"><a href=\"#查看数组-proto\" class=\"headerlink\" title=\"查看数组 proto\"></a>查看数组 <strong>proto</strong></h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">[1, 2, 3]; &#x2F;&#x2F; 将结果展开后，见下图</code></pre>\n\n<img src=\"http://t-blog-images.aijs.top/img/20220714151858.webp\" style=\"max-width: 100%; width: 500px\"/>\n\n<h2 id=\"哎呦-proto\"><a href=\"#哎呦-proto\" class=\"headerlink\" title=\"哎呦 [].__proto__\"></a>哎呦 <code>[].__proto__</code></h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">Object.getOwnPropertyDescriptors([].__proto__);</code></pre>\n\n<img src=\"http://t-blog-images.aijs.top/img/20220714155241.webp\"/>\n\n<details class=\"custom-details\">\n<summary>查看 json 数据</summary>\n<p><pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n  &quot;at&quot;: &#123;\n    &quot;configurable&quot;: true,\n    &quot;enumerable&quot;: false,\n    &quot;writable&quot;: true\n  &#125;,\n  &quot;concat&quot;: &#123;\n    &quot;configurable&quot;: true,\n    &quot;enumerable&quot;: false,\n    &quot;writable&quot;: true\n  &#125;,\n  &quot;constructor&quot;: &#123;\n    &quot;configurable&quot;: true,\n    &quot;enumerable&quot;: false,\n    &quot;writable&quot;: true\n  &#125;,\n  &quot;copyWithin&quot;: &#123;\n    &quot;configurable&quot;: true,\n    &quot;enumerable&quot;: false,\n    &quot;writable&quot;: true\n  &#125;,\n  &quot;entries&quot;: &#123;\n    &quot;configurable&quot;: true,\n    &quot;enumerable&quot;: false,\n    &quot;writable&quot;: true\n  &#125;,\n  &quot;every&quot;: &#123;\n    &quot;configurable&quot;: true,\n    &quot;enumerable&quot;: false,\n    &quot;writable&quot;: true\n  &#125;,\n  &quot;fill&quot;: &#123;\n    &quot;configurable&quot;: true,\n    &quot;enumerable&quot;: false,\n    &quot;writable&quot;: true\n  &#125;,\n  &quot;filter&quot;: &#123;\n    &quot;configurable&quot;: true,\n    &quot;enumerable&quot;: false,\n    &quot;writable&quot;: true\n  &#125;,\n  &quot;find&quot;: &#123;\n    &quot;configurable&quot;: true,\n    &quot;enumerable&quot;: false,\n    &quot;writable&quot;: true\n  &#125;,\n  &quot;findIndex&quot;: &#123;\n    &quot;configurable&quot;: true,\n    &quot;enumerable&quot;: false,\n    &quot;writable&quot;: true\n  &#125;,\n  &quot;findLast&quot;: &#123;\n    &quot;configurable&quot;: true,\n    &quot;enumerable&quot;: false,\n    &quot;writable&quot;: true\n  &#125;,\n  &quot;findLastIndex&quot;: &#123;\n    &quot;configurable&quot;: true,\n    &quot;enumerable&quot;: false,\n    &quot;writable&quot;: true\n  &#125;,\n  &quot;flat&quot;: &#123;\n    &quot;configurable&quot;: true,\n    &quot;enumerable&quot;: false,\n    &quot;writable&quot;: true\n  &#125;,\n  &quot;flatMap&quot;: &#123;\n    &quot;configurable&quot;: true,\n    &quot;enumerable&quot;: false,\n    &quot;writable&quot;: true\n  &#125;,\n  &quot;forEach&quot;: &#123;\n    &quot;configurable&quot;: true,\n    &quot;enumerable&quot;: false,\n    &quot;writable&quot;: true\n  &#125;,\n  &quot;includes&quot;: &#123;\n    &quot;configurable&quot;: true,\n    &quot;enumerable&quot;: false,\n    &quot;writable&quot;: true\n  &#125;,\n  &quot;indexOf&quot;: &#123;\n    &quot;configurable&quot;: true,\n    &quot;enumerable&quot;: false,\n    &quot;writable&quot;: true\n  &#125;,\n  &quot;join&quot;: &#123;\n    &quot;configurable&quot;: true,\n    &quot;enumerable&quot;: false,\n    &quot;writable&quot;: true\n  &#125;,\n  &quot;keys&quot;: &#123;\n    &quot;configurable&quot;: true,\n    &quot;enumerable&quot;: false,\n    &quot;writable&quot;: true\n  &#125;,\n  &quot;lastIndexOf&quot;: &#123;\n    &quot;configurable&quot;: true,\n    &quot;enumerable&quot;: false,\n    &quot;writable&quot;: true\n  &#125;,\n  &quot;length&quot;: &#123;\n    &quot;configurable&quot;: false,\n    &quot;enumerable&quot;: false,\n    &quot;value&quot;: 0,\n    &quot;writable&quot;: true\n  &#125;,\n  &quot;map&quot;: &#123;\n    &quot;configurable&quot;: true,\n    &quot;enumerable&quot;: false,\n    &quot;writable&quot;: true\n  &#125;,\n  &quot;pop&quot;: &#123;\n    &quot;configurable&quot;: true,\n    &quot;enumerable&quot;: false,\n    &quot;writable&quot;: true\n  &#125;,\n  &quot;push&quot;: &#123;\n    &quot;configurable&quot;: true,\n    &quot;enumerable&quot;: false,\n    &quot;writable&quot;: true\n  &#125;,\n  &quot;reduce&quot;: &#123;\n    &quot;configurable&quot;: true,\n    &quot;enumerable&quot;: false,\n    &quot;writable&quot;: true\n  &#125;,\n  &quot;reduceRight&quot;: &#123;\n    &quot;configurable&quot;: true,\n    &quot;enumerable&quot;: false,\n    &quot;writable&quot;: true\n  &#125;,\n  &quot;reverse&quot;: &#123;\n    &quot;configurable&quot;: true,\n    &quot;enumerable&quot;: false,\n    &quot;writable&quot;: true\n  &#125;,\n  &quot;shift&quot;: &#123;\n    &quot;configurable&quot;: true,\n    &quot;enumerable&quot;: false,\n    &quot;writable&quot;: true\n  &#125;,\n  &quot;slice&quot;: &#123;\n    &quot;configurable&quot;: true,\n    &quot;enumerable&quot;: false,\n    &quot;writable&quot;: true\n  &#125;,\n  &quot;some&quot;: &#123;\n    &quot;configurable&quot;: true,\n    &quot;enumerable&quot;: false,\n    &quot;writable&quot;: true\n  &#125;,\n  &quot;sort&quot;: &#123;\n    &quot;configurable&quot;: true,\n    &quot;enumerable&quot;: false,\n    &quot;writable&quot;: true\n  &#125;,\n  &quot;splice&quot;: &#123;\n    &quot;configurable&quot;: true,\n    &quot;enumerable&quot;: false,\n    &quot;writable&quot;: true\n  &#125;,\n  &quot;toLocaleString&quot;: &#123;\n    &quot;configurable&quot;: true,\n    &quot;enumerable&quot;: false,\n    &quot;writable&quot;: true\n  &#125;,\n  &quot;toString&quot;: &#123;\n    &quot;configurable&quot;: true,\n    &quot;enumerable&quot;: false,\n    &quot;writable&quot;: true\n  &#125;,\n  &quot;unshift&quot;: &#123;\n    &quot;configurable&quot;: true,\n    &quot;enumerable&quot;: false,\n    &quot;writable&quot;: true\n  &#125;,\n  &quot;values&quot;: &#123;\n    &quot;configurable&quot;: true,\n    &quot;enumerable&quot;: false,\n    &quot;writable&quot;: true\n  &#125;\n&#125;</code></pre>\n\n</p>\n</details>\n<h2 id=\"一点想法\"><a href=\"#一点想法\" class=\"headerlink\" title=\"一点想法\"></a>一点想法</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">Object.keys(Object.getOwnPropertyDescriptors([].__proto__));</code></pre>\n\n<img src=\"http://t-blog-images.aijs.top/img/20220714155944.webp\" />\n\n<h2 id=\"at\"><a href=\"#at\" class=\"headerlink\" title=\"at\"></a>at</h2><p>at() 方法接收一个整数值并返回该索引的项目，允许正数和负数。负整数从数组中的最后一个项目开始倒数。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">var a &#x3D; [1, 2, 3];\na[-1]; &#x2F;&#x2F; undefined\na.at(-1); &#x2F;&#x2F; 3</code></pre>\n\n<p><strong>polyfill</strong></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">if (Array.at) &#123;\n  Array.proptotype.at &#x3D; function (index) &#123;\n    if (index &gt;&#x3D; 0) &#123;\n      return this[index];\n    &#125; else &#123;\n      return this.slice(index, index + 1)?.[0];\n    &#125;\n  &#125;;\n&#125;</code></pre>\n\n<h2 id=\"concat\"><a href=\"#concat\" class=\"headerlink\" title=\"concat\"></a>concat</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; 语法\nvar new_array &#x3D; old_array.concat(value1[, value2[, ...[, valueN]]])</code></pre>\n\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>concat() 方法用于合并两个或多个数组。此方法不会更改现有数组，而是返回一个新数组。<br>数组和&#x2F;或值，将被合并到一个新的数组中。如果省略了所有 valueN 参数，则 concat 会返回调用此方法的现存数组的一个<code>浅拷贝</code></p>\n<ul>\n<li><strong>对象引用</strong>（而不是实际对象）：concat 将对象引用复制到新数组中。 原始数组和新数组都引用相同的对象。 也就是说，如果引用的对象被修改，则更改对于新数组和原始数组都是可见的。 这包括也是数组的数组参数的元素。</li>\n<li><strong>数据类型</strong>如字符串，数字和布尔（不是 String，Number 和 Boolean 对象）：concat 将字符串和数字的值复制到新数组中。</li>\n</ul></blockquote>\n<p>使用：<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/concat#examples\" target=\"_blank\" >见 MDN 示例</a></p>\n<h2 id=\"constructor-NaN\"><a href=\"#constructor-NaN\" class=\"headerlink\" title=\"constructor\"></a>constructor</h2><p>constructor 属性返回 Object 的构造函数（用于创建实例对象）。<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Object/constructor\" target=\"_blank\" >见</a></p>\n<h3 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h3><div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">WARNING</p>\n<ol>\n<li><p>注意，此属性的值是对函数本身的引用，而不是一个包含函数名称的字符串。</p>\n</li>\n<li><p>可以为除了 null 和 undefined（因为这两者没有相应的构造函数）之外的任何类型指定</p>\n</li>\n<li><p>每当把这样的基本类型当成对象使用时，其对应的构造函数的实例就会在语句执行后立即被创建和丢弃。</p>\n</li>\n<li><p>任何对象都可以更改 constructor 属性的值，请注意，改变 constructor 的属性不会影响 instanceof 运算符</p>\n</li>\n<li><p>如果对象被密封或冻结，那么更改 constructor 将不会起作用，也不会抛出异常：</p>\n</li>\n</ol>\n\n</div>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">const a &#x3D; new Array();\na.constructor &#x3D;&#x3D;&#x3D; Array; &#x2F;&#x2F; true</code></pre>\n\n<h2 id=\"copyWithin\"><a href=\"#copyWithin\" class=\"headerlink\" title=\"copyWithin\"></a>copyWithin</h2><p><code>左闭右开</code></p>\n<p>copyWithin() 方法浅复制数组的一部分到同一数组中的另一个位置，并返回它，不会改变原数组的长度。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">const array1 &#x3D; [&quot;a&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;];\n\n&#x2F;&#x2F; 把下标3的元素拷贝到下标为0的位置\nconsole.log(array1.copyWithin(0, 3, 4));\n&#x2F;&#x2F; [&quot;d&quot;, &quot;b&quot;, &quot;c&quot;, &quot;d&quot;, &quot;e&quot;]\n\n&#x2F;&#x2F; 把下标从3开始到结束的元素，拷贝到1的位置\nconsole.log(array1.copyWithin(1, 3));\n&#x2F;&#x2F; [&quot;d&quot;, &quot;d&quot;, &quot;e&quot;, &quot;d&quot;, &quot;e&quot;]</code></pre>\n\n<h2 id=\"entries\"><a href=\"#entries\" class=\"headerlink\" title=\"entries\"></a>entries</h2><p>entries() 方法返回一个新的 Array Iterator 对象，该对象包含数组中每个索引的键&#x2F;值对。</p>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/entries#%E7%A4%BA%E4%BE%8B\" target=\"_blank\" >示例见</a></p>\n<h2 id=\"every\"><a href=\"#every\" class=\"headerlink\" title=\"every\"></a>every</h2><h2 id=\"fill\"><a href=\"#fill\" class=\"headerlink\" title=\"fill\"></a>fill</h2><p><code>左闭右开</code></p>\n<p>fill() 方法用一个固定值填充一个数组中, 从 起始索引 到 终止索引 内的全部元素。不包括 终止索引。</p>\n<p><strong>语法</strong></p>\n<p><code>arr.fill(value[, start[, end]])</code></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">[1, 2, 3].fill(4); &#x2F;&#x2F; [4, 4, 4]\n[1, 2, 3].fill(4, 1); &#x2F;&#x2F; [1, 4, 4]\n[1, 2, 3].fill(4, 1, 2); &#x2F;&#x2F; [1, 4, 3]\n[1, 2, 3].fill(4, 1, 1); &#x2F;&#x2F; [1, 2, 3]\n[1, 2, 3].fill(4, 3, 3); &#x2F;&#x2F; [1, 2, 3]\n[1, 2, 3].fill(4, -3, -2); &#x2F;&#x2F; [4, 2, 3]\n[1, 2, 3].fill(4, NaN, NaN); &#x2F;&#x2F; [1, 2, 3]\n[1, 2, 3].fill(4, 3, 5); &#x2F;&#x2F; [1, 2, 3]\nArray(3).fill(4); &#x2F;&#x2F; [4, 4, 4]\n[].fill.call(&#123; length: 3 &#125;, 4); &#x2F;&#x2F; &#123;0: 4, 1: 4, 2: 4, length: 3&#125;</code></pre>\n\n<h3 id=\"注意-1\"><a href=\"#注意-1\" class=\"headerlink\" title=\"注意\"></a>注意</h3><div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">WARNING</p>\n<p><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; Objects by reference.\nvar arr &#x3D; Array(3).fill(&#123;&#125;); &#x2F;&#x2F; [&#123;&#125;, &#123;&#125;, &#123;&#125;];\n&#x2F;&#x2F; 需要注意如果 fill 的参数为引用类型，会导致都执行同一个引用类型\n&#x2F;&#x2F; 如 arr[0] &#x3D;&#x3D;&#x3D; arr[1] 为 true\narr[0].hi &#x3D; &quot;hi&quot;; &#x2F;&#x2F; [&#123; hi: &quot;hi&quot; &#125;, &#123; hi: &quot;hi&quot; &#125;, &#123; hi: &quot;hi&quot; &#125;]</code></pre>\n\n</p>\n</div>\n<h2 id=\"filter\"><a href=\"#filter\" class=\"headerlink\" title=\"filter\"></a>filter</h2><h2 id=\"find\"><a href=\"#find\" class=\"headerlink\" title=\"find\"></a>find</h2><h2 id=\"findIndex\"><a href=\"#findIndex\" class=\"headerlink\" title=\"findIndex\"></a>findIndex</h2><h2 id=\"findLast\"><a href=\"#findLast\" class=\"headerlink\" title=\"findLast\"></a>findLast</h2><h2 id=\"findLastIndex\"><a href=\"#findLastIndex\" class=\"headerlink\" title=\"findLastIndex\"></a>findLastIndex</h2><h2 id=\"flat\"><a href=\"#flat\" class=\"headerlink\" title=\"flat\"></a>flat</h2><h2 id=\"flatMap\"><a href=\"#flatMap\" class=\"headerlink\" title=\"flatMap\"></a>flatMap</h2><h2 id=\"forEach\"><a href=\"#forEach\" class=\"headerlink\" title=\"forEach\"></a>forEach</h2><h2 id=\"includes\"><a href=\"#includes\" class=\"headerlink\" title=\"includes\"></a>includes</h2><h2 id=\"indexOf\"><a href=\"#indexOf\" class=\"headerlink\" title=\"indexOf\"></a>indexOf</h2><h2 id=\"join\"><a href=\"#join\" class=\"headerlink\" title=\"join\"></a>join</h2><h2 id=\"keys\"><a href=\"#keys\" class=\"headerlink\" title=\"keys\"></a>keys</h2><h2 id=\"lastIndexOf\"><a href=\"#lastIndexOf\" class=\"headerlink\" title=\"lastIndexOf\"></a>lastIndexOf</h2><h2 id=\"length\"><a href=\"#length\" class=\"headerlink\" title=\"length\"></a>length</h2><h2 id=\"map\"><a href=\"#map\" class=\"headerlink\" title=\"map\"></a>map</h2><h2 id=\"pop\"><a href=\"#pop\" class=\"headerlink\" title=\"pop\"></a>pop</h2><h2 id=\"push\"><a href=\"#push\" class=\"headerlink\" title=\"push\"></a>push</h2><h2 id=\"reduce\"><a href=\"#reduce\" class=\"headerlink\" title=\"reduce\"></a>reduce</h2><h2 id=\"reduceRight\"><a href=\"#reduceRight\" class=\"headerlink\" title=\"reduceRight\"></a>reduceRight</h2><h2 id=\"reverse\"><a href=\"#reverse\" class=\"headerlink\" title=\"reverse\"></a>reverse</h2><h2 id=\"shift\"><a href=\"#shift\" class=\"headerlink\" title=\"shift\"></a>shift</h2><h2 id=\"slice\"><a href=\"#slice\" class=\"headerlink\" title=\"slice\"></a>slice</h2><p><code>左闭右开</code></p>\n<p>slice() 方法返回一个新的数组对象，这一对象是一个由 begin 和 end 决定的原数组的浅拷贝（包括 begin，不包括 end）。原始数组不会被改变。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; 语法\narr.slice([begin[, end]])</code></pre>\n\n<h2 id=\"some\"><a href=\"#some\" class=\"headerlink\" title=\"some\"></a>some</h2><h2 id=\"sort\"><a href=\"#sort\" class=\"headerlink\" title=\"sort\"></a>sort</h2><p>sort() 方法用原地算法对数组的元素进行排序，并返回数组。<code>默认排序顺序是在将元素转换为字符串</code>，然后比较它们的 UTF-16 代码单元值序列时构建的</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">const months &#x3D; [&quot;March&quot;, &quot;Jan&quot;, &quot;Feb&quot;, &quot;Dec&quot;];\nmonths.sort();\nconsole.log(months);\n&#x2F;&#x2F;  [&quot;Dec&quot;, &quot;Feb&quot;, &quot;Jan&quot;, &quot;March&quot;]\n\nconst array1 &#x3D; [1, 30, 4, 21, 100000];\narray1.sort();\nconsole.log(array1);\n&#x2F;&#x2F; [1, 100000, 21, 30, 4]</code></pre>\n\n<div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">WARNING</p>\n<p>ES10（EcmaScript 2019）以前没有要求稳定性，意味着你<code>可能</code>会得到以下结果：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">const students &#x3D; [\n  &#123; name: &quot;Alex&quot;, grade: 15 &#125;,\n  &#123; name: &quot;Devlin&quot;, grade: 15 &#125;,\n  &#123; name: &quot;Eagle&quot;, grade: 13 &#125;,\n  &#123; name: &quot;Sam&quot;, grade: 14 &#125;,\n];\n\nstudents.sort((firstItem, secondItem) &#x3D;&gt; firstItem.grade - secondItem.grade);\n\n&#x2F;&#x2F; es10 +\n\n&#x2F;&#x2F; [\n&#x2F;&#x2F;   &#123; name: &quot;Eagle&quot;,  grade: 13 &#125;,\n&#x2F;&#x2F;   &#123; name: &quot;Sam&quot;,    grade: 14 &#125;,\n&#x2F;&#x2F;   &#123; name: &quot;Alex&quot;,   grade: 15 &#125;, &#x2F;&#x2F; grade 相同时维持原先的顺序 (稳定排序)\n&#x2F;&#x2F;   &#123; name: &quot;Devlin&quot;, grade: 15 &#125;, &#x2F;&#x2F; grade 相同时维持原先的顺序 (稳定排序)\n&#x2F;&#x2F; ];\n\n&#x2F;&#x2F; - es9\n\n&#x2F;&#x2F; [\n&#x2F;&#x2F;   &#123; name: &quot;Eagle&quot;,  grade: 13 &#125;,\n&#x2F;&#x2F;   &#123; name: &quot;Sam&quot;,    grade: 14 &#125;,\n&#x2F;&#x2F;   &#123; name: &quot;Devlin&quot;, grade: 15 &#125;, &#x2F;&#x2F; 没有维持原先的顺序\n&#x2F;&#x2F;   &#123; name: &quot;Alex&quot;,   grade: 15 &#125;, &#x2F;&#x2F; 没有维持原先的顺序\n&#x2F;&#x2F; ];</code></pre>\n\n\n</div>\n<h2 id=\"splice\"><a href=\"#splice\" class=\"headerlink\" title=\"splice\"></a>splice</h2><p>splice() 方法通过删除或替换现有元素或者原地添加新的元素来修改数组，并以数组形式返回被修改的内容。此方法<strong>会改变原数组</strong>。</p>\n<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/splice#%E7%A4%BA%E4%BE%8B\" target=\"_blank\" >示例见</a></p>\n<h2 id=\"toLocaleString-NaN\"><a href=\"#toLocaleString-NaN\" class=\"headerlink\" title=\"toLocaleString\"></a>toLocaleString</h2><h2 id=\"toString-NaN\"><a href=\"#toString-NaN\" class=\"headerlink\" title=\"toString\"></a>toString</h2><h2 id=\"unshift\"><a href=\"#unshift\" class=\"headerlink\" title=\"unshift\"></a>unshift</h2><h2 id=\"values\"><a href=\"#values\" class=\"headerlink\" title=\"values\"></a>values</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">var a &#x3D; [1, 2, 3];\n\nArray.from(a.keys()); &#x2F;&#x2F; [0, 1, 2]\n\na.fill(10); &#x2F;&#x2F;  [10, 10, 10]\n\na.fill(1, 0, 1); &#x2F;&#x2F;  [1, 10, 10]\n\nArray.from(a.entries()); &#x2F;&#x2F; [[0,1],[1,10],[2,10]]</code></pre>\n\n<h2 id=\"几个非原型链上的方法\"><a href=\"#几个非原型链上的方法\" class=\"headerlink\" title=\"几个非原型链上的方法\"></a>几个非原型链上的方法</h2><h3 id=\"isArray\"><a href=\"#isArray\" class=\"headerlink\" title=\"isArray\"></a>isArray</h3><ol>\n<li>Array.prototype 也是一个数组</li>\n</ol>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">Array.isArray(Array.prototype); &#x2F;&#x2F; 鲜为人知的事实：其实 Array.prototype 也是一个数组。</code></pre>\n\n<ol start=\"2\">\n<li>instanceof_和_isArray<br>当检测 Array 实例时，Array.isArray 优于 instanceof，因为 Array.isArray 能检测 iframes</li>\n<li>polyfill</li>\n</ol>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">if (!Array.isArray) &#123;\n  Array.isArray &#x3D; function (arg) &#123;\n    return Object.prototype.toString.call(arg) &#x3D;&#x3D;&#x3D; &quot;[object Array]&quot;;\n  &#125;;\n&#125;</code></pre>\n\n<h3 id=\"of\"><a href=\"#of\" class=\"headerlink\" title=\"of\"></a>of</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">Array.of(7); &#x2F;&#x2F; [7]\nArray.of(1, 2, 3); &#x2F;&#x2F; [1, 2, 3]\n\nArray(7); &#x2F;&#x2F; [ , , , , , , ]\nArray(1, 2, 3); &#x2F;&#x2F; [1, 2, 3]</code></pre>\n\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array\" target=\"_blank\" >MDN Array</a></p>\n","text":"思维导图 创建 取值 查找 扁平化 遍历 返回 boolean 返回字符串 增&#x2F;删&#x2F;改&#x2F;拷贝&#x2F;解构 详细内容 查看数组 proto[1, 2, 3]; &#x2F;&#x2F; 将结果展开后，见下图 哎呦 [].__proto__Objec...","link":"","photos":[],"count_time":{"symbolsCount":"11k","symbolsTime":"10 mins."},"categories":[{"name":"前端基础","slug":"前端基础","count":40,"path":"api/categories/前端基础.json"}],"tags":[{"name":"前端基础","slug":"前端基础","count":42,"path":"api/tags/前端基础.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE\"><span class=\"toc-text\">思维导图</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E7%9C%8B%E6%95%B0%E7%BB%84-proto\"><span class=\"toc-text\">查看数组 proto</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%93%8E%E5%91%A6-proto\"><span class=\"toc-text\">哎呦 [].__proto__</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%80%E7%82%B9%E6%83%B3%E6%B3%95\"><span class=\"toc-text\">一点想法</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#at\"><span class=\"toc-text\">at</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#concat\"><span class=\"toc-text\">concat</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#constructor-NaN\"><span class=\"toc-text\">constructor</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E6%84%8F\"><span class=\"toc-text\">注意</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#copyWithin\"><span class=\"toc-text\">copyWithin</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#entries\"><span class=\"toc-text\">entries</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#every\"><span class=\"toc-text\">every</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#fill\"><span class=\"toc-text\">fill</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E6%84%8F-1\"><span class=\"toc-text\">注意</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#filter\"><span class=\"toc-text\">filter</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#find\"><span class=\"toc-text\">find</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#findIndex\"><span class=\"toc-text\">findIndex</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#findLast\"><span class=\"toc-text\">findLast</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#findLastIndex\"><span class=\"toc-text\">findLastIndex</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#flat\"><span class=\"toc-text\">flat</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#flatMap\"><span class=\"toc-text\">flatMap</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#forEach\"><span class=\"toc-text\">forEach</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#includes\"><span class=\"toc-text\">includes</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#indexOf\"><span class=\"toc-text\">indexOf</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#join\"><span class=\"toc-text\">join</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#keys\"><span class=\"toc-text\">keys</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#lastIndexOf\"><span class=\"toc-text\">lastIndexOf</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#length\"><span class=\"toc-text\">length</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#map\"><span class=\"toc-text\">map</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#pop\"><span class=\"toc-text\">pop</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#push\"><span class=\"toc-text\">push</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#reduce\"><span class=\"toc-text\">reduce</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#reduceRight\"><span class=\"toc-text\">reduceRight</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#reverse\"><span class=\"toc-text\">reverse</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#shift\"><span class=\"toc-text\">shift</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#slice\"><span class=\"toc-text\">slice</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#some\"><span class=\"toc-text\">some</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#sort\"><span class=\"toc-text\">sort</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#splice\"><span class=\"toc-text\">splice</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#toLocaleString-NaN\"><span class=\"toc-text\">toLocaleString</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#toString-NaN\"><span class=\"toc-text\">toString</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#unshift\"><span class=\"toc-text\">unshift</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#values\"><span class=\"toc-text\">values</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%87%A0%E4%B8%AA%E9%9D%9E%E5%8E%9F%E5%9E%8B%E9%93%BE%E4%B8%8A%E7%9A%84%E6%96%B9%E6%B3%95\"><span class=\"toc-text\">几个非原型链上的方法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#isArray\"><span class=\"toc-text\">isArray</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#of\"><span class=\"toc-text\">of</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5\"><span class=\"toc-text\">参考链接</span></a></li></ol>","author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"生活不止眼前的苟且，还有诗和远方","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"前端基础-webpack系列","uid":"1e83d022f4eb1c3b94dc11a21715ce7c","slug":"2022-07-14webpack","date":"2022-07-14T14:19:31.000Z","updated":"2022-09-16T13:54:56.213Z","comments":true,"path":"api/articles/2022-07-14webpack.json","keywords":null,"cover":null,"text":"webpack 与 grunt、gulp 的不同？ Grunt、Gulp 是基于任务运⾏的⼯具： 它们会⾃动执⾏指定的任务，就像流⽔线，把资源放上去然后通过不同插件进⾏加⼯，它们包含活跃的社区，丰富的插 件，能⽅便的打造各种⼯作流。 Webpack 是基于模块化打包的⼯具: ⾃动...","link":"","photos":[],"count_time":{"symbolsCount":"13k","symbolsTime":"11 mins."},"categories":[{"name":"前端基础","slug":"前端基础","count":40,"path":"api/categories/前端基础.json"}],"tags":[{"name":"前端基础","slug":"前端基础","count":42,"path":"api/tags/前端基础.json"}],"author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"生活不止眼前的苟且，还有诗和远方","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}},"next_post":{"title":"cookie注入问题","uid":"4d4a2baebc5a8e28d7b1ee35ff588bdb","slug":"2022-07-12cookie","date":"2022-07-12T07:37:09.000Z","updated":"2022-09-16T13:54:56.211Z","comments":true,"path":"api/articles/2022-07-12cookie.json","keywords":null,"cover":[],"text":"问题注入的 cookie 怎么没有啦，在vconsole中调试查看，storage有cookie信息,接口调用，发现没有 cookie 被SSO校验拦截住了 抓包结果服务端渲染，中间有代理转发，nextjs 服务端自适应 接口请求 问题分析通过 chrome,手动注入调试发现正常...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"webview","slug":"webview","count":1,"path":"api/categories/webview.json"}],"tags":[{"name":"webview","slug":"webview","count":1,"path":"api/tags/webview.json"},{"name":"cookie","slug":"cookie","count":1,"path":"api/tags/cookie.json"}],"author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"生活不止眼前的苟且，还有诗和远方","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}}}