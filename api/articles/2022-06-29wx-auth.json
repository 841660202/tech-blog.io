{"title":"企业微信授权流程","uid":"240950b163de231df264068b4d1b9085","slug":"2022-06-29wx-auth","date":"2022-06-29T08:27:52.000Z","updated":"2022-09-15T14:26:10.879Z","comments":true,"path":"api/articles/2022-06-29wx-auth.json","keywords":null,"cover":[],"content":"<h2 id=\"准备工作\"><a href=\"#准备工作\" class=\"headerlink\" title=\"准备工作\"></a>准备工作</h2><ul>\n<li>确保本地已经正确配置了 HOST，能够从工作台入口打开本地的开发服务</li>\n<li>确保已获取到当前企业的唯一 ID：corp_id，在【管理后台】- 【我的企业】-【企业信息】页面，最下面找到【企业 ID】</li>\n<li>已经通过接口调用获取到当前应用的 access_token，请参考 二：<a href=\"https://developer.work.weixin.qq.com/tutorial/detail/46\" target=\"_blank\" >如何获取应用接口凭证</a></li>\n</ul>\n<h2 id=\"配置可信域名\"><a href=\"#配置可信域名\" class=\"headerlink\" title=\"配置可信域名\"></a>配置可信域名</h2><p>企业微信提供了 OAuth 的授权登录方式，可以让从企业微信终端打开的网页获取成员的身份信息，从而免去登录的环节。</p>\n<p>为了保证访问授权的安全性，需要配置授权链接 URL 所在域名为可信域名。<br>在【应用详情】-【开发者接口】-【网页授权及 JS-SDK】，点击【设置可信域名】</p>\n<img src=\"http://t-blog-images.aijs.top/img/20220629163014.webp\" />\n\n<p>在【设置可信域名】弹窗，填写网页授权功能的回调域名</p>\n<img src=\"http://t-blog-images.aijs.top/img/20220629163042.webp\" width=300 />\n\n<p>网页授权回调域名的配置须与实际访问链接的域名完全一致，详细要求请参考文档 <a href=\"https://developer.work.weixin.qq.com/document/path/91335#%E5%85%B3%E4%BA%8E%E7%BD%91%E9%A1%B5%E6%8E%88%E6%9D%83%E7%9A%84%E5%8F%AF%E4%BF%A1%E5%9F%9F%E5%90%8D\" target=\"_blank\" >关于网页授权的可信域名</a>。</p>\n<h2 id=\"构造网页授权链接\"><a href=\"#构造网页授权链接\" class=\"headerlink\" title=\"构造网页授权链接\"></a>构造网页授权链接</h2><p>在我们当前的教程中，我们有几个 URL 需要注意和区分：</p>\n<ul>\n<li>应用主页 URL<br>从工作台点击打开的页面 URL ，在创建应用是配置填写的，用来向授权链接 URL 跳转。</li>\n<li>重定向 URL<br>当用户授权成功后，会带着成员授权 code 跳转的 URL，用来接收 code 并获取成员身份。</li>\n<li>授权链接 URL<br>企业微信域名下的 URL，包含了 suite_id、重定向 URL 等信息，当企业微信服务参数验证成功后，会跳转到重定向 URL。</li>\n</ul>\n<p>我们在上节课程中配置企业的主页 URL 为 <a href=\"http://myapp.com:300/home%EF%BC%8C%E6%88%91%E4%BB%AC%E5%9C%A8%E8%BF%99%E4%B8%AA\" target=\"_blank\" >http://myapp.com:300/home，我们在这个 URL</a> 访问逻辑里面根据约定构造授权链接 URL，并向这个链接跳转：</p>\n<p>关于 OAuth 的详细内容，请参考 <a href=\"https://developer.work.weixin.qq.com/document/path/91119\" target=\"_blank\" >网页授权登录</a>。关于授权链接更多的内容，请参考 <a href=\"https://developer.work.weixin.qq.com/document/path/91022\" target=\"_blank\" >构造网页授权链接</a>。</p>\n<h2 id=\"解析成员授权-code\"><a href=\"#解析成员授权-code\" class=\"headerlink\" title=\"解析成员授权 code\"></a>解析成员授权 code</h2><p>企业成员从工作台点击应用，打开应用主页 URL，向授权链接 URL 跳转；企业微信对授权链接上的信息进行校验之后，会重定向 URL 跳转，并以 query 的形式带上当前访问成员的 code 信息。</p>\n<p>在上一步，我们定义了重定向 URL 为 <a href=\"http://myapp.com/app%EF%BC%8C%E5%9C%A8%E8%BF%99%E4%B8%AA\" target=\"_blank\" > http://myapp.com/app</a>，在这个 URL 的访问里我们解析出 code 参数。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; 重定向 URL\nrouter.get(&quot;&#x2F;app&quot;, async function (req, res, next) &#123;\n  &#x2F;&#x2F; 从 query 参数中解析 code\n  let &#123; code &#125; &#x3D; req.query;\n  &#x2F;&#x2F; 展示登录后的页面\n  res.render(&quot;home&quot;);\n&#125;);</code></pre>\n\n<h2 id=\"获取访问用户身份信息\"><a href=\"#获取访问用户身份信息\" class=\"headerlink\" title=\"获取访问用户身份信息\"></a>获取访问用户身份信息</h2><p>在解析出成员授权 code 之后，使用 access_token ，调用 <a href=\"https://developer.work.weixin.qq.com/document/path/91023\" target=\"_blank\" >获取访问用户身份</a> 接口，即可得到访问用户的基本信息 user_id，如果想要访问用户更详细的信息，则需要通过 <a href=\"https://developer.work.weixin.qq.com/document/path/90196\" target=\"_blank\" >读取成员</a> 得到用户的姓名、头像等完整信息。</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">router.get(&quot;&#x2F;app&quot;, async function (req, res, next) &#123;\n  let &#123; code &#125; &#x3D; req.query;\n  &#x2F;&#x2F; 从缓存中读取出 access_token\n  let access_token &#x3D; Tool.GetAccessToken();\n  if (access_token) &#123;\n    &#x2F;&#x2F; 获取用户基本信息\n    let &#123; data: user_data &#125; &#x3D; await axios.get(\n      &#96;https:&#x2F;&#x2F;qyapi.weixin.qq.com&#x2F;cgi-bin&#x2F;user&#x2F;getuserinfo?access_token&#x3D;$&#123;access_token&#125;&amp;code&#x3D;$&#123;code&#125;&#96;\n    );\n    console.log(&quot;获取 user_data 成功&quot;, user_data);\n    &#x2F;&#x2F; 获得用户的 user_id\n    let user_id &#x3D; user_data.UserId;\n    &#x2F;&#x2F; 获取用户的详细信息\n    let &#123; data: user_detail_data &#125; &#x3D; await axios.get(\n      &#96;https:&#x2F;&#x2F;qyapi.weixin.qq.com&#x2F;cgi-bin&#x2F;user&#x2F;get?access_token&#x3D;$&#123;access_token&#125;&amp;userid&#x3D;$&#123;user_id&#125;&#96;\n    );\n    console.log(&quot;获取成员详细信息成功&quot;, user_detail_data);\n    &#x2F;&#x2F; 将用户信息展示在页面上\n    res.render(&quot;home&quot;, user_detail_data);\n  &#125; else &#123;\n    res.render(&quot;error&quot;);\n  &#125;\n&#125;);</code></pre>\n\n<p>在前端页面中展示用户的基本信息：</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;Hello World&lt;&#x2F;title&gt;\n  &lt;&#x2F;head&gt;\n  &lt;body&gt;\n    &lt;h1&gt;Hello World!&lt;&#x2F;h1&gt;\n    &lt;div&gt;\n      &lt;img src&#x3D;&quot;&lt;%&#x3D;avatar %&gt;&quot; &#x2F;&gt;&lt;span&gt;&lt;%&#x3D;name %&gt;(&lt;%&#x3D;english_name %&gt;) &lt;&#x2F;span&gt;\n    &lt;&#x2F;div&gt;\n  &lt;&#x2F;body&gt;\n&lt;&#x2F;html&gt;\n</code></pre>\n\n<h2 id=\"效果展示\"><a href=\"#效果展示\" class=\"headerlink\" title=\"效果展示\"></a>效果展示</h2><img src=\"http://t-blog-images.aijs.top/img/20220629163741.webp\" width=300/>\n\n<p>关于获取用户的详细信息内容以及接口返回的完整字段信息，请参考 <a href=\"https://developer.work.weixin.qq.com/document/path/90196\" target=\"_blank\" >读取成员</a>。如果想要成员在系统浏览器中打开应用时也能进行企业微信授权登录，请参考 <a href=\"https://developer.work.weixin.qq.com/document/path/91025\" target=\"_blank\" >构造扫码登录</a> 。</p>\n<h2 id=\"授权流程\"><a href=\"#授权流程\" class=\"headerlink\" title=\"授权流程\"></a>授权流程</h2><p>企业微信官网有授权流程，看上去没那么直接，结合项目画个草图</p>\n<img src=\"http://t-blog-images.aijs.top/img/20220630093816.webp\" />\n\n<p>本篇文章针对的是<strong>企业微信授权</strong>的情况，即：<strong>图第一行走到没授权，往下走（没有 cookie 信息的情况）</strong></p>\n<h2 id=\"更好的方案\"><a href=\"#更好的方案\" class=\"headerlink\" title=\"更好的方案\"></a>更好的方案</h2><p><strong>方案 1:</strong> 对于企业微信授权和 SSO 授权，本质上并无区别，最终的目的是注入 cookie,对于我当前所在公司的情况（企业微信授权，单独维护到 redies 中，独立于 SSO,是没有必要的）。</p>\n<p><strong>方案 2:</strong> 如果把企业微信授权的返回用于换取 SSO 的（token）注入 cookie 实现授权，最终每次校验都是 SSO,会节省不少成本。</p>\n<p>我在上家做<strong>钉钉 ISV 第三方供应商开发</strong>时候，实现效果类似方案 2</p>\n<p><strong>更优方案 3:</strong> 在方案 2 的基础，将请求头标记去掉（让后端自行处理）。请求到后端，后端能拿到请求头<code>userAgent</code>字段，可以知道到此请求是从哪个应用过来的，后端自己判断下就好了（完全没必要<code>域名加配置，尤其是那种nginx配置后，代码又乱写的</code>）</p>\n<h2 id=\"微信环境判断\"><a href=\"#微信环境判断\" class=\"headerlink\" title=\"微信环境判断\"></a>微信环境判断</h2><p><strong>前端代码</strong></p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">&#x2F;**\n * （服务端+客户端）渲染：根据req headers中user-agent判断是否来自微信端（桌面端和手机端）\n *&#x2F;\nexport default function getWechatUserAgent(userAgent?: string): boolean &#123;\n  const agent &#x3D;\n    userAgent || (typeof navigator &#x3D;&#x3D;&#x3D; &quot;undefined&quot; ? &quot;&quot; : navigator.userAgent);\n  const user_agent &#x3D; agent ? agent.toLowerCase() : &quot;&quot;;\n  return !!(\n    user_agent &amp;&amp;\n    (user_agent.includes(&quot;wechat&quot;) ||\n      user_agent.includes(&quot;wxwork&quot;) ||\n      user_agent.includes(&quot;windowswechat&quot;))\n  );\n&#125;</code></pre>\n\n<p><strong>环境判断也放后端</strong></p>\n<p>公司设计的加请求头标记是不是企业微信，完全没必要 服务端接到请求可以拿到<code>user-agent</code></p>\n<h2 id=\"注意\"><a href=\"#注意\" class=\"headerlink\" title=\"注意\"></a>注意</h2><div class=\"custom-quote warning\">\n<span class=\"custom-quote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M20.86 14.13C20 14.7 19.56 15.74 19.77 16.76C20.13 18.55 18.55 20.13 16.76 19.77C15.74 19.57 14.7 20 14.13 20.86C13.12 22.38 10.89 22.38 9.88 20.86C9.3 20 8.26 19.56 7.24 19.77C5.45 20.13 3.87 18.55 4.23 16.76C4.43 15.74 4 14.7 3.14 14.13C1.62 13.12 1.62 10.89 3.14 9.88C4 9.3 4.44 8.26 4.23 7.24C3.87 5.45 5.45 3.87 7.24 4.23C8.26 4.44 9.3 4 9.87 3.14C10.88 1.62 13.11 1.62 14.12 3.14C14.7 4 15.74 4.44 16.76 4.23C18.55 3.87 20.13 5.45 19.77 7.24C19.56 8.26 20 9.3 20.86 9.87C22.38 10.88 22.38 13.12 20.86 14.13Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 8V13\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M12 15.99V16.01\"></path>\n</svg>\n</span>\n<p class=\"custom-quote-title\">WARNING</p>\n<p><p><code>&lt;a&gt;标签下载</code></p>\n<p>因为后端是通过前端给的额外标识判断环境的，有个很致命的问题 通过 <code>&lt;a&gt;标签下载</code>的没办法加请求头，需要将<code>&lt;a&gt;标签方式的下载</code>改为 http 请求下载</p>\n</p>\n</div>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><p><a href=\"https://developer.work.weixin.qq.com/tutorial/detail/47\" target=\"_blank\" >如何获取登录用户信息</a></p>\n<p><a href=\"https://developer.work.weixin.qq.com/document/path/91022\" target=\"_blank\" >构造网页授权链接</a></p>\n","text":"准备工作 确保本地已经正确配置了 HOST，能够从工作台入口打开本地的开发服务 确保已获取到当前企业的唯一 ID：corp_id，在【管理后台】- 【我的企业】-【企业信息】页面，最下面找到【企业 ID】 已经通过接口调用获取到当前应用的 access_token，请参考 二：如...","link":"","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[{"name":"企业微信","slug":"企业微信","count":5,"path":"api/categories/企业微信.json"}],"tags":[{"name":"企业微信","slug":"企业微信","count":5,"path":"api/tags/企业微信.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%87%86%E5%A4%87%E5%B7%A5%E4%BD%9C\"><span class=\"toc-text\">准备工作</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE%E5%8F%AF%E4%BF%A1%E5%9F%9F%E5%90%8D\"><span class=\"toc-text\">配置可信域名</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9E%84%E9%80%A0%E7%BD%91%E9%A1%B5%E6%8E%88%E6%9D%83%E9%93%BE%E6%8E%A5\"><span class=\"toc-text\">构造网页授权链接</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%A3%E6%9E%90%E6%88%90%E5%91%98%E6%8E%88%E6%9D%83-code\"><span class=\"toc-text\">解析成员授权 code</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%8E%B7%E5%8F%96%E8%AE%BF%E9%97%AE%E7%94%A8%E6%88%B7%E8%BA%AB%E4%BB%BD%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">获取访问用户身份信息</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%88%E6%9E%9C%E5%B1%95%E7%A4%BA\"><span class=\"toc-text\">效果展示</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8E%88%E6%9D%83%E6%B5%81%E7%A8%8B\"><span class=\"toc-text\">授权流程</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9B%B4%E5%A5%BD%E7%9A%84%E6%96%B9%E6%A1%88\"><span class=\"toc-text\">更好的方案</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%BE%AE%E4%BF%A1%E7%8E%AF%E5%A2%83%E5%88%A4%E6%96%AD\"><span class=\"toc-text\">微信环境判断</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E6%84%8F\"><span class=\"toc-text\">注意</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5\"><span class=\"toc-text\">参考链接</span></a></li></ol>","author":{"name":"陈海龙","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"需要就学呗，多大点事😂","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"react-native-webview中处理外网链接","uid":"da1169afdf41f1a24b458b57385fca2d","slug":"2022-06-29rn-web","date":"2022-06-29T09:11:44.000Z","updated":"2022-09-15T14:26:10.879Z","comments":true,"path":"api/articles/2022-06-29rn-web.json","keywords":null,"cover":[],"text":"背景之前公司移动端是使用 vpn 连接到内网，由于某些原因，IOS 企业证书即将到期，应用需要上架，vpn 不满足上架要求，所以： vpn 要从 iOS 包中移除 vpn 移除导致不能直接访问内网 需要通过外网域名访问内网资源 不同环境的请求 原生及 RN 代码，接口访问走 AT...","link":"","photos":[],"count_time":{"symbolsCount":"1.4k","symbolsTime":"1 mins."},"categories":[{"name":"react-native","slug":"react-native","count":2,"path":"api/categories/react-native.json"}],"tags":[{"name":"react-native","slug":"react-native","count":2,"path":"api/tags/react-native.json"}],"author":{"name":"陈海龙","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"需要就学呗，多大点事😂","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}},"next_post":{"title":"hexo-theme-aurora源码修改","uid":"e1c1013f78e2c9e4246458e52acbd895","slug":"2022-06-24aurora","date":"2022-06-24T03:43:51.000Z","updated":"2022-09-15T14:50:07.545Z","comments":true,"path":"api/articles/2022-06-24aurora.json","keywords":null,"cover":[],"text":"背景hexo-theme-aurora是一款不错的主题，在使用过程无疑会遇到一些问题。遇到问题首先去 github 上找 issue 来处理，有些问题需要改源码，之前使用patch进行简单的修改，这次遇到了 tag 查不到，本地是有的，发布后找不到了，导致文章在tag情况下不可见...","link":"","photos":[],"count_time":{"symbolsCount":"5.3k","symbolsTime":"5 mins."},"categories":[{"name":"工具","slug":"工具","count":15,"path":"api/categories/工具.json"}],"tags":[{"name":"hexo","slug":"hexo","count":2,"path":"api/tags/hexo.json"}],"author":{"name":"陈海龙","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"需要就学呗，多大点事😂","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}}}