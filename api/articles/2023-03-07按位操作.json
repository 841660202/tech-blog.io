{"title":"“位运算符”的使用场景","uid":"321b3776a189b2e51803e56cf34e14e0","slug":"2023-03-07按位操作","date":"2023-03-07T08:42:34.000Z","updated":"2023-03-13T13:39:28.230Z","comments":true,"path":"api/articles/2023-03-07按位操作.json","keywords":null,"cover":null,"content":"<h2 id=\"按位与-amp\"><a href=\"#按位与-amp\" class=\"headerlink\" title=\"按位与 &amp;\"></a>按位与 &amp;</h2><h3 id=\"特点\"><a href=\"#特点\" class=\"headerlink\" title=\"特点\"></a>特点</h3><ol>\n<li>奇数&amp;1 恒等于 1</li>\n<li>偶数&amp;1 恒等于 0</li>\n</ol>\n<h3 id=\"动态规划使用场景\"><a href=\"#动态规划使用场景\" class=\"headerlink\" title=\"动态规划使用场景\"></a>动态规划使用场景</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; 假设你正在爬楼梯。需要 n 阶你才能到达楼顶。 每次你可以爬 1 或 2 个台阶。\n&#x2F;&#x2F; 你有多少种不同的方法可以爬到楼顶呢？ 注意：给定 n 是一个正整数。\n\n&#x2F;&#x2F; 在循环的过程中，不断替换其中的值， 最后的结果，就是所有的方法数\nfunction minCost(cost) &#123;\n  &#x2F;&#x2F; 定义一个变量\n  let len &#x3D; cost.length;\n  &#x2F;&#x2F; 定义两个变量\n  let dp &#x3D; [cost[0], cost[1]];\n\n  for (let i &#x3D; 2; i &lt; len; i++) &#123;\n    &#x2F;&#x2F; 0&#x2F;1 下标数组， 偶数 &amp; 1 &#x3D; 0， 奇数 &amp; 1 &#x3D;1\n    dp[i &amp; 1] &#x3D; Math.min(dp[0], dp[1]) + cost[i];\n    console.log(&#96;dp[$&#123;i &amp; 1&#125;]&#96;, i, dp[i &amp; 1], dp);\n  &#125;\n\n  &#x2F;&#x2F; 循环结束后\n  return Math.min(dp[0], dp[1]);\n&#125;\n\nvar a &#x3D; minCost([1, 2, 3, 4, 5]);\n\nconsole.log(&quot;a&quot;, a);</code></pre>\n\n<h3 id=\"动态规划-fibonacci\"><a href=\"#动态规划-fibonacci\" class=\"headerlink\" title=\"动态规划 fibonacci\"></a>动态规划 fibonacci</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">function fibonacci(n) &#123;\n  let result &#x3D; [1, 1];\n\n  for (let i &#x3D; 2; i &lt; n; i++) &#123;\n    &#x2F;&#x2F; 当前  &#x3D; 数组的第一个+数组的第二个\n    result[i &amp; 1] &#x3D; result[(i - 2) &amp; 1] + result[(i - 1) &amp; 1];\n    console.log(&#96;$&#123;i&#125; result[$&#123;i &amp; 1&#125;] &#x3D; result[$&#123;(i - 2) &amp; 1&#125;] + result[$&#123;(i - 1) &amp; 1&#125;];&#96;, result[i &amp; 1]);\n  &#125;\n  return result[(n - 1) &amp; 1];\n&#125;\n\nvar a &#x3D; fibonacci(5);\n\nconsole.log(&quot;a&quot;, a);\n\n&#x2F;&#x2F; 输出日志， 这里不要过度关注顺序\n&#x2F;&#x2F; 2 result[0] &#x3D; result[0] + result[1]; 2\n&#x2F;&#x2F; 3 result[1] &#x3D; result[1] + result[0]; 3\n&#x2F;&#x2F; 4 result[0] &#x3D; result[0] + result[1]; 5\n&#x2F;&#x2F; a 5</code></pre>\n\n<h3 id=\"React-源码中\"><a href=\"#React-源码中\" class=\"headerlink\" title=\"React 源码中\"></a>React 源码中</h3><ol>\n<li>优先级管理 lanes <a href=\"https://github.com/facebook/react/blob/12adaffef7105e2714f82651ea51936c563fe15c/packages/react-reconciler/src/ReactFiberLane.js#LL72-L105C31\" target=\"_blank\" >见</a></li>\n<li>flags <a href=\"https://github.com/facebook/react/blob/12adaffef7105e2714f82651ea51936c563fe15c/packages/react-reconciler/src/ReactFiberFlags.js#LL9-L65C72\" target=\"_blank\" >见</a></li>\n<li><a href=\"https://7kms.github.io/react-illustration-series/algorithm/bitfield\" target=\"_blank\" >文档</a></li>\n</ol>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>从输出的结果来看 1 是最有用的，其他的意义不大</p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">const obj &#x3D; &#123;\n  0: &quot;000&quot;,\n  1: &quot;001&quot;,\n  2: &quot;010&quot;,\n  3: &quot;011&quot;,\n  4: &quot;100&quot;,\n  5: &quot;101&quot;,\n&#125;;\n\nfunction bitwiseAnd(arr) &#123;\n  for (let i &#x3D; 0; i &lt;&#x3D; 5; i++) &#123;\n    console.log(&quot;-------------,-------------&quot;);\n    for (let j &#x3D; 0; j &lt; arr.length; j++) &#123;\n      console.log(&#96;$&#123;i&#125;进制i&#x3D;$&#123;obj[i]&#125;&#96;, &quot;j&amp;i&quot;, j &amp; i);\n    &#125;\n  &#125;\n&#125;\n\nbitwiseAnd([0, 1, 2, 3, 4, 5, 6, 7] &#x2F;*数组的元素为数组的下标0-7 *&#x2F;);\n&#x2F;&#x2F; -------------,-------------\n&#x2F;&#x2F; 0进制i&#x3D;000 j&amp;i 0\n&#x2F;&#x2F; 0进制i&#x3D;000 j&amp;i 0\n&#x2F;&#x2F; 0进制i&#x3D;000 j&amp;i 0\n&#x2F;&#x2F; 0进制i&#x3D;000 j&amp;i 0\n&#x2F;&#x2F; 0进制i&#x3D;000 j&amp;i 0\n&#x2F;&#x2F; 0进制i&#x3D;000 j&amp;i 0\n&#x2F;&#x2F; 0进制i&#x3D;000 j&amp;i 0\n&#x2F;&#x2F; 0进制i&#x3D;000 j&amp;i 0\n&#x2F;&#x2F; -------------,-------------\n&#x2F;&#x2F; 1进制i&#x3D;001 j&amp;i 0\n&#x2F;&#x2F; 1进制i&#x3D;001 j&amp;i 1\n&#x2F;&#x2F; 1进制i&#x3D;001 j&amp;i 0\n&#x2F;&#x2F; 1进制i&#x3D;001 j&amp;i 1\n&#x2F;&#x2F; 1进制i&#x3D;001 j&amp;i 0\n&#x2F;&#x2F; 1进制i&#x3D;001 j&amp;i 1\n&#x2F;&#x2F; 1进制i&#x3D;001 j&amp;i 0\n&#x2F;&#x2F; 1进制i&#x3D;001 j&amp;i 1\n&#x2F;&#x2F; -------------,-------------\n&#x2F;&#x2F; 2进制i&#x3D;010 j&amp;i 0\n&#x2F;&#x2F; 2进制i&#x3D;010 j&amp;i 0\n&#x2F;&#x2F; 2进制i&#x3D;010 j&amp;i 2\n&#x2F;&#x2F; 2进制i&#x3D;010 j&amp;i 2\n&#x2F;&#x2F; 2进制i&#x3D;010 j&amp;i 0\n&#x2F;&#x2F; 2进制i&#x3D;010 j&amp;i 0\n&#x2F;&#x2F; 2进制i&#x3D;010 j&amp;i 2\n&#x2F;&#x2F; 2进制i&#x3D;010 j&amp;i 2\n&#x2F;&#x2F; -------------,-------------\n&#x2F;&#x2F; 3进制i&#x3D;011 j&amp;i 0\n&#x2F;&#x2F; 3进制i&#x3D;011 j&amp;i 1\n&#x2F;&#x2F; 3进制i&#x3D;011 j&amp;i 2\n&#x2F;&#x2F; 3进制i&#x3D;011 j&amp;i 3\n&#x2F;&#x2F; 3进制i&#x3D;011 j&amp;i 0\n&#x2F;&#x2F; 3进制i&#x3D;011 j&amp;i 1\n&#x2F;&#x2F; 3进制i&#x3D;011 j&amp;i 2\n&#x2F;&#x2F; 3进制i&#x3D;011 j&amp;i 3\n&#x2F;&#x2F; -------------,-------------\n&#x2F;&#x2F; 4进制i&#x3D;100 j&amp;i 0\n&#x2F;&#x2F; 4进制i&#x3D;100 j&amp;i 0\n&#x2F;&#x2F; 4进制i&#x3D;100 j&amp;i 0\n&#x2F;&#x2F; 4进制i&#x3D;100 j&amp;i 0\n&#x2F;&#x2F; 4进制i&#x3D;100 j&amp;i 4\n&#x2F;&#x2F; 4进制i&#x3D;100 j&amp;i 4\n&#x2F;&#x2F; 4进制i&#x3D;100 j&amp;i 4\n&#x2F;&#x2F; 4进制i&#x3D;100 j&amp;i 4\n&#x2F;&#x2F; -------------,-------------\n&#x2F;&#x2F; 5进制i&#x3D;101 j&amp;i 0\n&#x2F;&#x2F; 5进制i&#x3D;101 j&amp;i 1\n&#x2F;&#x2F; 5进制i&#x3D;101 j&amp;i 0\n&#x2F;&#x2F; 5进制i&#x3D;101 j&amp;i 1\n&#x2F;&#x2F; 5进制i&#x3D;101 j&amp;i 4\n&#x2F;&#x2F; 5进制i&#x3D;101 j&amp;i 5\n&#x2F;&#x2F; 5进制i&#x3D;101 j&amp;i 4\n&#x2F;&#x2F; 5进制i&#x3D;101 j&amp;i 5</code></pre>\n\n<!-- ## 按位或 |\n\n## 按位非 ~\n\n## 按位异或 ^ -->\n\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><ol>\n<li><a href=\"/#/post/2023-03-062023js\" target=\"_blank\" >&#x2F;#&#x2F;post&#x2F;2023-03-062023js</a></li>\n<li><a href=\"/#/post/2022-07-04js\" target=\"_blank\" >&#x2F;#&#x2F;post&#x2F;2022-07-04js</a></li>\n</ol>\n","text":"按位与 &amp;特点 奇数&amp;1 恒等于 1 偶数&amp;1 恒等于 0 动态规划使用场景&#x2F;&#x2F; 假设你正在爬楼梯。需要 n 阶你才能到达楼顶。 每次你可以爬 1 或 2 个台阶。 &#x2F;&#x2F; 你有多少种不同的方法可以爬到楼顶呢？ 注意：...","link":"","photos":[],"count_time":{"symbolsCount":"4.2k","symbolsTime":"4 mins."},"categories":[{"name":"前端基础","slug":"前端基础","count":54,"path":"api/categories/前端基础.json"}],"tags":[{"name":"前端基础","slug":"前端基础","count":56,"path":"api/tags/前端基础.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8C%89%E4%BD%8D%E4%B8%8E-amp\"><span class=\"toc-text\">按位与 &amp;</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%89%B9%E7%82%B9\"><span class=\"toc-text\">特点</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92%E4%BD%BF%E7%94%A8%E5%9C%BA%E6%99%AF\"><span class=\"toc-text\">动态规划使用场景</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92-fibonacci\"><span class=\"toc-text\">动态规划 fibonacci</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#React-%E6%BA%90%E7%A0%81%E4%B8%AD\"><span class=\"toc-text\">React 源码中</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5\"><span class=\"toc-text\">参考链接</span></a></li></ol>","author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"vue vs react","uid":"fa1ca6ffeb14e68321654370d8f81adc","slug":"2023-03-09vue_vs_react","date":"2023-03-09T06:12:58.000Z","updated":"2023-03-09T15:11:24.968Z","comments":true,"path":"api/articles/2023-03-09vue_vs_react.json","keywords":null,"cover":null,"text":"vue 对比 react动机数据驱动，提升开发体验，避免对 dom 的直接操作（原生&#x2F;jquery） 发展上vue 由借鉴 react 和 angular，现在更多的是追逐着 react 的脚步 声明周期的重命名 新的支持：hook、suspense、Teleport ...","link":"","photos":[],"count_time":{"symbolsCount":"2k","symbolsTime":"2 mins."},"categories":[{"name":"前端基础","slug":"前端基础","count":54,"path":"api/categories/前端基础.json"}],"tags":[{"name":"前端基础","slug":"前端基础","count":56,"path":"api/tags/前端基础.json"}],"author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}},"next_post":{"title":"2023前端面试真题之JS篇","uid":"0e8399ece48a5643474d22f61ba561e0","slug":"2023-03-062023js","date":"2023-03-06T01:49:01.000Z","updated":"2023-03-13T13:39:28.229Z","comments":true,"path":"api/articles/2023-03-062023js.json","keywords":null,"cover":[],"text":"JS 执行流程 准备工作: 需要准备执行 JS 时所需要的一些基础环境 初始化了内存中的堆和栈结构 JS 全局执行上下文: 包含了执行过程中的全局信息， 比如一些内置函数，全局变量等信息 全局作用域:包含了一些全局变量， 在执行过程中的数据都需要存放在内存中 初始化消息循环系统:...","link":"","photos":[],"count_time":{"symbolsCount":"22k","symbolsTime":"20 mins."},"categories":[{"name":"前端面试","slug":"前端面试","count":1,"path":"api/categories/前端面试.json"}],"tags":[{"name":"前端面试","slug":"前端面试","count":1,"path":"api/tags/前端面试.json"}],"author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}}}