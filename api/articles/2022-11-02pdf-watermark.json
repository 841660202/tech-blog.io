{"title":"pdf 添加水印并下载","uid":"005b684f59380abe36489fcebc43072f","slug":"2022-11-02pdf-watermark","date":"2022-11-02T03:37:47.000Z","updated":"2022-11-02T12:30:25.268Z","comments":true,"path":"api/articles/2022-11-02pdf-watermark.json","keywords":null,"cover":[],"content":"<h2 id=\"页面渲染\"><a href=\"#页面渲染\" class=\"headerlink\" title=\"页面渲染\"></a>页面渲染</h2><p>React-PDF + Canvas 实现预览水印效果</p>\n<h2 id=\"需求变更\"><a href=\"#需求变更\" class=\"headerlink\" title=\"需求变更\"></a>需求变更</h2><p>用户下载 pdf 也要加载水印</p>\n<h2 id=\"方案\"><a href=\"#方案\" class=\"headerlink\" title=\"方案\"></a>方案</h2><ul>\n<li>方案 1. 后端 在 pdf 上传时候水印</li>\n<li>方案 2. 后端 pdf 增加水印</li>\n<li>方案 3. 前端在文件上传时候增加水印</li>\n<li>方案 4. 前端在文件下载的时候增加水印</li>\n</ul>\n<p>现在场景是：文件直接存储到 COS 上面，没有经过后端</p>\n<p>那么只能采用前端实现方案，<code>或者</code>是前端把链接给后端，后端对文件下载，加完水印再给前端，肯定是前者更优</p>\n<h2 id=\"前端实现方式\"><a href=\"#前端实现方式\" class=\"headerlink\" title=\"前端实现方式\"></a>前端实现方式</h2><p>用到两个库 pdf-lib + @pdf-lib&#x2F;fontkit</p>\n<div style=\"display: flex;align-items: center;padding-top:4px;padding-bottom: 4px\"><a target=\"_blank\" href=\"https://github.com/Hopding/pdf-lib\">https://github.com/Hopding/pdf-lib</a><img src=\"https://img.shields.io/github/stars/Hopding/pdf-lib?style=social\" /></div>\n\n<div style=\"display: flex;align-items: center;padding-top:4px;padding-bottom: 4px\"><a target=\"_blank\" href=\"https://github.com/foliojs/fontkit\">https://github.com/foliojs/fontkit</a><img src=\"https://img.shields.io/github/stars/foliojs/fontkit?style=social\" /></div>\n\n<p><strong>不支持中文是 fontkit 使用问题，不是 pdf-lib 问题</strong></p>\n<p><a href=\"https://github.com/Hopding/pdf-lib/issues/494\" target=\"_blank\" >https://github.com/Hopding/pdf-lib/issues/494</a></p>\n<pre class=\"line-numbers language-markup\" data-language=\"markup\"><code class=\"language-markup\">&lt;html&gt;\n  &lt;head&gt;\n    &lt;meta charset&#x3D;&quot;utf-8&quot; &#x2F;&gt;\n    &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;cdnjs.cloudflare.com&#x2F;ajax&#x2F;libs&#x2F;pdf-lib&#x2F;1.14.1&#x2F;pdf-lib.min.js&quot;&gt;&lt;&#x2F;script&gt;\n    &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;@pdf-lib&#x2F;fontkit&#x2F;dist&#x2F;fontkit.umd.js&quot;&gt;&lt;&#x2F;script&gt;\n    &lt;script src&#x3D;&quot;https:&#x2F;&#x2F;unpkg.com&#x2F;downloadjs@1.4.7&quot;&gt;&lt;&#x2F;script&gt;\n  &lt;&#x2F;head&gt;\n\n  &lt;style&gt;\n    body &#123;\n      width: 100vw;\n      height: 100vh;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      flex-direction: column;\n    &#125;\n\n    p &#123;\n      font-family: helvetica;\n      font-size: 24px;\n      text-align: center;\n      margin: 25px;\n    &#125;\n\n    .small &#123;\n      font-family: helvetica;\n      font-size: 18px;\n      text-align: center;\n      margin: 25px;\n    &#125;\n\n    button &#123;\n      background-color: #315efb;\n      border: none;\n      color: white;\n      padding: 14px 32px;\n      border-radius: 10px;\n      text-align: center;\n      font-size: 16px;\n      cursor: pointer;\n    &#125;\n  &lt;&#x2F;style&gt;\n\n  &lt;body&gt;\n    &lt;p&gt;点击这个按钮通过&lt;code&gt;pdf-lib&lt;&#x2F;code&gt;给原来的pdf文件添加水印&lt;&#x2F;p&gt;\n    &lt;button onclick&#x3D;&quot;modify()&quot;&gt;Modify PDF&lt;&#x2F;button&gt;\n    &lt;p class&#x3D;&quot;small&quot;&gt;(点击后自动下载修改完成后的pdf文件)&lt;&#x2F;p&gt;\n  &lt;&#x2F;body&gt;\n\n  &lt;script&gt;\n    &#x2F;&#x2F;1. 引入相关对象和方法\n    const &#123; degrees, PDFDocument, rgb, StandardFonts &#125; &#x3D; PDFLib; &#x2F;&#x2F;引入PDFLib相关方法\n    const fontkit &#x3D; window.fontkit; &#x2F;&#x2F;引入自定义字体工具包\n\n    &#x2F;&#x2F; pdf浏览\n    async function modify() &#123;\n      &#x2F;*2. 获取pdf文件的arrarybuffer文件流\n         可请求后台接口返回的base64文件流，然后转成arrayBuffer类型\n         可访问前端项目中的本地文件\n         不能直接访问服务器链接文件，会有跨域问题*&#x2F;\n      const url &#x3D; &quot;.&#x2F;1.pdf&quot;;\n      const existingPdfBytes &#x3D; await fetch(url).then((res) &#x3D;&gt;\n        res.arrayBuffer()\n      );\n      &#x2F;&#x2F; 将arraybuffer数据转成pdf文档\n      const pdfDoc &#x3D; await PDFDocument.load(existingPdfBytes);\n\n      &#x2F;&#x2F;3. 自定义字体，如不需要使用自定义字体可以将这一段全部注释掉，也不用下载自定义字体文件和自定义字体工具fontkit\n      &#x2F;&#x2F;将自己下载好的.ttf文件放置项目中，然后访问文件路径\n      const fonturl &#x3D; &quot;.&#x2F;fangzhengkaiti.ttf&quot;;\n      const fontBytes &#x3D; await fetch(fonturl).then((res) &#x3D;&gt; res.arrayBuffer());\n      &#x2F;&#x2F; 自定义字体挂载、fontkit为自定义字体注册工具\n      pdfDoc.registerFontkit(fontkit);\n      const customFont &#x3D; await pdfDoc.embedFont(fontBytes);\n\n      &#x2F;&#x2F; 内置字体（不支持中文）, 如果水印中不包含中文可直接用内置字体，本次这里没用到内置字体\n      const helveticaFont &#x3D; await pdfDoc.embedFont(StandardFonts.Helvetica);\n\n      &#x2F;&#x2F;4. 添加水印\n      &#x2F;&#x2F;为每页pdf添加文字水印\n      const pages &#x3D; pdfDoc.getPages();\n      for (let i &#x3D; 0; i &lt; pages.length; i++) &#123;\n        const noPage &#x3D; pages[i];\n        const &#123; width, height &#125; &#x3D; noPage.getSize();\n        for (let i &#x3D; 0; i &lt; 10; i++) &#123;\n          for (let j &#x3D; 0; j &lt; 3; j++) &#123;\n            noPage.drawText(&quot;版权所有，侵权不究！&quot;, &#123;\n              x: 230 * j,\n              y: (height &#x2F; 5) * i,\n              size: 16,\n              font: customFont, &#x2F;&#x2F;这里使用的是自定义字体\n              &#x2F;&#x2F;使用上面定义好的内置字体\n              &#x2F;&#x2F; font: helveticaFont,\n              color: rgb(0.46, 0.53, 0.6),\n              rotate: degrees(30),\n              opacity: 0.3,\n            &#125;);\n          &#125;\n        &#125;\n      &#125;\n\n      &#x2F;&#x2F;5. 保存pdf文件的unit64Arrary文件流\n      const pdfBytes &#x3D; await pdfDoc.save();\n      download(pdfBytes, &quot;test.pdf&quot;, &quot;application&#x2F;pdf&quot;); &#x2F;&#x2F;下载带水印的pdf\n\n      &#x2F;&#x2F;6. 新标签页预览、打印\n      let blobData &#x3D; new Blob([pdfBytes], &#123; type: &quot;application&#x2F;pdf;Base64&quot; &#125;);\n      let a &#x3D; document.createElement(&quot;a&quot;);\n      a.target &#x3D; &quot;_blank&quot;;\n      a.href &#x3D; window.URL.createObjectURL(blobData);\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n    &#125;\n  &lt;&#x2F;script&gt;\n&lt;&#x2F;html&gt;</code></pre>\n\n<h2 id=\"效果图\"><a href=\"#效果图\" class=\"headerlink\" title=\"效果图\"></a>效果图</h2><img src=\"http://t-blog-images.aijs.top/img/202211021338629.webp\" style=\"width: 500px;max-width: 100%\"/>\n\n<h2 id=\"字体选用\"><a href=\"#字体选用\" class=\"headerlink\" title=\"字体选用\"></a>字体选用</h2><img src=\"http://t-blog-images.aijs.top/img/202211021342143.webp\"  style=\"width: 500px;max-width: 100%\"/>\n\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><div style=\"display: flex;align-items: center;padding-top:4px;padding-bottom: 4px;margin-bottom:20px\"><a target=\"_blank\" href=\"https://github.com/Hopding/pdf-lib\">https://github.com/Hopding/pdf-lib</a><img src=\"https://img.shields.io/github/stars/Hopding/pdf-lib?style=social\" /></div>\n\n<div style=\"display: flex;align-items: center;padding-top:4px;padding-bottom: 4px\"><a target=\"_blank\" href=\"https://github.com/foliojs/fontkit\">https://github.com/foliojs/fontkit</a><img src=\"https://img.shields.io/github/stars/foliojs/fontkit?style=social\" /></div>\n\n<p><a href=\"https://github.com/Hopding/pdf-lib/issues/494\" target=\"_blank\" >https://github.com/Hopding/pdf-lib/issues/494</a></p>\n<p><a href=\"https://blog.csdn.net/weixin_54177757/article/details/125458375\" target=\"_blank\" >pdf-lib 给 pdf 添加水印并预览、下载、打印</a></p>\n<p><a href=\"https://www.fonts.net.cn/font-search-result.html?q=%E6%A5%B7%E4%BD%93\" target=\"_blank\" >字体天下</a></p>\n","text":"页面渲染React-PDF + Canvas 实现预览水印效果 需求变更用户下载 pdf 也要加载水印 方案 方案 1. 后端 在 pdf 上传时候水印 方案 2. 后端 pdf 增加水印 方案 3. 前端在文件上传时候增加水印 方案 4. 前端在文件下载的时候增加水印 现在场景...","link":"","photos":[],"count_time":{"symbolsCount":"4.8k","symbolsTime":"4 mins."},"categories":[{"name":"PDF","slug":"PDF","count":1,"path":"api/categories/PDF.json"}],"tags":[{"name":"PDF","slug":"PDF","count":1,"path":"api/tags/PDF.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A1%B5%E9%9D%A2%E6%B8%B2%E6%9F%93\"><span class=\"toc-text\">页面渲染</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%9C%80%E6%B1%82%E5%8F%98%E6%9B%B4\"><span class=\"toc-text\">需求变更</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%B9%E6%A1%88\"><span class=\"toc-text\">方案</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%89%8D%E7%AB%AF%E5%AE%9E%E7%8E%B0%E6%96%B9%E5%BC%8F\"><span class=\"toc-text\">前端实现方式</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%88%E6%9E%9C%E5%9B%BE\"><span class=\"toc-text\">效果图</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AD%97%E4%BD%93%E9%80%89%E7%94%A8\"><span class=\"toc-text\">字体选用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5\"><span class=\"toc-text\">参考链接</span></a></li></ol>","author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"眼中有光，心中有梦，脚下有路","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Graphql","uid":"b629fbc3034174b0bda5cbb3b1a0e487","slug":"2022-11-03graphql","date":"2022-11-03T09:51:55.000Z","updated":"2022-11-04T12:06:31.430Z","comments":true,"path":"api/articles/2022-11-03graphql.json","keywords":null,"cover":[],"text":"文章背景中文官网废话太多，语句也有些不通顺的地方 Graphql 是什么GraphQL 全称叫 Graph Query Language，官方宣传语是“为你的 API 量身定制的查询语言”。 用传统的方式来解释就是：相当于将你所有后端 API 组成的集合看成一个数据库，用户终端发...","link":"","photos":[],"count_time":{"symbolsCount":"17k","symbolsTime":"15 mins."},"categories":[{"name":"Graphql","slug":"Graphql","count":1,"path":"api/categories/Graphql.json"}],"tags":[{"name":"Graphql","slug":"Graphql","count":1,"path":"api/tags/Graphql.json"}],"author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"眼中有光，心中有梦，脚下有路","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}},"next_post":{"title":"云原生 了解elastic","uid":"be1feee4446fde975b05a1617d4cbc8b","slug":"2022-11-02elastic","date":"2022-11-02T01:57:44.000Z","updated":"2022-11-14T13:06:21.796Z","comments":true,"path":"api/articles/2022-11-02elastic.json","keywords":null,"cover":null,"text":"背景很有意思ElasticSearch 的由来 elasticElasticSearch 实时搜索、分析引擎 ElasticSearch 基础入门篇 Elasticsearch 中文文档 7.3 Elasticsearch Guide: 8.5 在做 wiki 全文检索的时候，用...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"云原生","slug":"云原生","count":5,"path":"api/categories/云原生.json"}],"tags":[{"name":"云原生","slug":"云原生","count":5,"path":"api/tags/云原生.json"}],"author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"眼中有光，心中有梦，脚下有路","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}}}