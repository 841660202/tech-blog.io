{"title":"修补node_modules下源码","uid":"c3d5408da05b02828c848a49ca35cf59","slug":"2022-06-09patch-package","date":"2022-06-09T01:51:48.000Z","updated":"2022-09-16T13:54:56.137Z","comments":true,"path":"api/articles/2022-06-09patch-package.json","keywords":null,"cover":"http://t-blog-images.aijs.top/img/20220609160539.webp","content":"<h2 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h2><p>之前在简书上记录过，没迁移简书文章，所以重新记录</p>\n<p>由于<code>hexo-theme-aurora</code>代码配色不是很友好，需要自定义配色，又不想改其 github 上代码，直接处理<code>node_modules</code>下的配色文件</p>\n<h2 id=\"安装-patch-package\"><a href=\"#安装-patch-package\" class=\"headerlink\" title=\"安装 patch-package\"></a>安装 patch-package</h2><p>patch-package 包可以通过 npm 进行安装。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">npm i patch-package --save-dev</code></pre>\n\n<p>或者也可以通过 yarn 进行安装。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yarn add patch-package -D</code></pre>\n\n<h2 id=\"修改包代码\"><a href=\"#修改包代码\" class=\"headerlink\" title=\"修改包代码\"></a>修改包代码</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">&#x2F;node_modules&#x2F;某包名下，按需修改</code></pre>\n\n<h2 id=\"创建补丁\"><a href=\"#创建补丁\" class=\"headerlink\" title=\"创建补丁\"></a>创建补丁</h2><p>在修改依赖包内容后，就可以运行 patch-package 创建 patch 文件了。</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">yarn patch-package 包名 # 使用 yarn</code></pre>\n\n<p>运行后通常会在项目根目录下的 patches 目录中创建一个名为 包名+version.patch 的文件。将该 patch 文件提交至版本控制中，即可在之后应用该补丁了。<br>例如：</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">👑 ~&#x2F;Desktop&#x2F;other&#x2F;blog&#x2F;technology-blog git:(main) ✗ $ yarn patch-package hexo-theme-aurora\nyarn run v1.4.0\n$ &#x2F;Users&#x2F;haotian&#x2F;Desktop&#x2F;other&#x2F;blog&#x2F;technology-blog&#x2F;node_modules&#x2F;.bin&#x2F;patch-package hexo-theme-aurora\npatch-package 6.4.7\n• Creating temporary folder\n• Installing hexo-theme-aurora@1.5.5 with yarn\n• Diffing your files with clean files\n✔ Created file patches&#x2F;hexo-theme-aurora+1.5.5.patch\n\n💡 hexo-theme-aurora is on GitHub! To draft an issue based on your patch run\n\n    yarn patch-package hexo-theme-aurora --create-issue\n\n✨  Done in 5.48s.</code></pre>\n\n<h2 id=\"配置-npm-脚本钩子\"><a href=\"#配置-npm-脚本钩子\" class=\"headerlink\" title=\"配置 npm 脚本钩子\"></a>配置 npm 脚本钩子</h2><p>完成上述操作后，最后还需要修改 package.json 的内容，在 scripts 中加入”postinstall”: “patch-package”。</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">&quot;scripts&quot;: &#123;\n  &quot;postinstall&quot;: &quot;patch-package&quot;\n&#125;</code></pre>\n\n<h2 id=\"验证\"><a href=\"#验证\" class=\"headerlink\" title=\"验证\"></a>验证</h2><h2 id=\"清理-node-modules\"><a href=\"#清理-node-modules\" class=\"headerlink\" title=\"清理 node_modules\"></a>清理 node_modules</h2><p><strong>项目根目录</strong>别搞错了,简单粗暴点，直接全清掉</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">rm -rf node_modules &amp;&amp; yarn</code></pre>\n\n<h2 id=\"运行结果\"><a href=\"#运行结果\" class=\"headerlink\" title=\"运行结果\"></a>运行结果</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">👑 ~&#x2F;Desktop&#x2F;other&#x2F;blog&#x2F;technology-blog git:(main) ✗ $ yarn\nyarn install v1.4.0\n[1&#x2F;4] 🔍  Resolving packages...\n[2&#x2F;4] 🚚  Fetching packages...\n[3&#x2F;4] 🔗  Linking dependencies...\nwarning &quot;hexo &gt; nunjucks@3.2.3&quot; has unmet peer dependency &quot;chokidar@^3.3.0&quot;.\nwarning &quot;hexo-browsersync &gt; browser-sync &gt; socket.io &gt; engine.io &gt; ws@8.2.3&quot; has unmet peer dependency &quot;bufferutil@^4.0.1&quot;.\nwarning &quot;hexo-browsersync &gt; browser-sync &gt; socket.io &gt; engine.io &gt; ws@8.2.3&quot; has unmet peer dependency &quot;utf-8-validate@^5.0.2&quot;.\nwarning &quot;hexo-renderer-marked &gt; jsdom@19.0.0&quot; has unmet peer dependency &quot;canvas@^2.5.0&quot;.\nwarning &quot;hexo-renderer-marked &gt; jsdom &gt; ws@8.5.0&quot; has unmet peer dependency &quot;bufferutil@^4.0.1&quot;.\nwarning &quot;hexo-renderer-marked &gt; jsdom &gt; ws@8.5.0&quot; has unmet peer dependency &quot;utf-8-validate@^5.0.2&quot;.\nwarning &quot;hexo-theme-aurora &gt; pinia@2.0.13&quot; has unmet peer dependency &quot;@vue&#x2F;composition-api@^1.4.0&quot;.\nwarning &quot;hexo-theme-aurora &gt; pinia@2.0.13&quot; has unmet peer dependency &quot;typescript@&gt;&#x3D;4.4.4&quot;.\nwarning &quot;hexo-theme-aurora &gt; pinia &gt; vue-demi@0.12.5&quot; has unmet peer dependency &quot;@vue&#x2F;composition-api@^1.0.0-rc.1&quot;.\n[4&#x2F;4] 📃  Building fresh packages...\n$ yarn patch-package # 看这里，在运行修补\nyarn run v1.4.0\n$ &#x2F;Users&#x2F;haotian&#x2F;Desktop&#x2F;other&#x2F;blog&#x2F;technology-blog&#x2F;node_modules&#x2F;.bin&#x2F;patch-package\npatch-package 6.4.7\nApplying patches...\nhexo-theme-aurora@1.5.5 ✔\n✨  Done in 1.00s.\n✨  Done in 13.93s.\n</code></pre>\n\n<h2 id=\"提交代码\"><a href=\"#提交代码\" class=\"headerlink\" title=\"提交代码\"></a>提交代码</h2><p>将 patches 提交到代码仓库，以后在其他机器上，直接安装依赖包即可。</p>\n<h2 id=\"注意事项\"><a href=\"#注意事项\" class=\"headerlink\" title=\"注意事项\"></a>注意事项</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">npx patch-package hexo-theme-aurora</code></pre>\n\n<p>这个命令使用 npm 运行的，可能不会成功，使用<code>yarn patch-package hexo-theme-aurora</code></p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">👑 ~&#x2F;Desktop&#x2F;other&#x2F;blog&#x2F;technology-blog git:(main) ✗ $ npx patch-package  hexo-theme-aurora\npatch-package 6.4.7\n• Creating temporary folder\n• Installing hexo-theme-aurora@1.5.5 with yarn\nwarning package.json: No license field\nwarning No license field\nerror An unexpected error occurred: &quot;https:&#x2F;&#x2F;registry.npmjs.org&#x2F;axios: ETIMEDOUT&quot;.\nError: https:&#x2F;&#x2F;registry.npmjs.org&#x2F;core-js: ETIMEDOUT\n    at Timeout._onTimeout (&#x2F;usr&#x2F;local&#x2F;lib&#x2F;node_modules&#x2F;yarn&#x2F;lib&#x2F;cli.js:132130:19)\n    at listOnTimeout (node:internal&#x2F;timers:557:17)</code></pre>\n\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><p><a href=\"https://github.com/auroral-ui/hexo-theme-aurora/issues/168\">hexo-theme-aurora&#x2F;issues&#x2F;168</a><br><a href=\"https://www.npmjs.com/package/patch-package\">patch-package</a></p>\n","text":"背景之前在简书上记录过，没迁移简书文章，所以重新记录 由于hexo-theme-aurora代码配色不是很友好，需要自定义配色，又不想改其 github 上代码，直接处理node_modules下的配色文件 安装 patch-packagepatch-package 包可以通过 ...","link":"","photos":[],"count_time":{"symbolsCount":"3.9k","symbolsTime":"4 mins."},"categories":[{"name":"工具","slug":"工具","count":26,"path":"api/categories/工具.json"}],"tags":[{"name":"npm","slug":"npm","count":5,"path":"api/tags/npm.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%83%8C%E6%99%AF\"><span class=\"toc-text\">背景</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85-patch-package\"><span class=\"toc-text\">安装 patch-package</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BF%AE%E6%94%B9%E5%8C%85%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">修改包代码</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%88%9B%E5%BB%BA%E8%A1%A5%E4%B8%81\"><span class=\"toc-text\">创建补丁</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AE-npm-%E8%84%9A%E6%9C%AC%E9%92%A9%E5%AD%90\"><span class=\"toc-text\">配置 npm 脚本钩子</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%AA%8C%E8%AF%81\"><span class=\"toc-text\">验证</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B8%85%E7%90%86-node-modules\"><span class=\"toc-text\">清理 node_modules</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%BF%90%E8%A1%8C%E7%BB%93%E6%9E%9C\"><span class=\"toc-text\">运行结果</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%8F%90%E4%BA%A4%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">提交代码</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9\"><span class=\"toc-text\">注意事项</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5\"><span class=\"toc-text\">参考链接</span></a></li></ol>","author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>举手向苍穹，并非一定要摘到星月</p><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"前端基础-劫持(函数/数据)","uid":"3cfe5c81c087dc101db23ece3358d249","slug":"2022-06-10js-数据劫持","date":"2022-06-10T07:05:21.000Z","updated":"2023-02-20T21:20:56.461Z","comments":true,"path":"api/articles/2022-06-10js-数据劫持.json","keywords":null,"cover":"https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fres.cloudinary.com%2Fcitiar%2Fimage%2Fupload%2Fv1611373461%2Fucamc%2Fcommon%2Fthumb_5x_Javascript-O.png&refer=http%3A%2F%2Fres.cloudinary.com&app=2002&size=f9999,10000&q=a80&n=0&g=0n&fmt=auto?sec=1657437058&t=2169b1ec59622a8e20039841292e4d8b","text":"函数劫持函数劫持，在一个函数运行之前就把它劫持下来，添加我们想要的功能。 在函数运行之前，我们可以改变函数的参数，或者改变函数的返回值。 JavaScript 中的函数劫持是一个增强原有函数的技巧，一般我们用来对原有的 JavaScript 全局方法做一些能力的增强。 函数劫持原...","link":"","photos":[],"count_time":{"symbolsCount":"4.1k","symbolsTime":"4 mins."},"categories":[{"name":"前端基础","slug":"前端基础","count":54,"path":"api/categories/前端基础.json"}],"tags":[{"name":"前端基础","slug":"前端基础","count":56,"path":"api/tags/前端基础.json"},{"name":"面试","slug":"面试","count":20,"path":"api/tags/面试.json"}],"author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>举手向苍穹，并非一定要摘到星月</p><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}},"next_post":{"title":"10.Typescript 工具类型","uid":"effcb24e596d83e2df5140f38213b656","slug":"2022-06-09ts-util-type","date":"2022-06-08T14:49:28.000Z","updated":"2023-07-31T06:42:49.721Z","comments":true,"path":"api/articles/2022-06-09ts-util-type.json","keywords":null,"cover":"https://img0.baidu.com/it/u=86492913,3057347241&fm=253&fmt=auto&app=138&f=JPEG?w=499&h=208","text":"TypeScript provides several utility types to facilitate common type transformations. These utilities are available globally.Typescript提供了一些帮...","link":"","photos":[],"count_time":{"symbolsCount":"19k","symbolsTime":"17 mins."},"categories":[{"name":"TypeScript","slug":"TypeScript","count":13,"path":"api/categories/TypeScript.json"}],"tags":[{"name":"TypeScript","slug":"TypeScript","count":14,"path":"api/tags/TypeScript.json"}],"author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>举手向苍穹，并非一定要摘到星月</p><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}}}