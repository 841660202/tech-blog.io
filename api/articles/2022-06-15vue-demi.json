{"title":"pinia中的vue-demi源码","uid":"a2db94377c4f0ef1a22f18cb45800737","slug":"2022-06-15vue-demi","date":"2022-06-15T01:46:31.000Z","updated":"2022-09-16T13:54:56.144Z","comments":true,"path":"api/articles/2022-06-15vue-demi.json","keywords":null,"cover":null,"content":"<h2 id=\"pinia-中的-vue-demi\"><a href=\"#pinia-中的-vue-demi\" class=\"headerlink\" title=\"pinia 中的 vue-demi\"></a>pinia 中的 vue-demi</h2><p>Vue Demi 是一个让你可以开发同时支持 Vue2 和 3 的通用的 Vue 库的开发工具，而无需担心用户安装的版本。</p>\n<p>当用户要创建一个 Vue 插件&#x2F;库时，只需将 vue-demi 安装为依赖项并将其导入，然后像之前一样发布你的插件&#x2F;库，用户的软件包就会变得通用。</p>\n<p>Vue Demi 使用了 NPM 钩子 postinstall。当用户安装所有包后，脚本将开始检查已安装的 Vue 版本，并根据 Vue 版本返回对应的代码。在使用 Vue 2 时，如果没有安装@vue&#x2F;composition-api，它也会自动安装.</p>\n<p><strong>以前</strong></p>\n<p>以前，要创建支持两个目标版本的 Vue 库，我们会使用不同的分支来分离对每个版本的支持。对于现有库来说，这是一个很好的方法，因为它们的代码库通常更稳定。<br>缺点是，你需要维护两个代码库，这让你的工作量翻倍。对于想要支持 Vue 的两个目标版本的新 Vue 库来说，我不推荐这种方法。实施两次功能请求和错误修复根本就不理想。</p>\n<p><strong>现在</strong></p>\n<p>这就是 Vue Demi 的用武之地。Vue Demi 通过为两个目标版本提供通用支持来解决这个问题，这意味着您只需构建一次即可获得两个目标版本的所有优点，从而获得两全其美的优势。</p>\n<h2 id=\"核心代码目录\"><a href=\"#核心代码目录\" class=\"headerlink\" title=\"核心代码目录\"></a>核心代码目录</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">├── lib\n│   ├── index.cjs\n│   ├── index.d.ts\n│   ├── index.iife.js\n│   ├── index.mjs\n│   ├── v2\n│   │   ├── index.cjs\n│   │   ├── index.d.ts\n│   │   └── index.mjs\n│   ├── v2.7\n│   │   ├── index.cjs\n│   │   ├── index.d.ts\n│   │   └── index.mjs\n│   └── v3\n│       ├── index.cjs\n│       ├── index.d.ts\n│       └── index.mjs\n├── package.json\n└── scripts\n    ├── postinstall.js\n    ├── switch-cli.js\n    └── utils.js</code></pre>\n\n<h2 id=\"核心代码\"><a href=\"#核心代码\" class=\"headerlink\" title=\"核心代码\"></a>核心代码</h2><p><strong>package.json</strong></p>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n  &quot;name&quot;: &quot;vue-demi&quot;,\n  &quot;version&quot;: &quot;0.13.1&quot;,\n\n  &quot;scripts&quot;: &#123;\n    &quot;postinstall&quot;: &quot;node .&#x2F;scripts&#x2F;postinstall.js&quot;, &#x2F;&#x2F; 钩子npm install结束后会执行\n    &quot;release&quot;: &quot;npx bumpp --tag --commit --push &amp;&amp; npm publish&quot;\n  &#125;,\n  &quot;peerDependencies&quot;: &#123;\n    &quot;@vue&#x2F;composition-api&quot;: &quot;^1.0.0-rc.1&quot;,\n    &quot;vue&quot;: &quot;^3.0.0-0 || ^2.6.0&quot;\n  &#125;,\n  &quot;peerDependenciesMeta&quot;: &#123;\n    &quot;@vue&#x2F;composition-api&quot;: &#123;\n      &quot;optional&quot;: true\n    &#125;\n  &#125;\n&#125;</code></pre>\n\n<p><strong>scripts&#x2F;postinstall.js</strong></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">const &#123; switchVersion, loadModule &#125; &#x3D; require(&quot;.&#x2F;utils&quot;);\n\nconst Vue &#x3D; loadModule(&quot;vue&quot;); &#x2F;&#x2F; 加载vue, 通过Vue.version获取版本\n\nif (!Vue || typeof Vue.version !&#x3D;&#x3D; &quot;string&quot;) &#123;\n  console.warn(\n    &#39;[vue-demi] Vue is not found. Please run &quot;npm install vue&quot; to install.&#39;\n  );\n&#125; else if (Vue.version.startsWith(&quot;2.7.&quot;)) &#123;\n  switchVersion(2.7); &#x2F;&#x2F; 切换到2.7版本，拷贝内容到lib&#x2F;v2.7目录\n&#125; else if (Vue.version.startsWith(&quot;2.&quot;)) &#123;\n  switchVersion(2); &#x2F;&#x2F; 切换到2.7版本，拷贝内容到lib&#x2F;v2目录，并执行安装@vue&#x2F;composition-api，更新相关内容,执行v2api更新\n&#125; else if (Vue.version.startsWith(&quot;3.&quot;)) &#123;\n  &#x2F;&#x2F; 切换到3.0版本，拷贝内容到lib&#x2F;v3目录\n  switchVersion(3);\n&#125; else &#123;\n  console.warn(&#96;[vue-demi] Vue version v$&#123;Vue.version&#125; is not suppported.&#96;);\n&#125;</code></pre>\n\n<p><strong>loadModule</strong>与<strong>switchVersion</strong></p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">const fs &#x3D; require(&quot;fs&quot;);\nconst path &#x3D; require(&quot;path&quot;);\n\nconst dir &#x3D; path.resolve(__dirname, &quot;..&quot;, &quot;lib&quot;);\n&#x2F;&#x2F; loadModule\nfunction loadModule(name) &#123;\n  try &#123;\n    return require(name);\n  &#125; catch (e) &#123;\n    return undefined;\n  &#125;\n&#125;\n\nfunction copy(name, version, vue) &#123;\n  vue &#x3D; vue || &quot;vue&quot;;\n  const src &#x3D; path.join(dir, &#96;v$&#123;version&#125;&#96;, name);\n  const dest &#x3D; path.join(dir, name);\n  let content &#x3D; fs.readFileSync(src, &quot;utf-8&quot;);\n  content &#x3D; content.replace(&#x2F;&#39;vue&#39;&#x2F;g, &#96;&#39;$&#123;vue&#125;&#39;&#96;);\n  &#x2F;&#x2F; unlink for pnpm, #92\n  try &#123;\n    fs.unlinkSync(dest); &#x2F;&#x2F; 删除旧的文件\n  &#125; catch (error) &#123;&#125;\n  &#x2F;&#x2F; 写入新的文件\n  fs.writeFileSync(dest, content, &quot;utf-8&quot;);\n&#125;\n&#x2F;&#x2F; 更新vue2api\nfunction updateVue2API() &#123;\n  const ignoreList &#x3D; [&quot;version&quot;, &quot;default&quot;];\n  const VCA &#x3D; loadModule(&quot;@vue&#x2F;composition-api&quot;);\n  if (!VCA) &#123;\n    console.warn(\n      &#39;[vue-demi] Composition API plugin is not found. Please run &quot;npm install @vue&#x2F;composition-api&quot; to install.&#39;\n    );\n    return;\n  &#125;\n\n  const exports &#x3D; Object.keys(VCA).filter((i) &#x3D;&gt; !ignoreList.includes(i));\n\n  const esmPath &#x3D; path.join(dir, &quot;index.mjs&quot;);\n  let content &#x3D; fs.readFileSync(esmPath, &quot;utf-8&quot;);\n  &#x2F;&#x2F;源码仓库结果 @link https:&#x2F;&#x2F;github.com&#x2F;vueuse&#x2F;vue-demi&#x2F;blob&#x2F;813a8dadf3a8f12b3b4a1369ff2b8da6c813d97e&#x2F;lib&#x2F;v2&#x2F;index.mjs#L2\n  content &#x3D; content.replace(\n    &#x2F;\\&#x2F;\\*\\*VCA-EXPORTS\\*\\*\\&#x2F;[\\s\\S]+\\&#x2F;\\*\\*VCA-EXPORTS\\*\\*\\&#x2F;&#x2F;m,\n    &#96;&#x2F;**VCA-EXPORTS**&#x2F;\nexport &#123; $&#123;exports.join(\n      &quot;, &quot;\n    )&#125; &#125; from &#39;@vue&#x2F;composition-api&#x2F;dist&#x2F;vue-composition-api.mjs&#39;\n&#x2F;**VCA-EXPORTS**&#x2F;&#96;\n  );\n\n  fs.writeFileSync(esmPath, content, &quot;utf-8&quot;);\n&#125;\n&#x2F;&#x2F; switchVersion 拷贝入口到对应的版本目录\nfunction switchVersion(version, vue) &#123;\n  copy(&quot;index.cjs&quot;, version, vue);\n  copy(&quot;index.mjs&quot;, version, vue);\n  copy(&quot;index.d.ts&quot;, version, vue);\n  &#x2F;&#x2F; 如果是v2还需要更新api\n  if (version &#x3D;&#x3D;&#x3D; 2) updateVue2API();\n&#125;\n\nmodule.exports.loadModule &#x3D; loadModule;\nmodule.exports.switchVersion &#x3D; switchVersion;</code></pre>\n\n<h2 id=\"再来看下暴露的-api\"><a href=\"#再来看下暴露的-api\" class=\"headerlink\" title=\"再来看下暴露的 api\"></a>再来看下暴露的 api</h2><p><strong>pinia 中源码引用</strong></p>\n<p><strong>pinia&#x2F;packages&#x2F;pinia&#x2F;src&#x2F;storeToRefs.ts</strong></p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">import &#123;\n  isReactive,\n  isRef,\n  isVue2,\n  toRaw,\n  toRef,\n  ToRefs,\n  toRefs,\n&#125; from &quot;vue-demi&quot;;</code></pre>\n\n<p><strong>pinia&#x2F;packages&#x2F;pinia&#x2F;src&#x2F;rootStore.ts</strong></p>\n<pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">import &#123;\n  App,\n  EffectScope,\n  getCurrentInstance,\n  inject,\n  InjectionKey,\n  Ref,\n&#125; from &quot;vue-demi&quot;;</code></pre>\n\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; @link https:&#x2F;&#x2F;github.com&#x2F;vueuse&#x2F;vue-demi&#x2F;blob&#x2F;813a8dadf3a8f12b3b4a1369ff2b8da6c813d97e&#x2F;lib&#x2F;index.mjs#L27\nexport * from &quot;vue&quot;;\n&#x2F;&#x2F; 除了暴露版本vue-demi产生的api还将vue的api也暴露了出来，在开发第三方包的时候，可以按照不同的版本，调用不同的api\nexport &#123; Vue, Vue2, isVue2, isVue3, install &#125;;</code></pre>\n\n<p>由上面的源码<code>export * from &quot;vue&quot;;</code>,我们可以从vue-demi中获取所有的api，这也是pinia中频繁使用<code>vue-demi</code>，却不见<code>vue</code>的原因</p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><p><a href=\"https://blog.csdn.net/qq_40021015/article/details/123658502\" target=\"_blank\" >vue Demi 同时支持 vue2 和 vue3</a><br><a href=\"https://madewith.cn/502\" target=\"_blank\" >https://madewith.cn/502</a><br><a href=\"https://github.com/vueuse/vue-demi\" target=\"_blank\" >vue-demi</a></p>\n","text":"pinia 中的 vue-demiVue Demi 是一个让你可以开发同时支持 Vue2 和 3 的通用的 Vue 库的开发工具，而无需担心用户安装的版本。 当用户要创建一个 Vue 插件&#x2F;库时，只需将 vue-demi 安装为依赖项并将其导入，然后像之前一样发布你的插...","link":"","photos":[],"count_time":{"symbolsCount":"6k","symbolsTime":"5 mins."},"categories":[{"name":"vue","slug":"vue","count":13,"path":"api/categories/vue.json"}],"tags":[{"name":"源码","slug":"源码","count":14,"path":"api/tags/源码.json"},{"name":"vue","slug":"vue","count":13,"path":"api/tags/vue.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#pinia-%E4%B8%AD%E7%9A%84-vue-demi\"><span class=\"toc-text\">pinia 中的 vue-demi</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A0%B8%E5%BF%83%E4%BB%A3%E7%A0%81%E7%9B%AE%E5%BD%95\"><span class=\"toc-text\">核心代码目录</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A0%B8%E5%BF%83%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">核心代码</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%86%8D%E6%9D%A5%E7%9C%8B%E4%B8%8B%E6%9A%B4%E9%9C%B2%E7%9A%84-api\"><span class=\"toc-text\">再来看下暴露的 api</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5\"><span class=\"toc-text\">参考链接</span></a></li></ol>","author":{"name":"陈哈喽","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"丷为中华之崛起而学习丷","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"pinia源码","uid":"5a6ede004598b1b2a7c46059e37dbd43","slug":"2022-06-14vue-pinia","date":"2022-06-15T02:22:49.000Z","updated":"2022-09-16T13:54:56.143Z","comments":true,"path":"api/articles/2022-06-14vue-pinia.json","keywords":null,"cover":null,"text":"背景了解了 playground，现在我们来看看 pinia 源码，那些 api 和方法。这么用做了什么事情 this.$patchplaygound defineStore 第一个参数是唯一字符串，用来标识 store，第二个参数是一个函数，返回一个 store 对象 play...","link":"","photos":[],"count_time":{"symbolsCount":"1.1k","symbolsTime":"1 mins."},"categories":[{"name":"vue","slug":"vue","count":13,"path":"api/categories/vue.json"}],"tags":[{"name":"源码","slug":"源码","count":14,"path":"api/tags/源码.json"},{"name":"vue","slug":"vue","count":13,"path":"api/tags/vue.json"}],"author":{"name":"陈哈喽","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"丷为中华之崛起而学习丷","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}},"next_post":{"title":"pinia源码分析 playground","uid":"cb01f973e2d0f78b875308680dd29577","slug":"2022-06-13vue-pinia","date":"2022-06-13T07:27:26.000Z","updated":"2022-09-16T13:54:56.142Z","comments":true,"path":"api/articles/2022-06-13vue-pinia.json","keywords":null,"cover":"http://t-blog-images.aijs.top/img/20220610172420.webp","text":"playground 运行是一个标准的 vue 项目 package.json&quot;scripts&quot;: &#123; &quot;release&quot;: &quot;node scripts&#x2F;release.mjs&quot;, &quot;siz...","link":"","photos":[],"count_time":{"symbolsCount":"25k","symbolsTime":"23 mins."},"categories":[{"name":"vue","slug":"vue","count":13,"path":"api/categories/vue.json"}],"tags":[{"name":"源码","slug":"源码","count":14,"path":"api/tags/源码.json"},{"name":"vue","slug":"vue","count":13,"path":"api/tags/vue.json"}],"author":{"name":"陈哈喽","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"丷为中华之崛起而学习丷","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}}}