{"title":"云原生 给自己科普 k8s","uid":"492312f2926ba8445ea0e3998e226f61","slug":"2022-11-05k8s","date":"2022-11-05T06:50:49.000Z","updated":"2022-12-22T13:36:21.795Z","comments":true,"path":"api/articles/2022-11-05k8s.json","keywords":null,"cover":"https://img1.baidu.com/it/u=2053451129,2889213081&fm=253&fmt=auto&app=138&f=PNG?w=640&h=320","content":"<h2 id=\"满脑子问题\"><a href=\"#满脑子问题\" class=\"headerlink\" title=\"满脑子问题\"></a>满脑子问题</h2><h2 id=\"k8s-是什么\"><a href=\"#k8s-是什么\" class=\"headerlink\" title=\"k8s 是什么\"></a>k8s 是什么</h2><h2 id=\"k8s-如何安装\"><a href=\"#k8s-如何安装\" class=\"headerlink\" title=\"k8s 如何安装\"></a>k8s 如何安装</h2><h2 id=\"k8s-为什么最少-3-个-master\"><a href=\"#k8s-为什么最少-3-个-master\" class=\"headerlink\" title=\"k8s 为什么最少 3 个 master\"></a>k8s 为什么最少 3 个 master</h2><h2 id=\"k8s-如何控制-node\"><a href=\"#k8s-如何控制-node\" class=\"headerlink\" title=\"k8s 如何控制 node\"></a>k8s 如何控制 node</h2><h2 id=\"如何进行-iterm-多服务器操作\"><a href=\"#如何进行-iterm-多服务器操作\" class=\"headerlink\" title=\"如何进行 iterm 多服务器操作\"></a>如何进行 iterm 多服务器操作</h2><h2 id=\"scp-命令如何使用？有教程吗？\"><a href=\"#scp-命令如何使用？有教程吗？\" class=\"headerlink\" title=\"scp 命令如何使用？有教程吗？\"></a>scp 命令如何使用？有教程吗？</h2><h2 id=\"sz-命令\"><a href=\"#sz-命令\" class=\"headerlink\" title=\"sz 命令\"></a>sz 命令</h2><h2 id=\"如何安装环境\"><a href=\"#如何安装环境\" class=\"headerlink\" title=\"如何安装环境\"></a>如何安装环境</h2><h2 id=\"为什么要配置-host\"><a href=\"#为什么要配置-host\" class=\"headerlink\" title=\"为什么要配置 host\"></a>为什么要配置 host</h2><h2 id=\"如何安装-yuml\"><a href=\"#如何安装-yuml\" class=\"headerlink\" title=\"如何安装 yuml\"></a>如何安装 yuml</h2><h2 id=\"kind-种类有几个？应该用哪个？\"><a href=\"#kind-种类有几个？应该用哪个？\" class=\"headerlink\" title=\"kind 种类有几个？应该用哪个？\"></a>kind 种类有几个？应该用哪个？</h2><h2 id=\"思维导图\"><a href=\"#思维导图\" class=\"headerlink\" title=\"思维导图\"></a>思维导图</h2><h3 id=\"爬取博客园标签脚本\"><a href=\"#爬取博客园标签脚本\" class=\"headerlink\" title=\"爬取博客园标签脚本\"></a>爬取博客园标签脚本</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">var data &#x3D; &quot;&quot;;\nArray.from(document.getElementsByClassName(&quot;PostList&quot;))\n  .sort(() &#x3D;&gt; -1)\n  .forEach((li) &#x3D;&gt; &#123;\n    let linkdom &#x3D; li.children[0].children[0];\n    let text &#x3D; linkdom.children[0].innerText;\n    const lk &#x3D; &#96;&lt;a href&#x3D;&quot;$&#123;linkdom.href&#125;&quot; target&#x3D;&quot;_blank&quot; &gt;$&#123;text&#125;&lt;&#x2F;a&gt;\\n&#96;;\n    data +&#x3D; lk;\n  &#125;);\nconsole.log(data);\ncopy(data);</code></pre>\n\n<img src=\"http://t-blog-images.aijs.top/img/202211081640635.webp\" />\n\n<p><a href=\"https://www.cnblogs.com/jichuang/p/14160829.html\" target=\"_blank\" >（一）Kubernetes 概述</a></p>\n<p><a href=\"https://www.cnblogs.com/jichuang/p/14161119.html\" target=\"_blank\" >（二）Kubernetes 组件说明</a></p>\n<p><a href=\"https://www.cnblogs.com/jichuang/p/14170101.html\" target=\"_blank\" >（三）Kubernetes-Pod 概念</a></p>\n<p><a href=\"https://www.cnblogs.com/jichuang/p/14175528.html\" target=\"_blank\" >（四）Kubernetes 网络通讯方式</a></p>\n<p><a href=\"https://www.cnblogs.com/jichuang/p/14193972.html\" target=\"_blank\" >（五）Kubernetes 集群安装</a></p>\n<p><a href=\"https://www.cnblogs.com/jichuang/p/14349617.html\" target=\"_blank\" >（六）Kubernetes 集群安装-配置私有仓库</a></p>\n<p><a href=\"https://www.cnblogs.com/jichuang/p/14399877.html\" target=\"_blank\" >（七）Kubernetes 资源清单</a></p>\n<p><a href=\"https://www.cnblogs.com/jichuang/p/14519050.html\" target=\"_blank\" >（八）Kubernetes 资源清单-探针</a></p>\n<p><a href=\"https://www.cnblogs.com/jichuang/p/14673748.html\" target=\"_blank\" >（九）Kubernetes 资源清单-start、stop、相位</a></p>\n<p><a href=\"https://www.cnblogs.com/jichuang/p/15843533.html\" target=\"_blank\" >（十）Kubernetes-资源控制器-控制器说明</a></p>\n<p><a href=\"https://www.cnblogs.com/jichuang/p/15880102.html\" target=\"_blank\" >（十一）Kubernetes-Service</a></p>\n<h2 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h2><p><a href=\"http://t.zoukankan.com/lexiaofei-p-7778360.html\" target=\"_blank\" >kubernetes 的主从架构</a></p>\n<h2 id=\"K8S-文章收录\"><a href=\"#K8S-文章收录\" class=\"headerlink\" title=\"K8S 文章收录\"></a>K8S 文章收录</h2><p><strong>此系列文章，是我最近三天看到的最好的文章</strong></p>\n<p><a href=https://juejin.cn/post/6950166816182239246 target=\"_blank\" >1. 《k8s 集群搭建》不要让贫穷扼杀了你学 k8s 的兴趣！</a><br><a href=https://juejin.cn/post/6954904347125743624 target=\"_blank\" >2. 万字警告 - k8s 入门，理应 Pod 先行！</a><br><a href=https://juejin.cn/post/6961209578755194916 target=\"_blank\" >3. 《Kubernetes》- 认识下 Pod 的管理者？</a><br><a href=https://juejin.cn/post/6966031669773991944 target=\"_blank\" >4. 后端学运维- k8s 之数据存储</a><br><a href=https://juejin.cn/post/6970622834317983775 target=\"_blank\" >5. 《Kubernetes》，你需要掌握的 Service 和 Ingress</a></p>\n<p><a href=\"https://blog.csdn.net/bearstarx/category_9759043.html\" target=\"_blank\" >https://blog.csdn.net/bearstarx/category_9759043.html</a></p>\n<p><a href=\"https://blog.csdn.net/BearStarX/article/details/104559510\" target=\"_blank\">Kubernetes 入门篇(一)：Kubernetes 概述</a></p>\n<p><a href=\"https://blog.csdn.net/BearStarX/article/details/104569680\" target=\"_blank\">Kubernetes 入门篇(二)：Kubernetes 资源对象</a></p>\n<p><a href=\"https://blog.csdn.net/BearStarX/article/details/104845277\" target=\"_blank\">Kubernetes 虚拟机搭建 (一) : Master 节点与 Node 节点整体配置</a></p>\n<p><a href=\"https://blog.csdn.net/BearStarX/article/details/104849991\" target=\"_blank\">Kubenetes 虚拟机搭建 (二) : Master 节点专属配置</a></p>\n<p><a href=\"https://blog.csdn.net/BearStarX/article/details/104853610\" target=\"_blank\">Kubenetes 虚拟机搭建 (三) : Node 节点注册配置</a></p>\n<p><a href=\"https://blog.csdn.net/BearStarX/article/details/104853698\" target=\"_blank\">Kubenetes 虚拟机搭建 (四) : Kubernetes-Dashboard 平台部署</a></p>\n<p><a href=\"https://blog.csdn.net/BearStarX/article/details/104861228\" target=\"_blank\">Kubernetes 入门篇 (三) : kubectl 常用运维命令应用</a></p>\n<p><a href=\"https://blog.csdn.net/BearStarX/article/details/104863301\" target=\"_blank\">Kubernetes 入门篇 (四) : 通过 yaml 创建资源对象</a></p>\n<p><a href=\"https://blog.csdn.net/BearStarX/article/details/104873617\" target=\"_blank\">Kubernetes 入门篇 (五) : Pod 生命周期与创建过程</a></p>\n<p><a href=\"https://blog.csdn.net/BearStarX/article/details/104874476\" target=\"_blank\">Kubernetes 入门篇 (六) : Kubernetes 设计理念</a></p>\n<p><a href=\"https://blog.csdn.net/BearStarX/article/details/104876327\" target=\"_blank\">Kubernetes 入门篇 (七) : Kubernetes 核心组件与通信端口</a></p>\n<p><a href=\"https://blog.csdn.net/BearStarX/article/details/104915170\" target=\"_blank\">Kubernetes 核心组件篇 (一) : Kubernetes 核心组件组成</a></p>\n<p><a href=\"https://blog.csdn.net/BearStarX/article/details/104917276\" target=\"_blank\">Kubernetes 核心组件篇 (二) : 核心组件 Kube-ApiServer</a></p>\n<p><a href=\"https://blog.csdn.net/BearStarX/article/details/104922232\" target=\"_blank\">Kubernetes 核心组件篇 (三) : 核心组件 Kube-Scheduler</a></p>\n<p><a href=\"https://blog.csdn.net/BearStarX/article/details/104927950\" target=\"_blank\">Kubernetes 核心组件篇 (四) : 核心组件 Controller Manager</a></p>\n<p><a href=\"https://blog.csdn.net/BearStarX/article/details/104961245\" target=\"_blank\">Kubernetes 核心组件篇 (五) : 核心组件 Kubelet</a></p>\n<h2 id=\"Service\"><a href=\"#Service\" class=\"headerlink\" title=\"Service\"></a>Service</h2><p>Pod 会因为伸缩、更新、故障等情况发生变化，而 Service 会对这些变化进行跟踪。同时 Service 的名字、IP 和端口都不会发生变化。</p>\n<h2 id=\"Deployment\"><a href=\"#Deployment\" class=\"headerlink\" title=\"Deployment\"></a>Deployment</h2><h2 id=\"什么是服务发现\"><a href=\"#什么是服务发现\" class=\"headerlink\" title=\"什么是服务发现\"></a>什么是服务发现</h2><p>服务发现是指使用一个注册中心来记录分布式系统中的全部服务的信息，以便其他服务能够快速的找到这些已注册的服务。<br><a href=\"https://baike.baidu.com/item/%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0/23734240?fr=aladdin\" target=\"_blank\" >服务发现</a></p>\n<h2 id=\"什么是集群选举\"><a href=\"#什么是集群选举\" class=\"headerlink\" title=\"什么是集群选举\"></a>什么是集群选举</h2><h2 id=\"Ingress\"><a href=\"#Ingress\" class=\"headerlink\" title=\"Ingress\"></a>Ingress</h2><p>不好理解，单独拎出来</p>\n<p>通常情况下，service 和 pod 的 ip 仅可以在集群内部访问；集群外部的请求需要通过负载均衡转发到 service 在 Node 上暴露的 NodePort 上，然后再由 kube-proxy 通过边缘路由器(edge router)将其转发给相关的 Pod 或者丢弃，而 Ingress 就是为进入集群的请求提供路由规则的集合</p>\n<p>ingress 可以给 service 提供集群外部访问的 url、负载均衡、ssl 终止、http 路由等。为了配置这些 ingress 规则，集群管理员需要部署一个 ingress controller，它监听 ingress 和 service 的变化，根据规则配置负载均衡并提供访问入口<br>————————————————<br>版权声明：本文为 CSDN 博主「devops_sre」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href=\"https://blog.csdn.net/weixin_42715225/article/details/109775528\">https://blog.csdn.net/weixin_42715225/article/details/109775528</a></p>\n<p><a href=\"https://www.kubernetes.org.cn/1885.html\" target=\"_blank\" >Kubernetes Ingress 解析</a></p>\n<p><a href=\"https://www.cnblogs.com/xiangxiaolin/p/14872801.html\" target=\"_blank\" >k8s——Service 和 Ingress</a></p>\n<p><a href=\"http://t.zoukankan.com/DjanFey-p-11933665.html\" target=\"_blank\" >k8s 学习（六）– 服务发现</a></p>\n<h2 id=\"链路追踪\"><a href=\"#链路追踪\" class=\"headerlink\" title=\"链路追踪\"></a>链路追踪</h2><div style=\"display: flex;align-items: center;padding-top:4px;padding-bottom: 4px\"><a target=\"_blank\" href=\"https://github.com/jaegertracing/jaeger-ui\">https://github.com/jaegertracing/jaeger-ui</a><img src=\"https://img.shields.io/github/stars/jaegertracing/jaeger-ui?style=social\" /></div>\n\n<h2 id=\"prometheus-Grafana\"><a href=\"#prometheus-Grafana\" class=\"headerlink\" title=\"prometheus+Grafana\"></a>prometheus+Grafana</h2><ul>\n<li>prometheus 以 HTTP 协议周期性抓取被监控组件状态</li>\n<li>Grafana 数据分析和可视化工具</li>\n</ul>\n<p><a href=\"https://blog.csdn.net/weixin_47415962/article/details/116063342\" target=\"_blank\" >k8s 监控 prometheus+Grafana</a></p>\n<p><a href=\"https://www.cnblogs.com/weihanli/p/14020090.html\" target=\"_blank\" >在 k8s 中部署 Prometheus 和 Grafana</a></p>\n<div style=\"display: flex;align-items: center;padding-top:4px;padding-bottom: 4px\"><a target=\"_blank\" href=\"https://github.com/prometheus/prometheus\">https://github.com/prometheus/prometheus</a><img src=\"https://img.shields.io/github/stars/prometheus/prometheus?style=social\" /></div>\n\n<div style=\"display: flex;align-items: center;padding-top:4px;padding-bottom: 4px\"><a target=\"_blank\" href=\"https://github.com/grafana/grafana\">https://github.com/grafana/grafana</a><img src=\"https://img.shields.io/github/stars/grafana/grafana?style=social\" /></div>\n\n<h2 id=\"loki-工具使用\"><a href=\"#loki-工具使用\" class=\"headerlink\" title=\"loki 工具使用\"></a>loki 工具使用</h2><p><a href=\"https://zhuanlan.zhihu.com/p/535482931\" target=\"_blank\" >Grafana Loki 查询语言 LogQL 使用</a></p>\n<h2 id=\"网课视频\"><a href=\"#网课视频\" class=\"headerlink\" title=\"网课视频\"></a>网课视频</h2><h3 id=\"网课避坑\"><a href=\"#网课避坑\" class=\"headerlink\" title=\"网课避坑\"></a>网课避坑</h3><p>有些视频，从头到尾，安装这个，安装那个，从头到尾一直在安装～，真的很“劝退”</p>\n<p>周末两天除了刷视频、文章、吃饭、睡觉，啥事没做，也没搞个明白 😓</p>\n<p>不过也难怪在安装，因为除了 docker 镜像+ yaml 是自定义的，yml 还很模版化（套路一样），其他的主要在整 k8s 集群、权限、日志、监控、数据卷。还有吗？</p>\n<p>好像没了(哈～，跟你没完，还有多呢)。再有估计像 golang 调用 api 实现用户可视化操作，就像公司那套自己定制的一套发布系统</p>\n<h3 id=\"尚硅谷-k8s\"><a href=\"#尚硅谷-k8s\" class=\"headerlink\" title=\"尚硅谷 k8s\"></a>尚硅谷 k8s</h3><p>视频文档有人整理了，爬它</p>\n<p><a href=\"https://blog.csdn.net/aa18855953229/article/details/108988411\" target=\"_blank\">第一课 2020 尚硅谷 K8s 学习-k8s kubeadm 安装</a></p>\n<p><a href=\"https://blog.csdn.net/aa18855953229/article/details/106416668\" target=\"_blank\">第一课:k8s 介绍安装</a></p>\n<p><a href=\"https://blog.csdn.net/aa18855953229/article/details/107345117\" target=\"_blank\">第二课:尚硅谷 K8s 学习-k8s 资源清单和 Pod 生命周期</a></p>\n<p><a href=\"https://blog.csdn.net/aa18855953229/article/details/107433412\" target=\"_blank\">第三课:尚硅谷 K8s 学习-k8s 资源控制器学习</a></p>\n<p><a href=\"https://blog.csdn.net/aa18855953229/article/details/108046488\" target=\"_blank\">第四课:尚硅谷 K8s 学习-Service 网络学习</a></p>\n<p><a href=\"https://blog.csdn.net/aa18855953229/article/details/108046554\" target=\"_blank\">第五课:尚硅谷 K8s 学习-存储机制</a></p>\n<p><a href=\"https://blog.csdn.net/aa18855953229/article/details/108046590\" target=\"_blank\">第六课:尚硅谷 K8s 学习-k8s 资源调度器和安全认证</a></p>\n<p><a href=\"https://blog.csdn.net/aa18855953229/article/details/108046619\" target=\"_blank\">第七课:尚硅谷 K8s 学习- Prometheus、Grafana 和 EFK、证书年限</a></p>\n<p><a href=\"https://blog.csdn.net/aa18855953229/article/details/108046650\" target=\"_blank\">第八课:尚硅谷 K8s 学习-k8s 集群的高可用</a></p>\n<h2 id=\"以下为视频内容摘要\"><a href=\"#以下为视频内容摘要\" class=\"headerlink\" title=\"以下为视频内容摘要\"></a>以下为视频内容摘要</h2><img src=\"http://t-blog-images.aijs.top/img/202211051500924.png\" style=\"width: 500px;max-width: 100%;margin-bottom:10px\" />\n\n<img src=\"http://t-blog-images.aijs.top/img/202211051501475.png\" style=\"width: 500px;max-width: 100%\" />\n\n<!-- http://t-blog-images.aijs.top/img/202211061102460.png 删除 -->\n\n<h2 id=\"K8S-的内置资源\"><a href=\"#K8S-的内置资源\" class=\"headerlink\" title=\"K8S 的内置资源\"></a>K8S 的内置资源</h2><ul>\n<li><p><code>Pod</code>:K8S 最小的调度单元，可以将一组密切关联的容器组成一个逻辑单元，在这个单元里容器之间可以更好的共享资源。</p>\n</li>\n<li><p><code>Deployment</code>:主要用于无状态应用，用来部署多个副本的 Pod,并且在 Pod 出现异常时帮助应用及时恢复正常。</p>\n</li>\n<li><p><code>Statefulset</code>:主要用于有状态应用，可以控制 Pod 的启动顺序，为 Pod 绑定不同的存储等。</p>\n</li>\n<li><p><code>Job/CronJob</code>:用于一次性和周期性的任务。</p>\n</li>\n<li><p><code>Daemonset</code>：通常用来部署后台常驻任务，会在每台 Vorker 节点启</p>\n</li>\n<li><p><code>Service</code>:应用的访问入口，通过 selector 选择具有指定 labelf 的 Pod,为其提供服务发现和负载均衡的功能，每个 Service 都可以通过 CoreDNS 获取到其对应的 IP。</p>\n</li>\n<li><p><code>Ingress</code>:提供 K8S 集群外部访问应用。</p>\n</li>\n<li><p><code>Configmap</code>、Secret:描述应用的配置和密钥等数据。</p>\n</li>\n<li><p><code>PV、PVC、HostPath、EmptyDir</code>:描述应用的各类存储。</p>\n</li>\n</ul>\n<p>控制器逻辑</p>\n<ul>\n<li><code>观察</code>：通过监控 kubernetes 资源对象变化的事件来获取当前对象状态，我们只需要注入 EventHandler 让 client-go 将变化的事件对象信息放入 WorkQueue 中。</li>\n<li><code>分析</code>：确定当前状态和期望状态的不同，由 Vorker 完成。</li>\n<li><code>执行</code>：执行能够驱动对象当前状态变化的操作，由 Worker 完成。</li>\n<li><code>更新</code>：更新对象的当前状态，由 Vorker 完成。</li>\n</ul>\n<p>Client 类型</p>\n<ul>\n<li><code>RESTClient</code>：最基础的客户端，提供最基本的封装</li>\n<li><code>Clientset</code>:是一个 Client 的集合，在 Clientset 中包含了所有 K8S 内置资源的 Client,通过 Clientset 便可以很方便的操作如 Pod、Service 这些资源</li>\n<li><code>dynamicclient</code> 动态客户端，可以操作任意 K8S 的资源，包括 CRD 定义的资源</li>\n<li><code>DiscoveryClient</code>：用于发现 K8S 提供的资源组、资源版本和资源信息，比如：kubectl api-resources</li>\n</ul>\n<p><a href=\"https://github.com/BackendDoc/kubernetes\" target=\"_blank\" >使用一条命令创建 k8s 单机集群，低配置的电脑也可以运行 k8s 集群</a></p>\n<p>基础概念: 什么是 Pod 控制器类型 K8S 网络通迅模式<br>k8s: 构建 K8S 集群<br>资源清单：资源 资源清单的语法 编写 Pod Pod 的生命周期<br>Pod 控制器：各种控制器的特点以及使用定义方式<br>服务发现：SVC 原理及其构建方式</p>\n<p>存储：黨握多种存储类型的特点 并且能够在不同环境中选择合适的存储方案（有自己的简众）<br>调度器：黨握调度器原理 能够根据要求把 Pod 定义到想要的范点运行</p>\n<p>安全：集群的认证 鉴权 访问控制原理及其流程<br>HELM: linux yum 黨握 HELM 原理 HELM 模板自定义 HELM 部署一些常用插件</p>\n<p>运维：修改 Kubeadm 达到证书可用期限为 10 年 能够构建高可用的 Kubernet 集群</p>\n<p>高可用集群副节点数据最好是&gt;&#x3D;3 奇数个</p>\n<ul>\n<li><code>APISERVER</code>:所有服务访问统一入口</li>\n<li><code>CrontrollerManager</code>:维待副本期望数目</li>\n<li><code>Scheduler</code>:负责介绍任务选择合适的节点进行分配任务</li>\n<li><code>ETCD</code>:键值对数据库储存 K8S 集群所有重要信息（持久化）</li>\n<li><code>kubelet</code>:直接跟容器引擎交互实现容器的生命周期管理</li>\n<li><code>Kube-proxy</code>:负责写入规则至 IPTABLES、IPVS 实现服务映射访问的</li>\n<li><code>COREDNS</code>:可以为集群中的 SVC 创建一个域名 IP 的对应关系解析</li>\n<li><code>DASHBOARD</code>:给 K8S 集群提供个 B&#x2F;S 结构访间体系</li>\n<li><code>INGRESS CONTROLLER</code>:官方只能实现四层代理，INGRESS 可以实现七层代理</li>\n<li><code>FEDERATION</code>:提供一个可以跨集群中心多 K8S 统一管理功能</li>\n<li><code>PROMETHEUS</code>:提供 K8S 集群的监控能力</li>\n<li><code>ELK</code>:提供 K8S 集群只志统一分析介入平台</li>\n</ul>\n<h3 id=\"控制器类型\"><a href=\"#控制器类型\" class=\"headerlink\" title=\"控制器类型\"></a>控制器类型</h3><p><code>ReplicationController</code> 用来确保容器应用的副本数始终保持在用户定义的副本数，即如果有容器异常退出，会自动创建新的 Pod 来替代；而如果异常多出来的容器也会自动回收。</p>\n<p>在新版本的 Kubernetes 中建议使用 ReplicaSet 来取代 ReplicationControlle</p>\n<p><code>ReplicaSet</code> 跟 ReplicationController 没有本质的不同，只是名字不一样，并且 ReplicaSet 支持集合式的 selector。虽然 ReplicaSet 可以独立使用，但一般还是建议使用 Deployment 来自动管理 ReplicaSet,这样就无需担心跟其他机制的不兼容问题（比如 ReplicaSet 不支持 rolling-update 但 Deployment 支持)</p>\n<p><code>Horizontal Pod Autoscaling</code> 仅适用于 Deployment 和 ReplicaSet,在 V1 版本中仅支持根据 Pod 的 CPU 利用率扩所容，在 vlalpha 版本中，支持根据内存和用户自定义的 metric 扩缩容</p>\n<p><code>StatefulSet</code> 是为了解决有状态服务的问题（对应 Deployments 和 ReplicaSets 是为无状态服务而设计)，其应用场景包括：</p>\n<ul>\n<li>稳定的持久化存储，即 Pod 重新调度后还是能访问到相同的持久化数据，基于 PVC 来实现</li>\n<li>稳定的网络标志，即 Pod 重新调度后其 PodName 和 HostName 不变，基于 Headless Service(即没有 Cluster IP 的 Service)来实现</li>\n<li>有序部署，有序扩展，即 Pod 是有顺序的，在部署或者扩展的时候要依据定义的顺序依次依次进行（即从 0 到 N-l,在下一个 Pod 运行之前所有之前的 Pod 必须都是 Running 和 Ready 状态），基于 init containers 来实现</li>\n<li>有序收缩，有序删除（即从 N-1 到 0）</li>\n</ul>\n<p><code>DaemonSet</code> 确保全部（或者一些）Node 上运行一个 Pod 的副本。当有 Node 加入集群时，也会为他们新增一个 Pod。当有 Node 从集群移除时，这些 Pod 也会被回收。删除 DaemonSet 将会删除它创建的所有 Pod<br>使用 DaemonSet 的一些典型用法：</p>\n<ul>\n<li>运行集群存储 daemon,例如在每个 Node 上运行 glusterd、ceph。</li>\n<li>在每个 Node 上运行日志收集 daemon,例如 fluentd、logstash。</li>\n<li>在每个 Node 上运行监控 daemon,例如 Prometheus Node Exporter</li>\n</ul>\n<p><code>Job</code> 负责批处理任务，即仅执行一次的任务，它保证批处理任务的一个或多个 Pod 成功结束<br><code>Cron Job</code> 管理基于时间的 Job,即：</p>\n<ul>\n<li>在给定时间点只运行一次</li>\n<li>周期性地在给定时间点运行</li>\n</ul>\n<p>网络通信</p>\n<p>Kubernetes 的网络模型假定了所有 Pod 都在一个可以直接连通的扁平的网络空间中，这在 GCE(Google Compute Engine)里面是现成的网络模型，Kubernetes 假定这个网络己经存在。而在私有云里搭建 Kubernetes 集群，就不能假定这个网络已经存在了。我们需要自己实现这个网络假设，将不同节点上的 Docker 容器之间的互相访问先打通，然后运行 Kubernetes</p>\n<ul>\n<li>同一个 Pod 内的多个容器之间：IO</li>\n<li>各 Pod 之间的通讯：Overlay Network</li>\n<li>Pod 与 Service 之间的通讯：各节点的 Iptables 规则</li>\n</ul>\n<img src=\"http://t-blog-images.aijs.top/img/202211061313394.png\" style=\"width: 800px;max-width: 100%;margin-bottom:10px\" />\n<img src=\"http://t-blog-images.aijs.top/img/202211061315365.png\" style=\"width: 800px;max-width: 100%;margin-bottom:10px\"/>\n\n<h2 id=\"什么是-4-层负载\"><a href=\"#什么是-4-层负载\" class=\"headerlink\" title=\"什么是 4 层负载\"></a>什么是 4 层负载</h2><img src=\"http://t-blog-images.aijs.top/img/202211081135414.webp\" style=\"width: 500px;max-width: 100%;\" />\n\n<ul>\n<li>四层负载均衡工作在 OSI 模型的传输层，由于在传输层，只有 TCP&#x2F;UDP 协议，这两种协议中除了包含源 IP、目标 IP 以外，还包含源端口号及目的端口号。</li>\n<li>四层负载均衡服务器在接受到客户端请求后，以后通过修改数据包的地址信息（IP+端口号）将流量转发到应用服务器</li>\n</ul>\n<h2 id=\"什么是-7-层负载\"><a href=\"#什么是-7-层负载\" class=\"headerlink\" title=\"什么是 7 层负载\"></a>什么是 7 层负载</h2><ul>\n<li>七层负载均衡工作在 OSI 模型的应用层，应用层协议较多，常用 http、radius、dns 等。</li>\n<li>七层负载就可以基于这些协议来负载。</li>\n<li>这些应用层协议中会包含很多有意义的内容。比如同一个 Web 服务器的负载均衡，除了根据 IP 加端口进行负载外，还可根据七层的 URL、浏览器类别、语言来决定是否要进行负载均衡。</li>\n</ul>\n<h2 id=\"4-层-x2F-7-层负载关系\"><a href=\"#4-层-x2F-7-层负载关系\" class=\"headerlink\" title=\"4 层&#x2F;7 层负载关系\"></a>4 层&#x2F;7 层负载关系</h2><ul>\n<li><code>四层即传输层</code>，就是基于 IP + 端口的负载均衡；</li>\n<li><code>七层即应用层</code>，就是基于 URL 等应用层信息的负载均衡；</li>\n</ul>\n<p><a href=\"https://www.cnblogs.com/psy-sdudio/p/15872083.html\" target=\"_blank\" >四层、七层负载均衡的区别 </a></p>\n<h2 id=\"蓝绿发布、金丝雀发布、灰度发布、滚动发布、A-x2F-B-测试\"><a href=\"#蓝绿发布、金丝雀发布、灰度发布、滚动发布、A-x2F-B-测试\" class=\"headerlink\" title=\"蓝绿发布、金丝雀发布、灰度发布、滚动发布、A&#x2F;B 测试\"></a>蓝绿发布、金丝雀发布、灰度发布、滚动发布、A&#x2F;B 测试</h2><ul>\n<li><code>蓝绿发布</code>： 绿的为线上，蓝的为线上测试版本</li>\n<li><code>金丝雀发布(灰度发布)</code>：灰度，对部分用户可见，使用 7 层代理的内容进行流量控制</li>\n<li><code>滚动发布</code>：单个 pod 逐步替换的过程，保证了可用性</li>\n<li><code>A/B 测试</code>：多个版本放到线上，观察哪了用户体验更好</li>\n</ul>\n<p><a href=\"https://passport.csdn.net/account/autologin?from=https://blog.csdn.net/QiuHaoqian/article/details/121733254\" target=\"_blank\" >蓝绿发布、滚动发布、灰度发布，有什么区别？</a></p>\n<p><a href=\"https://blog.csdn.net/agonie201218/article/details/122218450\" target=\"_blank\" >k8s 使用 Nginx Ingress 实现灰度发布和蓝绿发布</a></p>\n<h2 id=\"以下为微服务相关东西\"><a href=\"#以下为微服务相关东西\" class=\"headerlink\" title=\"以下为微服务相关东西\"></a>以下为微服务相关东西</h2><h2 id=\"sidecar-是什么\"><a href=\"#sidecar-是什么\" class=\"headerlink\" title=\"sidecar 是什么\"></a>sidecar 是什么</h2><h2 id=\"什么是服务治理\"><a href=\"#什么是服务治理\" class=\"headerlink\" title=\"什么是服务治理\"></a>什么是服务治理</h2><h2 id=\"istio-与服务治理有什么关系\"><a href=\"#istio-与服务治理有什么关系\" class=\"headerlink\" title=\"istio 与服务治理有什么关系\"></a>istio 与服务治理有什么关系</h2><ul>\n<li>service mesh 服务网格</li>\n<li>istio 就是我们上述提到的 service mesh 架构的一种实现</li>\n<li>istio 就是为了解决微服务的这些问题才出现的</li>\n</ul>\n<p><strong>istio 解决的问题</strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">微服务存在的问题</th>\n<th align=\"left\">istio 处理措施</th>\n</tr>\n</thead>\n<tbody><tr>\n<td align=\"left\">故障排查</td>\n<td align=\"left\">Traffic Management</td>\n</tr>\n<tr>\n<td align=\"left\">应用容错</td>\n<td align=\"left\">Observability</td>\n</tr>\n<tr>\n<td align=\"left\">发布升级</td>\n<td align=\"left\">Policy Enforcement</td>\n</tr>\n<tr>\n<td align=\"left\">系统安全</td>\n<td align=\"left\">Service Identity an Security</td>\n</tr>\n</tbody></table>\n<!-- <img src=\"http://t-blog-images.aijs.top/img/202211081402963.webp\" /> -->\n\n<p>服务之间的通信（比如这里的 Service A 访问 Service B）会通过代理（默认是 <code>envoy</code>）来进行，而且中间的网络协议支持 HTTP&#x2F;1.1，HTTP&#x2F;2，gRPC 或者 TCP，可以说覆盖了主流的通信协议。控制中心做了进一步的细分，分成了 Pilot、Mixer、和 Citadel，它们的各自功能如下：</p>\n<ul>\n<li><p><code>Pilot</code>：为 <code>envoy</code> 提供了服务发现，流量管理和智能路由（AB 测试、金丝雀发布等），以及错误处理（超时、重试、熔断）功能。用户通过 pilot 的 API 管理网络相关的资源对象，pilot 会根据用户的配置和服务的信息把网络流量管理变成 envoy 能识别的格式分发到各个 sidecar 代理中。</p>\n</li>\n<li><p><code>Mixer</code>：为整个集群执行访问控制（哪些用户可以访问哪些服务）和 policy 管理（rate limit，quota 等），并且收集代理观察到的服务之间的流量统计数据</p>\n</li>\n<li><p><code>Citadel</code>：为服务之间提供认证和证书管理，可以让服务自动升级成 TLS 协议</p>\n</li>\n</ul>\n<p>————————————————<br>版权声明：本文为 CSDN 博主「Dark<em>Ice</em>」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href=\"https://blog.csdn.net/weixin_40274679/article/details/106232119\">https://blog.csdn.net/weixin_40274679/article/details/106232119</a></p>\n<p><a href=\"https://blog.csdn.net/weixin_40274679/article/details/106232119\" target=\"_blank\" >Istio 是啥？一文带你彻底了解</a></p>\n<p><a href=\"https://blog.csdn.net/qq_42046105/article/details/112791356\" target=\"_blank\" >Istio 架构原理</a></p>\n<h2 id=\"Ingress-与-istio-有很多重合的功能-两者有什么区别\"><a href=\"#Ingress-与-istio-有很多重合的功能-两者有什么区别\" class=\"headerlink\" title=\"Ingress 与 istio 有很多重合的功能,两者有什么区别\"></a>Ingress 与 istio 有很多重合的功能,两者有什么区别</h2><p>Service Mesh 的出现，弥补了 Kubernetes 在微服务的连接、管理和监控方面的短板，为 Kubernetes 提供更好的应用和服务管理。因此，Service Mesh 的代表 Istio 一经推出，就被认为是可以和 Kubernetes 形成双剑合璧效果的微服务管理的利器，受到了业界的推崇。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>Istio 与 Kubernetes 极为互补。“K8S 实际上只是负责基本的调度和编排，负责主机上容器的运行，Istio 做的是互补，因为它主要做的是服务发现。当用容器来实现不同的服务时，需要发现服务、动态连接服务、进行服务升级，甚至还会产生一些安全性、可靠性、性能方面的功能需求，实际上这些功能都是 K8S 原生没有或者要用手动的方法才能实现的。Istio 就是一个可以在 K8S 上，把这些应用、服务进行较好管理的框架。</p></blockquote>\n<p>这篇文章之后的内容，看上去像是在打广告～，不看也罢<br>————————————————<br>版权声明：本文为 CSDN 博主「科技峰行者」的原创文章，遵循 CC 4.0 BY-SA 版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href=\"https://blog.csdn.net/sunhf_csdn/article/details/84257923\">https://blog.csdn.net/sunhf_csdn/article/details/84257923</a></p>\n<h2 id=\"什么是流量控制，什么是熔断\"><a href=\"#什么是流量控制，什么是熔断\" class=\"headerlink\" title=\"什么是流量控制，什么是熔断\"></a>什么是流量控制，什么是熔断</h2><h2 id=\"可能的需求\"><a href=\"#可能的需求\" class=\"headerlink\" title=\"可能的需求\"></a>可能的需求</h2><ul>\n<li>部署软件</li>\n<li>扩缩容</li>\n<li>可视化监控</li>\n<li>灰度</li>\n<li>回滚</li>\n<li>高并发</li>\n<li>高可用</li>\n</ul>\n<h2 id=\"Configmap\"><a href=\"#Configmap\" class=\"headerlink\" title=\"Configmap\"></a>Configmap</h2><p>configMap 描述信息<br>ConfigMap 功能在 Kubernetes1.2 版本中引入，许多应用程序会从配置文件、命令行参数或环境变量中读取<br>配置信息。ConfigMap API 给我们提供了向容器中注入配置信息的机制，ConfigMap 可以被用来保存单个属<br>性，也可以用来保存整个配置文件或者 JSON 二进制大对象</p>\n<h2 id=\"Secret\"><a href=\"#Secret\" class=\"headerlink\" title=\"Secret\"></a>Secret</h2><p><strong>Secret 解决了密码、token、密钥等敏感数据的配置问题，而不需要把这些敏感数据暴露到镜像或者 Pod<br>Spec 中。Secret 可以以 Volume 或者环境变量的方式使用</strong></p>\n<h2 id=\"k8s-API-调用\"><a href=\"#k8s-API-调用\" class=\"headerlink\" title=\"k8s API 调用\"></a>k8s API 调用</h2><p>哈～，顿悟了，用这些 API 就能实现 devops 平台开发了</p>\n<p><a href=\"https://kubernetes.io/zh-cn/docs/reference/kubernetes-api/workload-resources/pod-v1/#get-%E8%AF%BB%E5%8F%96%E6%8C%87%E5%AE%9A%E7%9A%84-pod\" target=\"_blank\" >Pod</a></p>\n<h2 id=\"CNCF-毕业项目\"><a href=\"#CNCF-毕业项目\" class=\"headerlink\" title=\"CNCF 毕业项目\"></a>CNCF 毕业项目</h2><p>项目毕业意味着，这项技术已经展现出强劲的采用率势头，开放的治理流程，以及对社区，可持续性和包容性的承诺</p>\n<p><a href=\"https://copyfuture.com/blogs-details/20190911225926796t02nyyadtqaou0v\" target=\"_blank\" >见</a></p>\n<h3 id=\"Kubernetes\"><a href=\"#Kubernetes\" class=\"headerlink\" title=\"Kubernetes\"></a>Kubernetes</h3><p>开源容器编排系统，主要应用与自动化容器化应用程序的部署、扩展和管理。它已经是事实上的容器编排标准。</p>\n<h3 id=\"Prometheus\"><a href=\"#Prometheus\" class=\"headerlink\" title=\"Prometheus\"></a>Prometheus</h3><p>一套开源系统监控&amp;报警&amp;时间序列数据库工具包</p>\n<h3 id=\"Envoy\"><a href=\"#Envoy\" class=\"headerlink\" title=\"Envoy\"></a>Envoy</h3><p>被广泛采用的开源网络代理，被设计为云原生应用程序的第 7 层边缘和服务代理</p>\n<h3 id=\"CoreDNS\"><a href=\"#CoreDNS\" class=\"headerlink\" title=\"CoreDNS\"></a>CoreDNS</h3><p>CoreDNS 是 DNS 服务器解决方案，它既能作为独立的 DNS 服务器，也作为 Kubernetes 的默认向前的 DNS 服务器</p>\n<h3 id=\"Containerd\"><a href=\"#Containerd\" class=\"headerlink\" title=\"Containerd\"></a>Containerd</h3><p>Docker 引擎的底层运行时（runtime）管理器。目前，Containerd 作为业界标准的容器运行时被广泛采用。</p>\n<h3 id=\"Fluentd\"><a href=\"#Fluentd\" class=\"headerlink\" title=\"Fluentd\"></a>Fluentd</h3><p>用于统一日志记录层的数据收集器，它会将数据源与后端系统分离</p>\n<h3 id=\"Jaeger\"><a href=\"#Jaeger\" class=\"headerlink\" title=\"Jaeger\"></a>Jaeger</h3><p>Jaeger 作为端到端的分布式跟踪平台，帮助企业监控云原生架构并进行故障排除</p>\n<h3 id=\"Vitess\"><a href=\"#Vitess\" class=\"headerlink\" title=\"Vitess\"></a>Vitess</h3><p>Vitess 是用于 MySQL 水平扩展的数据库集群系统</p>\n<h3 id=\"Helm（中文）\"><a href=\"#Helm（中文）\" class=\"headerlink\" title=\"Helm（中文）\"></a>Helm（中文）</h3><p><strong>掌舵</strong></p>\n<p><a href=\"https://helm.sh/zh/\" target=\"_blank\" >https://helm.sh/zh/</a></p>\n<p>Helm 帮助您管理 Kubernetes 应用—— Helm Chart，即使是最复杂的 Kubernetes 应用程序，都可以帮助您定义，安装和升级。</p>\n<p>Helm Chart 易于创建、发版、分享和发布，所以停止复制粘贴，开始使用 Helm 吧。</p>\n<p>Helm 是 CNCF 的毕业项目，由 Helm 社区维护。</p>\n<h3 id=\"Harbor\"><a href=\"#Harbor\" class=\"headerlink\" title=\"Harbor\"></a>Harbor</h3><p>Harbor 是个开源制品（artifact）仓库，是首个原创于中国、并且成为 CNCF 毕业级的开源项目。用户可通过策略和基于角色的访问控制来保护制品（如容器镜像、Helm Chart 等），扫描镜像并避免受安全漏洞的危害。Harbor 扩展了开源项目 Docker Distribution，添加了用户所需的功能（例如安全性，身份，漏洞扫描和管理）。在环境中部署 Harbor 可以提高镜像传输效率，便于就近构建和运行容器应用。Harbor 支持在制品仓库之间复制镜像、Chart 等制品，并提供高级安全功能，例如用户管理、访问控制和操作审计等。</p>\n<p><a href=\"https://www.sohu.com/na/403995544_609552\" target=\"_blank\" >首个中国原创项目 Harbor 毕业 </a></p>\n<p><a href=\"https://goharbor.io/\" target=\"_blank\" >https://goharbor.io/</a></p>\n<h3 id=\"Apollo\"><a href=\"#Apollo\" class=\"headerlink\" title=\"Apollo\"></a>Apollo</h3><p>一款可靠的分布式配置管理中心，诞生于携程框架研发部，能够集中化管理应用不同环境、不同集群的配置，配置修改后能够实时推送到应用端，并且具备规范的权限、流程治理等特性，适用于微服务配置管理场景<br><a href=\"https://www.apolloconfig.com/#/zh/README?id=screenshots\" target=\"_blank\" >见</a></p>\n<h2 id=\"Helm-可以使用-Harbor-仓库？\"><a href=\"#Helm-可以使用-Harbor-仓库？\" class=\"headerlink\" title=\"Helm 可以使用 Harbor 仓库？\"></a>Helm 可以使用 Harbor 仓库？</h2><h2 id=\"什么是-EFK\"><a href=\"#什么是-EFK\" class=\"headerlink\" title=\"什么是 EFK\"></a>什么是 EFK</h2><p>EFK 组件： Elasticsearch (分布式集群搜索) Fluentd (日志收集转发) Kibana (面板操作查询)</p>\n<p><strong>日志收集：</strong>Elasticsearch 是分析引擎，Kibana 是可视化面板，前面这两个是一伙的，Fluentd 是收集日志的</p>\n<p><strong>监控：</strong> Prometheus 和 Grafana</p>\n<p><a href=\"https://www.cnblogs.com/wenyang321/p/14111483.html\" target=\"_blank\" >第四篇 kubernetes 部署 EFK 日志平台</a></p>\n<h2 id=\"文档\"><a href=\"#文档\" class=\"headerlink\" title=\"文档\"></a>文档</h2><p><a href=\"http://docs.kubernetes.org.cn/\" target=\"_blank\" >Kubernetes 中文社区 | 中文文档</a></p>\n<p><a href=\"https://kubernetes.io/zh-cn/docs/concepts/\" target=\"_blank\" >官网</a></p>\n<p><strong>选择性消化官方文档，从自己感兴趣的部分开始</strong></p>\n<p><a href=\"https://github.com/guangzhengli/k8s-tutorials\" target=\"_blank\" >https://github.com/guangzhengli/k8s-tutorials</a></p>\n<h2 id=\"在线-k8s-集群\"><a href=\"#在线-k8s-集群\" class=\"headerlink\" title=\"在线 k8s 集群\"></a>在线 k8s 集群</h2><p>no 马内，也可以玩</p>\n<p>Play with Kubernetes<br>A simple, interactive and fun playground to learn Kubernetes</p>\n<p><a href=\"https://labs.play-with-k8s.com/\" target=\"_blank\" >https://labs.play-with-k8s.com</a></p>\n<p><strong>有效时间 4 小时</strong><br><img src=\"http://t-blog-images.aijs.top/img/202211091738969.webp\" style=\"width:500px;max-width:100%\" /></p>\n<h2 id=\"etcd\"><a href=\"#etcd\" class=\"headerlink\" title=\"etcd\"></a>etcd</h2><p><a href=\"https://www.zhaowenyu.com/etcd-doc/\" target=\"_blank\" >https://www.zhaowenyu.com/etcd-doc/</a></p>\n<h2 id=\"etcd-在-k8s-中存储哪些信息\"><a href=\"#etcd-在-k8s-中存储哪些信息\" class=\"headerlink\" title=\"etcd 在 k8s 中存储哪些信息\"></a>etcd 在 k8s 中存储哪些信息</h2><h2 id=\"k8s-术语\"><a href=\"#k8s-术语\" class=\"headerlink\" title=\"k8s 术语\"></a>k8s 术语</h2><p><a href=\"https://www.zhaowenyu.com/etcd-doc/\" target=\"_blank\" >https://www.zhaowenyu.com/etcd-doc/</a></p>\n<h2 id=\"ingress-nginx\"><a href=\"#ingress-nginx\" class=\"headerlink\" title=\"ingress-nginx\"></a>ingress-nginx</h2><p><a href=\"https://kubernetes.github.io/ingress-nginx/\" target=\"_blank\" >https://kubernetes.github.io/ingress-nginx/</a></p>\n<h2 id=\"linux-系统根目录各文件夹的作用\"><a href=\"#linux-系统根目录各文件夹的作用\" class=\"headerlink\" title=\"linux 系统根目录各文件夹的作用\"></a>linux 系统根目录各文件夹的作用</h2><h2 id=\"tgz-格式解压\"><a href=\"#tgz-格式解压\" class=\"headerlink\" title=\"tgz 格式解压\"></a>tgz 格式解压</h2><h2 id=\"docker-load-i-xx-tar\"><a href=\"#docker-load-i-xx-tar\" class=\"headerlink\" title=\"docker load i xx.tar\"></a>docker load i xx.tar</h2><h2 id=\"k8s-探针\"><a href=\"#k8s-探针\" class=\"headerlink\" title=\"k8s 探针\"></a>k8s 探针</h2><ul>\n<li>存活探针 希望容器在探测失败时被杀死并重新启动</li>\n<li>就绪探针 区分已经失败的应用和仍在处理其启动数据的应用</li>\n<li>启动探针 容器需要在启动期间加载大型数据、配置文件或执行迁移</li>\n</ul>\n<h2 id=\"认证-x2F-鉴权-x2F-准入控制\"><a href=\"#认证-x2F-鉴权-x2F-准入控制\" class=\"headerlink\" title=\"认证&#x2F;鉴权&#x2F;准入控制\"></a>认证&#x2F;鉴权&#x2F;准入控制</h2><ul>\n<li>Authentication 认证</li>\n<li>Authorization 鉴权</li>\n<li>Admission Control 准入控制</li>\n</ul>\n<h2 id=\"drone\"><a href=\"#drone\" class=\"headerlink\" title=\"drone\"></a>drone</h2><div style=\"display: flex;align-items: center;padding-top:4px;padding-bottom: 4px\"><a target=\"_blank\" href=\"https://github.com/jenkinsci/jenkins\">https://github.com/jenkinsci/jenkins</a><img src=\"https://img.shields.io/github/stars/jenkinsci/jenkins?style=social\" /></div>\n\n<div style=\"display: flex;align-items: center;padding-top:4px;padding-bottom: 4px\"><a target=\"_blank\" href=\"https://github.com/harness/drone\">https://github.com/harness/drone</a><img src=\"https://img.shields.io/github/stars/harness/drone?style=social\" /></div>\n\n<p>drone 官网底部 github 链接 跳转 Drone by Harness。找到了 drone-ui 和 drone-go 仓库，star 数 200 多，我怀疑整个世界了。 在 github 上搜 drone 找到了，star 数超过 jenkins，这就正常，此项目在 Harness 下</p>\n<p>嗯 我们公司用 drone</p>\n<p>Drone makes advanced customization easy. <code>Implement custom access controls</code>,<code>approval workflows</code>, secret management, yaml syntax extensions and more.</p>\n<p>没找到中文文档</p>\n<p><a href=\"https://www.drone.io/\" target=\"_blank\" >https://www.drone.io/</a></p>\n<p><a href=\"https://docs.drone.io/pipeline/docker/examples/languages/node/\" target=\"_blank\" >官方文档</a></p>\n<p><a href=\"http://t.zoukankan.com/rongfengliang-p-8982143.html\" target=\"_blank\" >drone 学习一 几个核心组件</a></p>\n<h2 id=\"drone-插件开发\"><a href=\"#drone-插件开发\" class=\"headerlink\" title=\"drone 插件开发\"></a>drone 插件开发</h2><p><a href=\"https://www.jianshu.com/p/478c4524a1ce\" target=\"_blank\" >https://www.jianshu.com/p/478c4524a1ce</a></p>\n<h2 id=\"jsonnet\"><a href=\"#jsonnet\" class=\"headerlink\" title=\"jsonnet\"></a>jsonnet</h2><ul>\n<li>Jsonnet - json 数据模板语言</li>\n</ul>\n<p><a href=\"https://juejin.cn/post/6988819621956550669\" target=\"_blank\" >https://juejin.cn/post/6988819621956550669</a></p>\n<p><strong>注：这篇文章里有个 Shuttle 工具，看上去很酷</strong></p>\n<h2 id=\"k8s-drone\"><a href=\"#k8s-drone\" class=\"headerlink\" title=\"k8s drone\"></a>k8s drone</h2><h2 id=\"node-x2F-clone-日志\"><a href=\"#node-x2F-clone-日志\" class=\"headerlink\" title=\"node&#x2F;clone 日志\"></a>node&#x2F;clone 日志</h2><pre class=\"line-numbers language-none\"><code class=\"language-none\">Cloning with 5 retries\nInitialized empty Git repository in &#x2F;code&#x2F;.git&#x2F;\n+ git fetch origin +refs&#x2F;heads&#x2F;hotfix&#x2F;1.4-part-solve:\nFrom https:&#x2F;&#x2F;registry.code.yy.top&#x2F;fe-efficacy&#x2F;socrates-admin\n* branch            hotfix&#x2F;1.4-part-solve -&gt; FETCH_HEAD\n* [new branch]      hotfix&#x2F;1.4-part-solve -&gt; origin&#x2F;hotfix&#x2F;1.4-part-solve\n+ git checkout 67deb4c0d6a8217f86f4564f33ed1545ddac1a6a -b hotfix&#x2F;1.4-part-solve\nSwitched to a new branch &#39;hotfix&#x2F;1.4-part-solve&#39;\n+ git submodule update --init --recursive</code></pre>\n\n<h2 id=\"drone-自定义插件注入流水线中\"><a href=\"#drone-自定义插件注入流水线中\" class=\"headerlink\" title=\"drone 自定义插件注入流水线中\"></a>drone 自定义插件注入流水线中</h2><h2 id=\"服务器之间免登\"><a href=\"#服务器之间免登\" class=\"headerlink\" title=\"服务器之间免登\"></a>服务器之间免登</h2><p><a href=\"https://www.jianshu.com/p/92925df93626\" target=\"_blank\" >Linux——配置服务器间的免密登录</a></p>\n<p><a href=\"https://zhuanlan.zhihu.com/p/36981600\" target=\"_blank\" >SSH 配置—Linux 下实现免密码登录</a></p>\n<h2 id=\"Node-节点注册配置\"><a href=\"#Node-节点注册配置\" class=\"headerlink\" title=\"Node 节点注册配置\"></a>Node 节点注册配置</h2><p><a href=\"https://blog.csdn.net/BearStarX/article/details/104853610/\" target=\"_blank\" >Node 节点注册配置</a></p>\n<h2 id=\"k8s-集群准备\"><a href=\"#k8s-集群准备\" class=\"headerlink\" title=\"k8s 集群准备\"></a>k8s 集群准备</h2><ol>\n<li>看了下，阿里云按小时算，一个月也要点钱</li>\n<li>自己电脑 16G 的内存 i5 配置，搞个 1+2 集群应该也还行吧</li>\n</ol>\n<p><a href=\"https://blog.csdn.net/tiny_du/article/details/123823093\" target=\"_blank\" >部署 k8s 集群（k8s 集群搭建详细实践版）</a></p>\n<h2 id=\"docker\"><a href=\"#docker\" class=\"headerlink\" title=\"docker\"></a>docker</h2><p><a href=\"https://blog.csdn.net/bearstarx/category_9701585.html\" target=\"_blank\" >见</a></p>\n<h2 id=\"云服务器是如何将内网暴露到外网的？\"><a href=\"#云服务器是如何将内网暴露到外网的？\" class=\"headerlink\" title=\"云服务器是如何将内网暴露到外网的？\"></a>云服务器是如何将内网暴露到外网的？</h2><p>如果我有一组台式机，是不是可以实现云服务器的效果</p>\n","text":"满脑子问题k8s 是什么k8s 如何安装k8s 为什么最少 3 个 masterk8s 如何控制 node如何进行 iterm 多服务器操作scp 命令如何使用？有教程吗？sz 命令如何安装环境为什么要配置 host如何安装 yumlkind 种类有几个？应该用哪个？思维导图爬取...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"云原生","slug":"云原生","count":5,"path":"api/categories/云原生.json"}],"tags":[{"name":"云原生","slug":"云原生","count":5,"path":"api/tags/云原生.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%BB%A1%E8%84%91%E5%AD%90%E9%97%AE%E9%A2%98\"><span class=\"toc-text\">满脑子问题</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#k8s-%E6%98%AF%E4%BB%80%E4%B9%88\"><span class=\"toc-text\">k8s 是什么</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#k8s-%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85\"><span class=\"toc-text\">k8s 如何安装</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#k8s-%E4%B8%BA%E4%BB%80%E4%B9%88%E6%9C%80%E5%B0%91-3-%E4%B8%AA-master\"><span class=\"toc-text\">k8s 为什么最少 3 个 master</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#k8s-%E5%A6%82%E4%BD%95%E6%8E%A7%E5%88%B6-node\"><span class=\"toc-text\">k8s 如何控制 node</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A6%82%E4%BD%95%E8%BF%9B%E8%A1%8C-iterm-%E5%A4%9A%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">如何进行 iterm 多服务器操作</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#scp-%E5%91%BD%E4%BB%A4%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8%EF%BC%9F%E6%9C%89%E6%95%99%E7%A8%8B%E5%90%97%EF%BC%9F\"><span class=\"toc-text\">scp 命令如何使用？有教程吗？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#sz-%E5%91%BD%E4%BB%A4\"><span class=\"toc-text\">sz 命令</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85%E7%8E%AF%E5%A2%83\"><span class=\"toc-text\">如何安装环境</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E9%85%8D%E7%BD%AE-host\"><span class=\"toc-text\">为什么要配置 host</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A6%82%E4%BD%95%E5%AE%89%E8%A3%85-yuml\"><span class=\"toc-text\">如何安装 yuml</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#kind-%E7%A7%8D%E7%B1%BB%E6%9C%89%E5%87%A0%E4%B8%AA%EF%BC%9F%E5%BA%94%E8%AF%A5%E7%94%A8%E5%93%AA%E4%B8%AA%EF%BC%9F\"><span class=\"toc-text\">kind 种类有几个？应该用哪个？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE\"><span class=\"toc-text\">思维导图</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%88%AC%E5%8F%96%E5%8D%9A%E5%AE%A2%E5%9B%AD%E6%A0%87%E7%AD%BE%E8%84%9A%E6%9C%AC\"><span class=\"toc-text\">爬取博客园标签脚本</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%A6%82%E5%BF%B5\"><span class=\"toc-text\">概念</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#K8S-%E6%96%87%E7%AB%A0%E6%94%B6%E5%BD%95\"><span class=\"toc-text\">K8S 文章收录</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Service\"><span class=\"toc-text\">Service</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Deployment\"><span class=\"toc-text\">Deployment</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AF%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0\"><span class=\"toc-text\">什么是服务发现</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AF%E9%9B%86%E7%BE%A4%E9%80%89%E4%B8%BE\"><span class=\"toc-text\">什么是集群选举</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Ingress\"><span class=\"toc-text\">Ingress</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AA\"><span class=\"toc-text\">链路追踪</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#prometheus-Grafana\"><span class=\"toc-text\">prometheus+Grafana</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#loki-%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">loki 工具使用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%BD%91%E8%AF%BE%E8%A7%86%E9%A2%91\"><span class=\"toc-text\">网课视频</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BD%91%E8%AF%BE%E9%81%BF%E5%9D%91\"><span class=\"toc-text\">网课避坑</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%B0%9A%E7%A1%85%E8%B0%B7-k8s\"><span class=\"toc-text\">尚硅谷 k8s</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%A5%E4%B8%8B%E4%B8%BA%E8%A7%86%E9%A2%91%E5%86%85%E5%AE%B9%E6%91%98%E8%A6%81\"><span class=\"toc-text\">以下为视频内容摘要</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#K8S-%E7%9A%84%E5%86%85%E7%BD%AE%E8%B5%84%E6%BA%90\"><span class=\"toc-text\">K8S 的内置资源</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%8E%A7%E5%88%B6%E5%99%A8%E7%B1%BB%E5%9E%8B\"><span class=\"toc-text\">控制器类型</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AF-4-%E5%B1%82%E8%B4%9F%E8%BD%BD\"><span class=\"toc-text\">什么是 4 层负载</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AF-7-%E5%B1%82%E8%B4%9F%E8%BD%BD\"><span class=\"toc-text\">什么是 7 层负载</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#4-%E5%B1%82-x2F-7-%E5%B1%82%E8%B4%9F%E8%BD%BD%E5%85%B3%E7%B3%BB\"><span class=\"toc-text\">4 层&#x2F;7 层负载关系</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%93%9D%E7%BB%BF%E5%8F%91%E5%B8%83%E3%80%81%E9%87%91%E4%B8%9D%E9%9B%80%E5%8F%91%E5%B8%83%E3%80%81%E7%81%B0%E5%BA%A6%E5%8F%91%E5%B8%83%E3%80%81%E6%BB%9A%E5%8A%A8%E5%8F%91%E5%B8%83%E3%80%81A-x2F-B-%E6%B5%8B%E8%AF%95\"><span class=\"toc-text\">蓝绿发布、金丝雀发布、灰度发布、滚动发布、A&#x2F;B 测试</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%A5%E4%B8%8B%E4%B8%BA%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9B%B8%E5%85%B3%E4%B8%9C%E8%A5%BF\"><span class=\"toc-text\">以下为微服务相关东西</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#sidecar-%E6%98%AF%E4%BB%80%E4%B9%88\"><span class=\"toc-text\">sidecar 是什么</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AF%E6%9C%8D%E5%8A%A1%E6%B2%BB%E7%90%86\"><span class=\"toc-text\">什么是服务治理</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#istio-%E4%B8%8E%E6%9C%8D%E5%8A%A1%E6%B2%BB%E7%90%86%E6%9C%89%E4%BB%80%E4%B9%88%E5%85%B3%E7%B3%BB\"><span class=\"toc-text\">istio 与服务治理有什么关系</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Ingress-%E4%B8%8E-istio-%E6%9C%89%E5%BE%88%E5%A4%9A%E9%87%8D%E5%90%88%E7%9A%84%E5%8A%9F%E8%83%BD-%E4%B8%A4%E8%80%85%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">Ingress 与 istio 有很多重合的功能,两者有什么区别</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AF%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6%EF%BC%8C%E4%BB%80%E4%B9%88%E6%98%AF%E7%86%94%E6%96%AD\"><span class=\"toc-text\">什么是流量控制，什么是熔断</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%AF%E8%83%BD%E7%9A%84%E9%9C%80%E6%B1%82\"><span class=\"toc-text\">可能的需求</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Configmap\"><span class=\"toc-text\">Configmap</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Secret\"><span class=\"toc-text\">Secret</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#k8s-API-%E8%B0%83%E7%94%A8\"><span class=\"toc-text\">k8s API 调用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#CNCF-%E6%AF%95%E4%B8%9A%E9%A1%B9%E7%9B%AE\"><span class=\"toc-text\">CNCF 毕业项目</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Kubernetes\"><span class=\"toc-text\">Kubernetes</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Prometheus\"><span class=\"toc-text\">Prometheus</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Envoy\"><span class=\"toc-text\">Envoy</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#CoreDNS\"><span class=\"toc-text\">CoreDNS</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Containerd\"><span class=\"toc-text\">Containerd</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Fluentd\"><span class=\"toc-text\">Fluentd</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Jaeger\"><span class=\"toc-text\">Jaeger</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Vitess\"><span class=\"toc-text\">Vitess</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Helm%EF%BC%88%E4%B8%AD%E6%96%87%EF%BC%89\"><span class=\"toc-text\">Helm（中文）</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Harbor\"><span class=\"toc-text\">Harbor</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Apollo\"><span class=\"toc-text\">Apollo</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Helm-%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8-Harbor-%E4%BB%93%E5%BA%93%EF%BC%9F\"><span class=\"toc-text\">Helm 可以使用 Harbor 仓库？</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AF-EFK\"><span class=\"toc-text\">什么是 EFK</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%96%87%E6%A1%A3\"><span class=\"toc-text\">文档</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9C%A8%E7%BA%BF-k8s-%E9%9B%86%E7%BE%A4\"><span class=\"toc-text\">在线 k8s 集群</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#etcd\"><span class=\"toc-text\">etcd</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#etcd-%E5%9C%A8-k8s-%E4%B8%AD%E5%AD%98%E5%82%A8%E5%93%AA%E4%BA%9B%E4%BF%A1%E6%81%AF\"><span class=\"toc-text\">etcd 在 k8s 中存储哪些信息</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#k8s-%E6%9C%AF%E8%AF%AD\"><span class=\"toc-text\">k8s 术语</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#ingress-nginx\"><span class=\"toc-text\">ingress-nginx</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#linux-%E7%B3%BB%E7%BB%9F%E6%A0%B9%E7%9B%AE%E5%BD%95%E5%90%84%E6%96%87%E4%BB%B6%E5%A4%B9%E7%9A%84%E4%BD%9C%E7%94%A8\"><span class=\"toc-text\">linux 系统根目录各文件夹的作用</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#tgz-%E6%A0%BC%E5%BC%8F%E8%A7%A3%E5%8E%8B\"><span class=\"toc-text\">tgz 格式解压</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#docker-load-i-xx-tar\"><span class=\"toc-text\">docker load i xx.tar</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#k8s-%E6%8E%A2%E9%92%88\"><span class=\"toc-text\">k8s 探针</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%AE%A4%E8%AF%81-x2F-%E9%89%B4%E6%9D%83-x2F-%E5%87%86%E5%85%A5%E6%8E%A7%E5%88%B6\"><span class=\"toc-text\">认证&#x2F;鉴权&#x2F;准入控制</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#drone\"><span class=\"toc-text\">drone</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#drone-%E6%8F%92%E4%BB%B6%E5%BC%80%E5%8F%91\"><span class=\"toc-text\">drone 插件开发</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#jsonnet\"><span class=\"toc-text\">jsonnet</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#k8s-drone\"><span class=\"toc-text\">k8s drone</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#node-x2F-clone-%E6%97%A5%E5%BF%97\"><span class=\"toc-text\">node&#x2F;clone 日志</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#drone-%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8F%92%E4%BB%B6%E6%B3%A8%E5%85%A5%E6%B5%81%E6%B0%B4%E7%BA%BF%E4%B8%AD\"><span class=\"toc-text\">drone 自定义插件注入流水线中</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B9%8B%E9%97%B4%E5%85%8D%E7%99%BB\"><span class=\"toc-text\">服务器之间免登</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Node-%E8%8A%82%E7%82%B9%E6%B3%A8%E5%86%8C%E9%85%8D%E7%BD%AE\"><span class=\"toc-text\">Node 节点注册配置</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#k8s-%E9%9B%86%E7%BE%A4%E5%87%86%E5%A4%87\"><span class=\"toc-text\">k8s 集群准备</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#docker\"><span class=\"toc-text\">docker</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%98%AF%E5%A6%82%E4%BD%95%E5%B0%86%E5%86%85%E7%BD%91%E6%9A%B4%E9%9C%B2%E5%88%B0%E5%A4%96%E7%BD%91%E7%9A%84%EF%BC%9F\"><span class=\"toc-text\">云服务器是如何将内网暴露到外网的？</span></a></li></ol>","author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"<div><p>眼中有光，心中有梦，脚下有路</p><p>做好该做的，然后做自己想做的</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"云原生 Shell 命令（持续补充）","uid":"b33166a6f9ce7189daf49bf95de988cb","slug":"2022-11-07shell命令","date":"2022-11-07T08:15:03.000Z","updated":"2022-12-22T13:36:21.796Z","comments":true,"path":"api/articles/2022-11-07shell命令.json","keywords":null,"cover":"https://img1.baidu.com/it/u=2053451129,2889213081&fm=253&fmt=auto&app=138&f=PNG?w=640&h=320","text":"echo 内容到文件写入内容$ echo &quot;hello&quot; &gt; hw.md # 写入hello $ cat hw.md # 查看 hello $ echo &quot;world&quot; &gt; hw.md # 插写入world $ cat hw.m...","link":"","photos":[],"count_time":{"symbolsCount":"12k","symbolsTime":"11 mins."},"categories":[{"name":"云原生","slug":"云原生","count":5,"path":"api/categories/云原生.json"}],"tags":[{"name":"云原生","slug":"云原生","count":5,"path":"api/tags/云原生.json"}],"author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"<div><p>眼中有光，心中有梦，脚下有路</p><p>做好该做的，然后做自己想做的</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}},"next_post":{"title":"Redis 命令及分区","uid":"66c41c8c78c6433d94dadc3b731a3d3d","slug":"2022-11-04redis","date":"2022-11-04T09:09:30.000Z","updated":"2022-11-04T14:57:50.930Z","comments":true,"path":"api/articles/2022-11-04redis.json","keywords":null,"cover":[],"text":"爬取脚本var data &#x3D; &quot;&quot;; Array.from( document.getElementsByClassName(&quot;left&quot;)[0].children[1].children ).forEach((li) &#x3D...","link":"","photos":[],"count_time":{"symbolsCount":"7.3k","symbolsTime":"7 mins."},"categories":[{"name":"Db","slug":"Db","count":1,"path":"api/categories/Db.json"}],"tags":[{"name":"Db","slug":"Db","count":1,"path":"api/tags/Db.json"}],"author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"<div><p>眼中有光，心中有梦，脚下有路</p><p>做好该做的，然后做自己想做的</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}}}