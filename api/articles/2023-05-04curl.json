{"title":"工具 curl","uid":"92b035fc1ec1b990bc3338018d34636f","slug":"2023-05-04curl","date":"2023-05-04T01:30:00.000Z","updated":"2023-05-15T13:17:32.998Z","comments":true,"path":"api/articles/2023-05-04curl.json","keywords":null,"cover":null,"content":"<h2 id=\"curl\"><a href=\"#curl\" class=\"headerlink\" title=\"curl\"></a>curl</h2><h3 id=\"是什么\"><a href=\"#是什么\" class=\"headerlink\" title=\"是什么\"></a>是什么</h3><p>curl 是一个用于发送 HTTP 请求的命令行工具，支持多种协议，包括 HTTP、HTTPS、FTP、SMTP 等。其基本语法如下：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">curl [options] [URL]</code></pre>\n\n<p>其中，<code>options</code> 是 curl 命令的选项，用于设置请求的各种参数，<code>URL</code> 是目标 URL，指定请求的目标地址。</p>\n<p>以下是一些常用的 curl 选项：</p>\n<ul>\n<li><code>-H</code>：设置请求头部，可以指定多个头部，用逗号分隔。</li>\n<li><code>-X</code>：指定请求方法，如 GET、POST、PUT、DELETE 等。</li>\n<li><code>-d</code>：设置请求体数据，用于 POST 请求。</li>\n<li><code>-u</code>：设置认证用户名和密码。</li>\n<li><code>-s</code>：静默模式，不显示进度和错误信息。</li>\n<li><code>-o</code>：将响应保存到文件。</li>\n<li><code>-L</code>：自动跟随重定向。</li>\n<li><code>-k</code>：忽略 SSL 证书验证。</li>\n<li><code>-i</code>：显示响应头部。</li>\n</ul>\n<p>以下是一个示例命令，用于发送一个简单的 GET 请求：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">curl http:&#x2F;&#x2F;example.com</code></pre>\n\n<p>以下是一个示例命令，用于发送一个带自定义请求头部和请求体的 POST 请求：</p>\n<pre class=\"line-numbers language-none\"><code class=\"language-none\">curl -X POST -H &quot;Content-Type: application&#x2F;json&quot; -d &#39;&#123;&quot;name&quot;: &quot;John&quot;, &quot;age&quot;: 30&#125;&#39; http:&#x2F;&#x2F;example.com</code></pre>\n\n<p>这只是 curl 的基本语法和常用选项，curl 还有许多其他选项和用法，可以通过 <code>curl --help</code> 命令查看完整的文档。</p>\n<h3 id=\"以下是-curl-常见的-HTTP-请求方法的示例代码：\"><a href=\"#以下是-curl-常见的-HTTP-请求方法的示例代码：\" class=\"headerlink\" title=\"以下是 curl 常见的 HTTP 请求方法的示例代码：\"></a>以下是 curl 常见的 HTTP 请求方法的示例代码：</h3><ol>\n<li>GET 请求：</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">curl http:&#x2F;&#x2F;example.com</code></pre>\n\n<ol start=\"2\">\n<li>POST 请求：</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">curl -X POST -H &quot;Content-Type: application&#x2F;json&quot; -d &#39;&#123;&quot;name&quot;: &quot;John&quot;, &quot;age&quot;: 30&#125;&#39; http:&#x2F;&#x2F;example.com</code></pre>\n\n<ol start=\"3\">\n<li>PUT 请求：</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">curl -X PUT -H &quot;Content-Type: application&#x2F;json&quot; -d &#39;&#123;&quot;name&quot;: &quot;John&quot;, &quot;age&quot;: 30&#125;&#39; http:&#x2F;&#x2F;example.com&#x2F;1</code></pre>\n\n<ol start=\"4\">\n<li>DELETE 请求：</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">curl -X DELETE http:&#x2F;&#x2F;example.com&#x2F;1</code></pre>\n\n<ol start=\"5\">\n<li>PATCH 请求：</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">curl -X PATCH -H &quot;Content-Type: application&#x2F;json&quot; -d &#39;&#123;&quot;age&quot;: 31&#125;&#39; http:&#x2F;&#x2F;example.com&#x2F;1</code></pre>\n\n<ol start=\"6\">\n<li>HEAD 请求：</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">curl -I http:&#x2F;&#x2F;example.com</code></pre>\n\n<ol start=\"7\">\n<li>OPTIONS 请求：</li>\n</ol>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">curl -X OPTIONS http:&#x2F;&#x2F;example.com</code></pre>\n\n<p>以上示例中，<code>-X</code> 参数用于指定请求方法，<code>-H</code> 参数用于设置请求头部，<code>-d</code> 参数用于设置请求体数据，<code>-I</code> 参数用于只返回响应头部，<code>-d</code> 参数用于只发送请求头部并获取服务器端支持的 HTTP 方法。请注意，实际的请求 URL 需要替换为您的目标地址。</p>\n<h3 id=\"动机\"><a href=\"#动机\" class=\"headerlink\" title=\"动机\"></a>动机</h3><p>curl 是一个命令行工具，用于在终端中发送 HTTP 请求并获取响应，常用于测试和调试 Web 服务。它的产生主要是为了方便地在命令行中进行 HTTP 请求，以便快速测试和调试 API 接口、验证服务器的响应、模拟客户端请求等。</p>\n<p>以下是一些 curl 的主要动机：</p>\n<ol>\n<li><p>简单易用：curl 提供了简单的命令行接口，可以通过简单的命令和选项来发送 HTTP 请求，无需编写复杂的代码，非常方便和易用。</p>\n</li>\n<li><p>多协议支持：curl 支持多种协议，包括 HTTP、HTTPS、FTP、SMTP 等，可以用于测试和调试各种类型的 Web 服务。</p>\n</li>\n<li><p>强大的选项：curl 提供了丰富的选项，可以设置请求头部、请求方法、请求体数据、认证信息、代理、SSL 证书验证等，可以满足不同的测试和调试需求。</p>\n</li>\n<li><p>跨平台支持：curl 可以在多个平台上运行，包括 Windows、macOS、Linux 等，具有很好的跨平台支持，方便在不同的操作系统上使用。</p>\n</li>\n<li><p>广泛应用：curl 在开发者社区中非常流行，广泛应用于 Web 开发、API 测试、网络调试等场景，被广大开发者广泛使用和推崇。</p>\n</li>\n</ol>\n<p>综上所述，curl 的产生主要是为了提供一种简单、方便、跨平台的方式来发送 HTTP 请求，用于测试和调试 Web 服务，满足开发者的需求。</p>\n","text":"curl是什么curl 是一个用于发送 HTTP 请求的命令行工具，支持多种协议，包括 HTTP、HTTPS、FTP、SMTP 等。其基本语法如下： curl [options] [URL] 其中，options 是 curl 命令的选项，用于设置请求的各种参数，URL 是目标 ...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"工具","slug":"工具","count":26,"path":"api/categories/工具.json"}],"tags":[{"name":"工具","slug":"工具","count":20,"path":"api/tags/工具.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#curl\"><span class=\"toc-text\">curl</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%98%AF%E4%BB%80%E4%B9%88\"><span class=\"toc-text\">是什么</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%A5%E4%B8%8B%E6%98%AF-curl-%E5%B8%B8%E8%A7%81%E7%9A%84-HTTP-%E8%AF%B7%E6%B1%82%E6%96%B9%E6%B3%95%E7%9A%84%E7%A4%BA%E4%BE%8B%E4%BB%A3%E7%A0%81%EF%BC%9A\"><span class=\"toc-text\">以下是 curl 常见的 HTTP 请求方法的示例代码：</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%8A%A8%E6%9C%BA\"><span class=\"toc-text\">动机</span></a></li></ol></li></ol>","author":{"name":"十三","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>多学一点，多想一点，多做一点</p><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"golang 的一些疑问","uid":"5c7c230f682d9d5e4199756d8ecfb6e2","slug":"2023-05-04go","date":"2023-05-04T01:30:35.000Z","updated":"2023-05-15T13:17:32.999Z","comments":true,"path":"api/articles/2023-05-04go.json","keywords":null,"cover":[],"text":" 引用类型和值类型 Go 中严格区分引用类型和值类型 golang appendappend 是 Go 语言中的内置函数，用于向切片中追加元素。其语法为： append(slice []Type, elems ...Type) []Type 其中，slice 是要追加元素的切片，...","link":"","photos":[],"count_time":{"symbolsCount":"48k","symbolsTime":"44 mins."},"categories":[{"name":"Go","slug":"Go","count":19,"path":"api/categories/Go.json"}],"tags":[{"name":"chatGPT2021","slug":"chatGPT2021","count":15,"path":"api/tags/chatGPT2021.json"},{"name":"Go","slug":"Go","count":19,"path":"api/tags/Go.json"}],"author":{"name":"十三","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>多学一点，多想一点，多做一点</p><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}},"next_post":{"title":"tampermonkey使用","uid":"d62e160e4077fd4450156ded5ae45c33","slug":"2023-04-27tampermonkey","date":"2023-04-27T09:32:00.000Z","updated":"2023-05-15T13:17:32.998Z","comments":true,"path":"api/articles/2023-04-27tampermonkey.json","keywords":null,"cover":[],"text":"动机很多网页没有适配 dark 主题，我觉得 dark 看起来更舒服些 之前操作页面加载完成后，在控制台执行如下代码，页面成 dark 模式（自己注入脚本实现） var st &#x3D; document.createElement(&#39;style&#39;); st.i...","link":"","photos":[],"count_time":{"symbolsCount":895,"symbolsTime":"1 mins."},"categories":[{"name":"工具","slug":"工具","count":26,"path":"api/categories/工具.json"}],"tags":[{"name":"工具","slug":"工具","count":20,"path":"api/tags/工具.json"}],"author":{"name":"十三","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>多学一点，多想一点，多做一点</p><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}}}