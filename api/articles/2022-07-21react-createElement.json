{"title":"React@16.5.0 createElement","uid":"5d9b43eaa4875051b6cba337b4fe23d2","slug":"2022-07-21react-createElement","date":"2022-07-21T03:18:50.000Z","updated":"2022-09-16T15:02:24.977Z","comments":true,"path":"api/articles/2022-07-21react-createElement.json","keywords":null,"cover":null,"content":"<h2 id=\"项目开发时候书写代码\"><a href=\"#项目开发时候书写代码\" class=\"headerlink\" title=\"项目开发时候书写代码\"></a>项目开发时候书写代码</h2><p><strong>某个页面或者是组件</strong></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F;  class ReactComponent extends React.Component &#123;\n&#x2F;&#x2F;      render() &#123;\n&#x2F;&#x2F;          return &lt;p className&#x3D;&quot;class&quot;&gt;Hello React&lt;&#x2F;p&gt;;\n&#x2F;&#x2F;      &#125;\n&#x2F;&#x2F;  &#125;\n&#x2F;&#x2F;  以上代码会编译为：\nclass ReactComponent extends React.Component &#123;\n  render() &#123;\n    React.createElement(&quot;p&quot;, &#123; className: &quot;class&quot; &#125;, &quot;Hello React&quot;); &#x2F;&#x2F; 之前看到蜜壳代码是这个样子，我还以为是研发手写的呢\n  &#125;\n&#125;\n\n&#x2F;&#x2F;  &lt;ReactComponent someProp&#x3D;&quot;prop&quot; &#x2F;&gt;\nReact.createElement(ReactComponent, &#123; someProp: &quot;prop&quot; &#125;, null);</code></pre>\n\n<p>以上代码 api 在<code>packages/react/src/React.js</code></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">const React &#x3D; &#123;\n  createElement: createElement, &#x2F;&#x2F; packages&#x2F;react&#x2F;src&#x2F;ReactElement.js  createElement -&gt; ReactElement\n  version: ReactVersion,\n&#125;;\nexport default React;</code></pre>\n\n<h2 id=\"React-是如何将虚拟-DOM-转换为真实-DOM\"><a href=\"#React-是如何将虚拟-DOM-转换为真实-DOM\" class=\"headerlink\" title=\"React 是如何将虚拟 DOM 转换为真实 DOM\"></a>React 是如何将虚拟 DOM 转换为真实 DOM</h2><ol>\n<li>首先我们要通过 <code>React.createElement</code> 函数来将我们定义好的组件进行转换为 React 元素</li>\n<li>将创建好的 <code>React</code> 元素通过调用 <code>ReactDom.render</code> 来进行渲染</li>\n<li><code>ReactDom.render</code> 调用后先创建根对象 <code>root</code>，然后调用 <code>root.render</code></li>\n<li>然后经过若干函数调用，来到 <code>workLoop</code> 函数，它将遍历虚拟 DOM 树，将下一个需要处理的虚拟 DOM 传给 <code>performUnitOfWork</code>，<code>performUnitOfWork</code> 再将虚拟 DOM 传给 <code>beginWork</code> 后，<code>beginWork</code>根据虚拟 DOM 的类型不同进行相应处理，并对子节点进行处理为 <code>Fiber</code> 类型，为 <code>Fiber</code> 类型虚拟 DOM , 添加父节点、兄弟节点等细节，以方便遍历树。</li>\n<li><code>beginWork</code> 处理完后返回需要处理的子元素再继续处理，直到没有子元素（即返回 null），此时 <code>performUnitOfWork</code> 调用 <code>completeUnitOfWork</code> 处理这颗<code>虚拟 DOM 子树</code>，将其转<code>换为真实 DOM</code>。</li>\n<li>最后所有的<code>虚拟 DOM</code> 都将转为<code>真实 DOM</code>。</li>\n</ol>\n<h2 id=\"函数调用过程\"><a href=\"#函数调用过程\" class=\"headerlink\" title=\"函数调用过程\"></a>函数调用过程</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">root.render(children, callback) -&gt;\nDOMRenderer.updateContainer(children, root, null, work._onCommit) -&gt;\nupdateContainerAtExpirationTime(\n    element,\n    container,\n    parentComponent,\n    expirationTime,\n    callback,\n) -&gt;\nscheduleRootUpdate(current, element, expirationTime, callback) -&gt;\nscheduleWork(current, expirationTime) -&gt;\nrequestWork(root, rootExpirationTime) -&gt;\nperformWorkOnRoot(root, Sync, false) -&gt;\nrenderRoot(root, false) -&gt;\nworkLoop(isYieldy) -&gt;\nperformUnitOfWork(nextUnitOfWork: Fiber) &#x3D;&gt; Fiber | null -&gt;\nbeginWork(current, workInProgress, nextRenderExpirationTime)\n</code></pre>\n\n<p><strong>使用 ReactDom 渲染到 页面上</strong></p>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">ReactDom.render(React.createElement(App), document.getElementById(&quot;root&quot;));</code></pre>\n\n<h2 id=\"我艹，有点懵～\"><a href=\"#我艹，有点懵～\" class=\"headerlink\" title=\"我艹，有点懵～\"></a>我艹，有点懵～</h2><p>待补，先写个其他的压压惊</p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><p><a href=\"https://blog.csdn.net/weixin_34221276/article/details/88770678\" target=\"_blank\" >React 源码阅读：虚拟 DOM 的初始化</a></p>\n<p><a href=\"https://www.cnblogs.com/JhoneLee/p/9481321.html\" target=\"_blank\" >React 16 源码瞎几把解读 【一】 从jsx到一个react 虚拟dom对象</a></p>\n<p><a href=\"https://www.cnblogs.com/JhoneLee/p/9482911.html\" target=\"_blank\" >React 16 源码瞎几把解读 【二】 react组件的解析过程</a></p>\n<p><a href=\"https://www.cnblogs.com/JhoneLee/p/9481618.html\" target=\"_blank\" >React 16 源码瞎几把解读 【三 点 一】 把react组件对象弄到dom中去(矛头指向fiber，fiber不解读这个过程也不知道) </a></p>\n<p><a href=\"https://www.cnblogs.com/JhoneLee/p/9493776.html\" target=\"_blank\" >React 16 源码瞎几把解读 【三 点 二】 react中的fiberRoot</a></p>\n","text":"项目开发时候书写代码某个页面或者是组件 &#x2F;&#x2F; class ReactComponent extends React.Component &#123; &#x2F;&#x2F; render() &#123; &#x2F;&#x2F; return &lt;p ...","link":"","photos":[],"count_time":{"symbolsCount":"2.4k","symbolsTime":"2 mins."},"categories":[{"name":"react_1650","slug":"react-1650","count":5,"path":"api/categories/react-1650.json"}],"tags":[{"name":"react_1650","slug":"react-1650","count":5,"path":"api/tags/react-1650.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E9%A1%B9%E7%9B%AE%E5%BC%80%E5%8F%91%E6%97%B6%E5%80%99%E4%B9%A6%E5%86%99%E4%BB%A3%E7%A0%81\"><span class=\"toc-text\">项目开发时候书写代码</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#React-%E6%98%AF%E5%A6%82%E4%BD%95%E5%B0%86%E8%99%9A%E6%8B%9F-DOM-%E8%BD%AC%E6%8D%A2%E4%B8%BA%E7%9C%9F%E5%AE%9E-DOM\"><span class=\"toc-text\">React 是如何将虚拟 DOM 转换为真实 DOM</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8%E8%BF%87%E7%A8%8B\"><span class=\"toc-text\">函数调用过程</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%88%91%E8%89%B9%EF%BC%8C%E6%9C%89%E7%82%B9%E6%87%B5%EF%BD%9E\"><span class=\"toc-text\">我艹，有点懵～</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5\"><span class=\"toc-text\">参考链接</span></a></li></ol>","author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"React@16.5.0 unsafe_","uid":"f07658ed4d8d481756bfa8b0d656b104","slug":"2022-07-21react-unsafe","date":"2022-07-21T06:23:16.000Z","updated":"2022-09-16T15:02:37.982Z","comments":true,"path":"api/articles/2022-07-21react-unsafe.json","keywords":null,"cover":null,"text":"我整理这篇文章的目的很多时候，我在学技术时候更多关注的是教程和文档,原因有三：时间紧、任务重、新技术很多 最近手头无事，刚好搜源码搜到了，希望闲暇之余，你也能了解 React 变更过程，加深 React 的理解 过时的组件生命周期往往会带来不安全的编码实践 componentWi...","link":"","photos":[],"count_time":{"symbolsCount":"17k","symbolsTime":"15 mins."},"categories":[{"name":"react_1650","slug":"react-1650","count":5,"path":"api/categories/react-1650.json"}],"tags":[{"name":"react_1650","slug":"react-1650","count":5,"path":"api/tags/react-1650.json"}],"author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}},"next_post":{"title":"React@16.5.0 syntheticEvent","uid":"8cd3fa1949a115d76dd37b87c1175bed","slug":"2022-07-20react-syntheticEvent","date":"2022-07-20T01:18:53.000Z","updated":"2022-11-21T13:08:33.112Z","comments":true,"path":"api/articles/2022-07-20react-syntheticEvent.json","keywords":null,"cover":[],"text":"本文说明本文主要内容是 React v16.5.0, 部分内容会涉及到 React v17+, React v17+合成事件与 React16 有很大差异 React 和事件系统概述见 &#x2F;** * * +------------+ . * | DOM | . * +--...","link":"","photos":[],"count_time":{"symbolsCount":"14k","symbolsTime":"13 mins."},"categories":[{"name":"react_1650","slug":"react-1650","count":5,"path":"api/categories/react-1650.json"}],"tags":[{"name":"react_1650","slug":"react-1650","count":5,"path":"api/tags/react-1650.json"}],"author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}}}