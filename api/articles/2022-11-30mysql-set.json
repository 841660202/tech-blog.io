{"title":"6.系统学习 mysql 集合","uid":"e534e8fd944f5586c5ed602b0ca27489","slug":"2022-11-30mysql-set","date":"2022-11-30T13:28:00.000Z","updated":"2022-11-30T13:38:44.192Z","comments":true,"path":"api/articles/2022-11-30mysql-set.json","keywords":null,"cover":"https://img2.baidu.com/it/u=3082189317,4216979427&fm=253&fmt=auto&app=120&f=PNG?w=1000&h=500","content":"<h2 id=\"并集-UNION\"><a href=\"#并集-UNION\" class=\"headerlink\" title=\"并集 UNION\"></a>并集 UNION</h2><p>MySQL UNION 运算符允许您将两个或多个查询结果集合并到一个结果集中<br>要使用 UNION 运算符组合<code>两个或多个查询的结果集</code>，必须遵循以下基本规则：</p>\n<ul>\n<li>首先，所有 SELECT 语句中出现的<code>列的数量和顺序 必须相同</code>。</li>\n<li>其次，<code>列的数据类型必须相同或可转换</code>。</li>\n<li><code>默认情况下，</code> 即使您未明确指定 <code>DISTINCT</code> 运算符<code>，UNION 运算符也会删除 重复的行</code>。</li>\n</ul>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">DROP TABLE IF EXISTS t1;\nDROP TABLE IF EXISTS t2;\n\nCREATE TABLE t1 (\n    id INT PRIMARY KEY\n);\n\nCREATE TABLE t2 (\n    id INT PRIMARY KEY\n);\n\nINSERT INTO t1 VALUES (1),(2),(3);\nINSERT INTO t2 VALUES (2),(3),(4);\n\n\nSELECT id\nFROM t1\nUNION ALL -- 重复项出现在组合结果集中\nSELECT id\nFROM t2;</code></pre>\n\n<h3 id=\"UNION-vs-JOIN\"><a href=\"#UNION-vs-JOIN\" class=\"headerlink\" title=\"UNION vs. JOIN\"></a>UNION vs. JOIN</h3><ul>\n<li>JOIN 是水平组合结果集，</li>\n<li>UNION 是垂直附加结果集。下图说明了 UNION 和之间的区别 JOIN：</li>\n</ul>\n<img src=\"http://t-blog-images.aijs.top/img/202211290935843.webp\" />\n\n<h2 id=\"交集-MySQL-不支持-INTERSECT-操作符\"><a href=\"#交集-MySQL-不支持-INTERSECT-操作符\" class=\"headerlink\" title=\"交集(MySQL 不支持 INTERSECT 操作符)\"></a>交集(MySQL 不支持 INTERSECT 操作符)</h2><p>INTERSECT 运算符是一个集合运算符仅返回两个查询或多个查询的不同行。</p>\n<p>以下说明了 INTERSECT 运算符的语法。</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">(SELECT column_list FROM table_1)\nINTERSECT\n(SELECT column_list FROM table_2);\n</code></pre>\n\n<p><code>INTERSECT</code> 运算符比较两个查询的结果，并返回作为由左，右输出的查询的不同的行。</p>\n<p>要将 <code>INTERSECT</code> 运算符用于两个查询，应用以下规则：</p>\n<ul>\n<li>列的顺序和数量必须相同。</li>\n<li>相应列的数据类型必须兼容。</li>\n</ul>\n<img src=\"http://t-blog-images.aijs.top/img/202211290938929.webp\" style=\"width:500px;max-width:100%\" />\n\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">CREATE TABLE t1 (\n    id INT PRIMARY KEY\n);\n\nCREATE TABLE t2 LIKE t1;\n\nINSERT INTO t1(id) VALUES(1),(2),(3);\n\nINSERT INTO t2(id) VALUES(2),(3),(4);\n\n-- MySQL不支持INTERSECT操作符\n(SELECT id\nFROM t1)\nINTERSECT\n(SELECT id\nFROM t2);</code></pre>\n\n<h3 id=\"distinct-INNER-JOIN-模拟\"><a href=\"#distinct-INNER-JOIN-模拟\" class=\"headerlink\" title=\"distinct + INNER JOIN 模拟\"></a>distinct + INNER JOIN 模拟</h3><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">SELECT DISTINCT\n   id\nFROM t1\n   INNER JOIN t2\nUSING(id);</code></pre>\n\n<h3 id=\"使用-IN-运算符和子查询模拟\"><a href=\"#使用-IN-运算符和子查询模拟\" class=\"headerlink\" title=\"使用 IN 运算符和子查询模拟\"></a>使用 IN 运算符和子查询模拟</h3><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">SELECT DISTINCT\n    id\nFROM\n    t1\nWHERE\n    id IN\n    (SELECT id FROM t2);</code></pre>\n\n<h2 id=\"差集-MINUS-mysql-不支持-MINUS）\"><a href=\"#差集-MINUS-mysql-不支持-MINUS）\" class=\"headerlink\" title=\"差集 MINUS (mysql 不支持 MINUS）\"></a>差集 MINUS (mysql 不支持 MINUS）</h2><p>MINUS 比较两个查询的结果，并返回第一个查询中不是由第二个查询输出的不同行。</p>\n<p>以下说明了 MINUS 运算符的语法：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">SELECT column_list_1 FROM table_1\nMINUS\nSELECT columns_list_2 FROM table_2;</code></pre>\n\n<p>使用 MINUS 运算符的查询的基本规则如下：</p>\n<ul>\n<li>数量和两列的顺序 <code>column_list_1</code> 和 <code>column_list_2</code> 必须相同。</li>\n<li>两个查询中相应列的数据类型必须兼容。</li>\n</ul>\n<img src=\"http://t-blog-images.aijs.top/img/202211291001282.webp\" style=\"width:500px;max-width:100%\" />\n\n<p>假设我们有两个表 t1 并 t2 具有以下结构和数据：</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">CREATE TABLE t1 (\n    id INT PRIMARY KEY\n);\n\nCREATE TABLE t2 (\n    id INT PRIMARY KEY\n);\n\nINSERT INTO t1 VALUES (1),(2),(3);\nINSERT INTO t2 VALUES (2),(3),(4);</code></pre>\n\n<p>以下查询返回 t1 表的查询中的不同值，这些值在表的查询结果中找不到 t2。</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">SELECT id FROM t1\nMINUS\nSELECT id FROM t2;</code></pre>\n\n<h3 id=\"模拟-1\"><a href=\"#模拟-1\" class=\"headerlink\" title=\"模拟 1\"></a>模拟 1</h3><pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">SELECT id\nFROM t1\n\tLEFT JOIN t2 USING (id)\nWHERE t2.id IS NULL;</code></pre>\n\n<h3 id=\"模拟-2\"><a href=\"#模拟-2\" class=\"headerlink\" title=\"模拟 2\"></a>模拟 2</h3>","text":"并集 UNIONMySQL UNION 运算符允许您将两个或多个查询结果集合并到一个结果集中要使用 UNION 运算符组合两个或多个查询的结果集，必须遵循以下基本规则： 首先，所有 SELECT 语句中出现的列的数量和顺序 必须相同。 其次，列的数据类型必须相同或可转换。 默认情...","link":"","photos":[],"count_time":{"symbolsCount":"1.8k","symbolsTime":"2 mins."},"categories":[{"name":"Mysql","slug":"Mysql","count":12,"path":"api/categories/Mysql.json"}],"tags":[{"name":"Mysql","slug":"Mysql","count":12,"path":"api/tags/Mysql.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B9%B6%E9%9B%86-UNION\"><span class=\"toc-text\">并集 UNION</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#UNION-vs-JOIN\"><span class=\"toc-text\">UNION vs. JOIN</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%BA%A4%E9%9B%86-MySQL-%E4%B8%8D%E6%94%AF%E6%8C%81-INTERSECT-%E6%93%8D%E4%BD%9C%E7%AC%A6\"><span class=\"toc-text\">交集(MySQL 不支持 INTERSECT 操作符)</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#distinct-INNER-JOIN-%E6%A8%A1%E6%8B%9F\"><span class=\"toc-text\">distinct + INNER JOIN 模拟</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8-IN-%E8%BF%90%E7%AE%97%E7%AC%A6%E5%92%8C%E5%AD%90%E6%9F%A5%E8%AF%A2%E6%A8%A1%E6%8B%9F\"><span class=\"toc-text\">使用 IN 运算符和子查询模拟</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%B7%AE%E9%9B%86-MINUS-mysql-%E4%B8%8D%E6%94%AF%E6%8C%81-MINUS%EF%BC%89\"><span class=\"toc-text\">差集 MINUS (mysql 不支持 MINUS）</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A8%A1%E6%8B%9F-1\"><span class=\"toc-text\">模拟 1</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A8%A1%E6%8B%9F-2\"><span class=\"toc-text\">模拟 2</span></a></li></ol></li></ol>","author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"眼中有光，心中有梦，脚下有路","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"7.系统学习 mysql 索引","uid":"156cde27ff1fb560c12a994aea6ee11c","slug":"2022-12-01mysql-索引","date":"2022-12-01T01:55:23.000Z","updated":"2022-12-02T13:20:57.188Z","comments":true,"path":"api/articles/2022-12-01mysql-索引.json","keywords":null,"cover":"https://img2.baidu.com/it/u=3082189317,4216979427&fm=253&fmt=auto&app=120&f=PNG?w=1000&h=500","text":"索引的作用使用索引快速查找具有特定列值的行 创建 使用主键或唯一键创建表时，MySQL 会自动创建一个名为 PRIMARY 的特殊索引。索引称为聚簇索引 PRIMARY 索引是特殊的，因为索引本身与数据一起存储在同一个表中。 聚簇索引强制执行表中的行顺序。 -- 要为列或一组列添...","link":"","photos":[],"count_time":{"symbolsCount":"8.8k","symbolsTime":"8 mins."},"categories":[{"name":"Mysql","slug":"Mysql","count":12,"path":"api/categories/Mysql.json"}],"tags":[{"name":"Mysql","slug":"Mysql","count":12,"path":"api/tags/Mysql.json"}],"author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"眼中有光，心中有梦，脚下有路","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}},"next_post":{"title":"5.系统学习 mysql erd","uid":"50df4ae65a1c6c2ab192fc07c4455498","slug":"2022-11-30mysql-erd","date":"2022-11-30T09:13:32.000Z","updated":"2022-11-30T13:38:57.490Z","comments":true,"path":"api/articles/2022-11-30mysql-erd.json","keywords":null,"cover":"https://img2.baidu.com/it/u=3082189317,4216979427&fm=253&fmt=auto&app=120&f=PNG?w=1000&h=500","text":"ERER 实体关系 Entity RelationshipER 图鱼尾符号demo1 见 demo2 见 vscode vuerd-vscode 插件自动生成这个图是自动生成的， 1 对多0&#x2F;1 对多 这些事如何在 sql 中体现的？难道是对数据进行分析 vuerd-v...","link":"","photos":[],"count_time":{"symbolsCount":"3.4k","symbolsTime":"3 mins."},"categories":[{"name":"Mysql","slug":"Mysql","count":12,"path":"api/categories/Mysql.json"}],"tags":[{"name":"Mysql","slug":"Mysql","count":12,"path":"api/tags/Mysql.json"}],"author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/avatar.jpeg","link":"/","description":"眼中有光，心中有梦，脚下有路","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}}}