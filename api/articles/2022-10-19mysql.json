{"title":"Mysql 刚好遇到","uid":"42065b7e430b2dd22177e0c97bc4c0bd","slug":"2022-10-19mysql","date":"2022-10-19T01:13:08.000Z","updated":"2022-12-02T13:20:57.185Z","comments":true,"path":"api/articles/2022-10-19mysql.json","keywords":null,"cover":"https://img2.baidu.com/it/u=3082189317,4216979427&fm=253&fmt=auto&app=120&f=PNG?w=1000&h=500","content":"<h2 id=\"数据库密码修改\"><a href=\"#数据库密码修改\" class=\"headerlink\" title=\"数据库密码修改\"></a>数据库密码修改</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 登陆 原密码 12345678,为了保证同一份代码可以在两台电脑上，无差别运行，密码改成一致的123456\n👑 ~ $ mysql -u root -p\nEnter password:\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 9\nServer version: 5.7.18 MySQL Community Server (GPL)\n\nCopyright (c) 2000, 2017, Oracle and&#x2F;or its affiliates. All rights reserved.\n\nOracle is a registered trademark of Oracle Corporation and&#x2F;or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType &#39;help;&#39; or &#39;\\h&#39; for help. Type &#39;\\c&#39; to clear the current input statement.\n# 修改密码\nmysql&gt; set password for root@localhost &#x3D; password(&#39;123456&#39;)\n    -&gt; ;\nQuery OK, 0 rows affected, 1 warning (0.01 sec)\n\nmysql&gt; quit\nBye\n# 重新登陆\n👑 ~ $ mysql -u root -p\nEnter password:\nWelcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 10\nServer version: 5.7.18 MySQL Community Server (GPL)\n\nCopyright (c) 2000, 2017, Oracle and&#x2F;or its affiliates. All rights reserved.\n\nOracle is a registered trademark of Oracle Corporation and&#x2F;or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType &#39;help;&#39; or &#39;\\h&#39; for help. Type &#39;\\c&#39; to clear the current input statement.\n\nmysql&gt;</code></pre>\n\n<h2 id=\"基本操作\"><a href=\"#基本操作\" class=\"headerlink\" title=\"基本操作\"></a>基本操作</h2><p>命令查看、删除，比管理工具要方便</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\"># 查看数据库\nmysql&gt; show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| api_data           |\n| basic_platform     |\n| cache_data         |\n| cnpmcore           |\n| cnpmjs             |\n| cnpmjs_test        |\n| learn-gorm         |\n| mysql              |\n| nest-app           |\n| performance_schema |\n| sys                |\n| test               |\n| ty_feedback      |\n| ty_rms           |\n+--------------------+\n15 rows in set (0.00 sec)\n# 使用数据库\nmysql&gt; use learn-gorm;\nDatabase changed\nmysql&gt; show tables;\nEmpty set (0.01 sec)\n# 查看表\nmysql&gt; show tables;\n+----------------------+\n| Tables_in_learn-gorm |\n+----------------------+\n| dogs                 |\n| girl_gods            |\n+----------------------+\n2 rows in set (0.00 sec)\n# 查看表信息\nmysql&gt; desc dogs;\n+-------------+---------------------+------+-----+---------+----------------+\n| Field       | Type                | Null | Key | Default | Extra          |\n+-------------+---------------------+------+-----+---------+----------------+\n| id          | bigint(20) unsigned | NO   | PRI | NULL    | auto_increment |\n| created_at  | datetime(3)         | YES  |     | NULL    |                |\n| updated_at  | datetime(3)         | YES  |     | NULL    |                |\n| deleted_at  | datetime(3)         | YES  | MUL | NULL    |                |\n| name        | longtext            | YES  |     | NULL    |                |\n| girl_god_id | bigint(20) unsigned | YES  | MUL | NULL    |                |\n+-------------+---------------------+------+-----+---------+----------------+\n6 rows in set (0.01 sec)\n\nmysql&gt;</code></pre>\n\n<h2 id=\"key、primary-key、unique-key、index-区别\"><a href=\"#key、primary-key、unique-key、index-区别\" class=\"headerlink\" title=\"key、primary key、unique key、index 区别\"></a>key、primary key、unique key、index 区别</h2><p><a href=\"https://blog.51cto.com/u_10980859/5323031\" target=\"_blank\" >见， 没看懂</a></p>\n<h2 id=\"mysql-命令行清屏\"><a href=\"#mysql-命令行清屏\" class=\"headerlink\" title=\"mysql 命令行清屏\"></a>mysql 命令行清屏</h2><p>linux</p>\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ctrl + l</code></pre>\n\n<h2 id=\"select-…-for-update-查询\"><a href=\"#select-…-for-update-查询\" class=\"headerlink\" title=\"select … for update 查询\"></a>select … for update 查询</h2><p>select 查询是不加锁的，select…for update 是会加锁的，而且是悲观锁，但是在不同查询条件时候加的锁的类型（行锁，表锁）是不同的。</p>\n<pre class=\"line-numbers language-sql\" data-language=\"sql\"><code class=\"language-sql\">select * from t_user where id &#x3D; 1 for update；\n</code></pre>\n\n<p>在 where 后面查询条件是主键索引，唯一索引时候是行锁<br>查询条件是普通字段时候加的是表锁</p>\n<h2 id=\"数据库锁\"><a href=\"#数据库锁\" class=\"headerlink\" title=\"数据库锁\"></a>数据库锁</h2><p><a href=\"http://www.wjhsh.net/zhaoyl9-p-10856170.html\" target=\"_blank\" >sql 语句对数据库表进行加锁和解锁, 一脸懵逼</a></p>\n<h2 id=\"MySQL-HAVING-用法\"><a href=\"#MySQL-HAVING-用法\" class=\"headerlink\" title=\"MySQL HAVING 用法\"></a>MySQL HAVING 用法</h2><h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><p><a href=\"https://gorm.io/zh_CN/docs/advanced_query.html#%E5%AD%90%E6%9F%A5%E8%AF%A2\" target=\"_blank\" >gorm 子查询</a></p>\n<p><a href=\"https://www.jianshu.com/p/7701bf10167b\" target=\"_blank\" >MySQL HAVING 用法</a></p>\n<h3 id=\"什么时候用\"><a href=\"#什么时候用\" class=\"headerlink\" title=\"什么时候用\"></a>什么时候用</h3><p><strong>什么时候用 WHERE 什么时候使用 HAVING 呢？</strong></p>\n<ul>\n<li>WHERE 子句 &#x3D; 指定行所对应的条件</li>\n<li>HAVING 子句 &#x3D; 指定组所对应的条件</li>\n<li>WHERE 处理速度比 HAVING 处理速度高</li>\n<li>聚合键所对应的条件不应该书写在 HAVING 子句当中，而应该书写在 WHERE 子句当中。</li>\n</ul>\n<p>作者：RicherYY<br>链接：<a href=\"https://www.jianshu.com/p/7701bf10167b\">https://www.jianshu.com/p/7701bf10167b</a><br>来源：简书<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p>\n<h3 id=\"mysql-insert-ignore-into\"><a href=\"#mysql-insert-ignore-into\" class=\"headerlink\" title=\"mysql insert ignore into\"></a>mysql insert ignore into</h3><p><a href=\"https://blog.csdn.net/zgaoq/article/details/124432806\" target=\"_blank\" >见</a></p>\n<p>insert ignore into : 忽略重复的记录，直接插入数据。</p>\n<p><strong>1、插入的数据是主键冲突时</strong></p>\n<p>insert ignore into 会给出 warnings，show warnings 就可以看到提示主键冲突；并且本次插入无效</p>\n<p><em>Query OK, 0 rows affected, 3 warnings (0.01 sec)</em></p>\n<p><strong>2、没有主键冲突时，直接插入数据</strong></p>\n<p>insert into 与 insert ignore into 都是直接插入数据</p>\n<h2 id=\"mysql-如何对多个行数据，执行不同的更新操作\"><a href=\"#mysql-如何对多个行数据，执行不同的更新操作\" class=\"headerlink\" title=\"mysql 如何对多个行数据，执行不同的更新操作\"></a>mysql 如何对多个行数据，执行不同的更新操作</h2><p>TODO：? 只能用循环执行多次 Update? 有没有并发执行？</p>\n<h2 id=\"mysql-命令行执行命令加上注释\"><a href=\"#mysql-命令行执行命令加上注释\" class=\"headerlink\" title=\"mysql 命令行执行命令加上注释\"></a>mysql 命令行执行命令加上注释</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">mysql&gt; show create table  users \\G; #hello\n-- *************************** 1. row ***************************\n--        Table: users\n-- Create Table: CREATE TABLE &#96;users&#96; (\n--   &#96;id&#96; bigint(20) unsigned NOT NULL AUTO_INCREMENT,\n--   &#96;created_at&#96; datetime(3) DEFAULT NULL,\n--   &#96;updated_at&#96; datetime(3) DEFAULT NULL,\n--   &#96;deleted_at&#96; datetime(3) DEFAULT NULL,\n--   &#96;name&#96; varchar(255) DEFAULT NULL,\n--   PRIMARY KEY (&#96;id&#96;),\n--   KEY &#96;idx_users_deleted_at&#96; (&#96;deleted_at&#96;)\n-- ) ENGINE&#x3D;InnoDB DEFAULT CHARSET&#x3D;utf8mb4\n-- 1 row in set (0.00 sec)</code></pre>\n\n<h2 id=\"索引\"><a href=\"#索引\" class=\"headerlink\" title=\"索引\"></a>索引</h2><p>条件是辅助索引，先找到主索引，通过主索引找到数据记录</p>\n<img src=\"http://t-blog-images.aijs.top/img/202210212251698.png\" />\n\n<p><strong>这里涉及到一个优化：</strong></p>\n<p>如果通过辅助索引，查到覆盖索引相关字段，就不用做二次查询，也就是上图的 ②，省了一次查询自然快很多；</p>\n<p>如果 select 的内容不在覆盖索引字段中，会启动二次查询，所以吧，不要用<code>select *</code></p>\n<p><a href=\"https://gorm.io/zh_CN/docs/indexes.html\" target=\"_blank\" >gorm 索引不是很懂，抱着怀疑态度，学习下</a><br><a href=\"https://zhuanlan.zhihu.com/p/453658511?utm_id=0\" target=\"_blank\" >mysql 索引相关</a><br><a href=\"https://www.bilibili.com/video/BV1Sp4y1e7W6\" target=\"_blank\" >Mysql 底层原理系列</a></p>\n<h3 id=\"什么是-B-树-B-树-B-树\"><a href=\"#什么是-B-树-B-树-B-树\" class=\"headerlink\" title=\"什么是 B 树 B+树 B-树\"></a>什么是 B 树 B+树 B-树</h3><p>+号，-号什么意思？</p>\n<h3 id=\"为什不用-hash-而用-b-树\"><a href=\"#为什不用-hash-而用-b-树\" class=\"headerlink\" title=\"为什不用 hash 而用 b+树\"></a>为什不用 hash 而用 b+树</h3><p>演示链接： <a href=\"https://www.cs.usfca.edu/~galles/visualization/Algorithms.html\" target=\"_blank\" >https://www.cs.usfca.edu/~galles&#x2F;visualization&#x2F;Algorithms.html</a></p>\n<ul>\n<li>hash 无序，查询中<code>&gt;</code>、<code>&lt; </code>等无效，值不同 hash 可能相同</li>\n</ul>\n<h2 id=\"比较-x2F-进化\"><a href=\"#比较-x2F-进化\" class=\"headerlink\" title=\"比较&#x2F;进化\"></a>比较&#x2F;进化</h2><p><strong>平衡树</strong>：左子树个数 几乎等于 右子树个数，随数据量增加，查询越来越慢 （存在回旋查找）</p>\n<p><a href=\"https://www.cs.usfca.edu/~galles/visualization/AVLtree.html\" target=\"_blank\" >Data Structure Visualizations 平衡树</a></p>\n<p><strong>B 树：</strong>相对 平衡树，高度变矮，查询速度自然快（存在回旋查找）<br><a href=\"https://www.cs.usfca.edu/~galles/visualization/BTree.html\" target=\"_blank\" >Data Structure Visualizations B 树</a><br><img src=\"http://t-blog-images.aijs.top/img/202210212320456.png\" /></p>\n<p><strong>B+树：</strong>为了解决 B 树回旋查找的问题<br><a href=\"https://www.cs.usfca.edu/~galles/visualization/BPlusTree.html\" target=\"_blank\" >Data Structure Visualizations B+树</a><br><img src=\"http://t-blog-images.aijs.top/img/202210212328461.png\" /></p>\n<ul>\n<li>非叶子节点：存 K</li>\n<li>叶子节点：存 K-V</li>\n<li>查询节点 1 与查询节点 10，会比 B 树多一步，其他节点与 B 查询次数一致</li>\n<li>回旋问题：直接通过叶子节点解决（因为叶子节点的链表是有序的）</li>\n</ul>\n<h2 id=\"SQL-NO-CACHE\"><a href=\"#SQL-NO-CACHE\" class=\"headerlink\" title=\"SQL_NO_CACHE\"></a>SQL_NO_CACHE</h2><p>不使用缓存来查询数据</p>\n<h2 id=\"百万数据-sql-优化\"><a href=\"#百万数据-sql-优化\" class=\"headerlink\" title=\"百万数据 sql 优化\"></a>百万数据 sql 优化</h2><h3 id=\"优化前\"><a href=\"#优化前\" class=\"headerlink\" title=\"优化前\"></a>优化前</h3><img src=\"http://t-blog-images.aijs.top/img/202210212342616.png\" />\n\n<h3 id=\"优化后\"><a href=\"#优化后\" class=\"headerlink\" title=\"优化后\"></a>优化后</h3><img src=\"http://t-blog-images.aijs.top/img/202210212343585.png\" />\n\n<h4 id=\"最左原则\"><a href=\"#最左原则\" class=\"headerlink\" title=\"最左原则\"></a>最左原则</h4><img src=\"http://t-blog-images.aijs.top/img/202210212346011.png\" />\n\n<h4 id=\"破坏最左原则\"><a href=\"#破坏最左原则\" class=\"headerlink\" title=\"破坏最左原则\"></a>破坏最左原则</h4><img src=\"http://t-blog-images.aijs.top/img/202210212349688.png\" />\n\n<img src=\"http://t-blog-images.aijs.top/img/202210212351307.png\" />\n\n<h4 id=\"不对索引做一些运算操作\"><a href=\"#不对索引做一些运算操作\" class=\"headerlink\" title=\"不对索引做一些运算操作\"></a>不对索引做一些运算操作</h4><img src=\"http://t-blog-images.aijs.top/img/202210212352390.png\" />\n\n<h4 id=\"索引不要放在范围查询右侧\"><a href=\"#索引不要放在范围查询右侧\" class=\"headerlink\" title=\"索引不要放在范围查询右侧\"></a>索引不要放在范围查询右侧</h4><img src=\"http://t-blog-images.aijs.top/img/202210212354861.png\" />\n\n<h4 id=\"减少select\"><a href=\"#减少select\" class=\"headerlink\" title=\"减少select *\"></a>减少<code>select *</code></h4><img src=\"http://t-blog-images.aijs.top/img/202210212355505.png\" />\n\n<h4 id=\"like-没用到索引\"><a href=\"#like-没用到索引\" class=\"headerlink\" title=\"like 没用到索引\"></a>like 没用到索引</h4><p><strong>这种索引失效</strong></p>\n<img src=\"http://t-blog-images.aijs.top/img/202210212357873.png\" />\n\n<p><strong>失效的索引也可以进行优化，使用覆盖索引</strong></p>\n<p>时间介于无索引和有索引之间</p>\n<img src=\"http://t-blog-images.aijs.top/img/202210220000120.png\" />\n\n<p><strong>索引有效</strong></p>\n<img src=\"http://t-blog-images.aijs.top/img/202210212358442.png\" />\n\n<h4 id=\"order-by\"><a href=\"#order-by\" class=\"headerlink\" title=\"order by\"></a>order by</h4><p><strong>优化前</strong><br><img src=\"http://t-blog-images.aijs.top/img/202210220002406.png\" /></p>\n<p><strong>优化后</strong><br><img src=\"http://t-blog-images.aijs.top/img/202210220004580.png\" /></p>\n<p>这种适用范围小，视频说要在代码中放内存中进行排序</p>\n<h2 id=\"mysql-中的坑\"><a href=\"#mysql-中的坑\" class=\"headerlink\" title=\"mysql 中的坑\"></a>mysql 中的坑</h2><p><a href=\"https://www.bilibili.com/video/BV1pg411A7p3\" target=\"_blank\" >https://www.bilibili.com/video/BV1pg411A7p3</a></p>\n<ul>\n<li>遇到字段 null 值，count 数据丢失 解决: 用主键，或数字</li>\n<li>distinct 数据丢失，也是 null 引起</li>\n<li>执行<code>&lt;&gt; 、!=</code>查询，遇到 null 丢数据， 解决:需要 <code>or isNull(column名)</code></li>\n<li>null 会导致 sum 求和时候，返回 null 而非 0， 会发生异常， 这个看需求把 null 做 0 处理，避开 null,视频讲错了，视频统计值最终为 0</li>\n<li><code>!=null</code> 和 <code>&lt;&gt;null</code>的查询不到数据，应该使用 <code>!isNull(column名)</code></li>\n</ul>\n<h2 id=\"explain-来分析查询计划\"><a href=\"#explain-来分析查询计划\" class=\"headerlink\" title=\"explain 来分析查询计划\"></a>explain 来分析查询计划</h2><img src=\"http://t-blog-images.aijs.top/img/202210212311527.png\" />\n\n<h2 id=\"查看连接数\"><a href=\"#查看连接数\" class=\"headerlink\" title=\"查看连接数\"></a>查看连接数</h2><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">show PROCESSLIST</code></pre>\n\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><p><a href=\"https://blog.csdn.net/m0_67683346/article/details/126139404\" target=\"_blank\" >MySQL 数据库的基础操作</a><br><a href=\"http://c.biancheng.net/view/7152.html\" target=\"_blank\" >MySQL 修改密码的 3 种方式</a></p>\n","text":"数据库密码修改# 登陆 原密码 12345678,为了保证同一份代码可以在两台电脑上，无差别运行，密码改成一致的123456 👑 ~ $ mysql -u root -p Enter password: Welcome to the MySQL monitor. Commands...","link":"","photos":[],"count_time":{"symbolsCount":"5.7k","symbolsTime":"5 mins."},"categories":[{"name":"Mysql","slug":"Mysql","count":12,"path":"api/categories/Mysql.json"}],"tags":[{"name":"Mysql","slug":"Mysql","count":12,"path":"api/tags/Mysql.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AF%86%E7%A0%81%E4%BF%AE%E6%94%B9\"><span class=\"toc-text\">数据库密码修改</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">基本操作</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#key%E3%80%81primary-key%E3%80%81unique-key%E3%80%81index-%E5%8C%BA%E5%88%AB\"><span class=\"toc-text\">key、primary key、unique key、index 区别</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#mysql-%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%B8%85%E5%B1%8F\"><span class=\"toc-text\">mysql 命令行清屏</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#select-%E2%80%A6-for-update-%E6%9F%A5%E8%AF%A2\"><span class=\"toc-text\">select … for update 查询</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%95%B0%E6%8D%AE%E5%BA%93%E9%94%81\"><span class=\"toc-text\">数据库锁</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#MySQL-HAVING-%E7%94%A8%E6%B3%95\"><span class=\"toc-text\">MySQL HAVING 用法</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BD%BF%E7%94%A8\"><span class=\"toc-text\">使用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%97%B6%E5%80%99%E7%94%A8\"><span class=\"toc-text\">什么时候用</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#mysql-insert-ignore-into\"><span class=\"toc-text\">mysql insert ignore into</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#mysql-%E5%A6%82%E4%BD%95%E5%AF%B9%E5%A4%9A%E4%B8%AA%E8%A1%8C%E6%95%B0%E6%8D%AE%EF%BC%8C%E6%89%A7%E8%A1%8C%E4%B8%8D%E5%90%8C%E7%9A%84%E6%9B%B4%E6%96%B0%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">mysql 如何对多个行数据，执行不同的更新操作</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#mysql-%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%89%A7%E8%A1%8C%E5%91%BD%E4%BB%A4%E5%8A%A0%E4%B8%8A%E6%B3%A8%E9%87%8A\"><span class=\"toc-text\">mysql 命令行执行命令加上注释</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%B4%A2%E5%BC%95\"><span class=\"toc-text\">索引</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BB%80%E4%B9%88%E6%98%AF-B-%E6%A0%91-B-%E6%A0%91-B-%E6%A0%91\"><span class=\"toc-text\">什么是 B 树 B+树 B-树</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%B8%BA%E4%BB%80%E4%B8%8D%E7%94%A8-hash-%E8%80%8C%E7%94%A8-b-%E6%A0%91\"><span class=\"toc-text\">为什不用 hash 而用 b+树</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%AF%94%E8%BE%83-x2F-%E8%BF%9B%E5%8C%96\"><span class=\"toc-text\">比较&#x2F;进化</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#SQL-NO-CACHE\"><span class=\"toc-text\">SQL_NO_CACHE</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%99%BE%E4%B8%87%E6%95%B0%E6%8D%AE-sql-%E4%BC%98%E5%8C%96\"><span class=\"toc-text\">百万数据 sql 优化</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BC%98%E5%8C%96%E5%89%8D\"><span class=\"toc-text\">优化前</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E4%BC%98%E5%8C%96%E5%90%8E\"><span class=\"toc-text\">优化后</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E6%9C%80%E5%B7%A6%E5%8E%9F%E5%88%99\"><span class=\"toc-text\">最左原则</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%A0%B4%E5%9D%8F%E6%9C%80%E5%B7%A6%E5%8E%9F%E5%88%99\"><span class=\"toc-text\">破坏最左原则</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E4%B8%8D%E5%AF%B9%E7%B4%A2%E5%BC%95%E5%81%9A%E4%B8%80%E4%BA%9B%E8%BF%90%E7%AE%97%E6%93%8D%E4%BD%9C\"><span class=\"toc-text\">不对索引做一些运算操作</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E7%B4%A2%E5%BC%95%E4%B8%8D%E8%A6%81%E6%94%BE%E5%9C%A8%E8%8C%83%E5%9B%B4%E6%9F%A5%E8%AF%A2%E5%8F%B3%E4%BE%A7\"><span class=\"toc-text\">索引不要放在范围查询右侧</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#%E5%87%8F%E5%B0%91select\"><span class=\"toc-text\">减少select *</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#like-%E6%B2%A1%E7%94%A8%E5%88%B0%E7%B4%A2%E5%BC%95\"><span class=\"toc-text\">like 没用到索引</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#order-by\"><span class=\"toc-text\">order by</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#mysql-%E4%B8%AD%E7%9A%84%E5%9D%91\"><span class=\"toc-text\">mysql 中的坑</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#explain-%E6%9D%A5%E5%88%86%E6%9E%90%E6%9F%A5%E8%AF%A2%E8%AE%A1%E5%88%92\"><span class=\"toc-text\">explain 来分析查询计划</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E7%9C%8B%E8%BF%9E%E6%8E%A5%E6%95%B0\"><span class=\"toc-text\">查看连接数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5\"><span class=\"toc-text\">参考链接</span></a></li></ol>","author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"前端基础-js表达式","uid":"5920bc0e327b10c465c146c4b5f81619","slug":"2022-10-19js表达式","date":"2022-10-19T10:00:07.000Z","updated":"2023-05-15T13:17:32.963Z","comments":true,"path":"api/articles/2022-10-19js表达式.json","keywords":null,"cover":[],"text":"1. 逗号操作符, 没你想象的那么简单对它的每个操作数求值（从左到右），并返回最后一个操作数的值。 let x &#x3D; 1; x &#x3D; (x++, x); &#x2F;&#x2F; x++ 等价于 x+&#x3D;1 console.log(x); &#x2F;&#...","link":"","photos":[],"count_time":{"symbolsCount":"9.8k","symbolsTime":"9 mins."},"categories":[{"name":"前端基础","slug":"前端基础","count":53,"path":"api/categories/前端基础.json"}],"tags":[{"name":"前端基础","slug":"前端基础","count":55,"path":"api/tags/前端基础.json"},{"name":"chatGPT2021","slug":"chatGPT2021","count":12,"path":"api/tags/chatGPT2021.json"}],"author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}},"next_post":{"title":"Web api history","uid":"ef92ce33f7630db6de42bc09728ad0ae","slug":"2022-10-18history","date":"2022-10-18T08:36:43.000Z","updated":"2022-11-21T13:08:33.121Z","comments":true,"path":"api/articles/2022-10-18history.json","keywords":null,"cover":[],"text":"historyhttps://developer.mozilla.org/en-US/docs/Web/API/History replaceState 不刷新页面更改页面参数不刷新页面 用来存 hash 用来存页面查询参数 &#x2F;#&#x2F;post&#x2F;2022...","link":"","photos":[],"count_time":{"symbolsCount":325,"symbolsTime":"1 mins."},"categories":[{"name":"前端基础","slug":"前端基础","count":53,"path":"api/categories/前端基础.json"}],"tags":[{"name":"前端基础","slug":"前端基础","count":55,"path":"api/tags/前端基础.json"}],"author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}}}