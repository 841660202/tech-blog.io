{"title":"Go 语言基础","uid":"63c74d723b51bf41f59e206371fbafb4","slug":"2022-12-12go-interface","date":"2022-12-12T07:13:23.000Z","updated":"2022-12-22T13:36:21.802Z","comments":true,"path":"api/articles/2022-12-12go-interface.json","keywords":null,"cover":"http://t-blog-images.aijs.top/img/202212211225570.webp","content":"<h2 id=\"李文周的博客\"><a href=\"#李文周的博客\" class=\"headerlink\" title=\"李文周的博客\"></a>李文周的博客</h2><p><a href=\"https://www.liwenzhou.com/posts/Go/golang-menu\" target=\"_blank\">【置顶】Go 语言学习之路&#x2F;Go 语言教程</a></p>\n<ul>\n<li>iota</li>\n<li>短变量声明</li>\n<li>匿名变量</li>\n</ul>\n<p><a href=\"https://www.liwenzhou.com/posts/Go/array\" target=\"_blank\">Go 语言基础之数组</a></p>\n<p><a href=\"https://www.liwenzhou.com/posts/Go/control-flow\" target=\"_blank\">Go 语言基础之流程控制</a></p>\n<p><a href=\"https://www.liwenzhou.com/posts/Go/datatype\" target=\"_blank\">Go 语言基础之基本数据类型</a></p>\n<p><a href=\"https://www.liwenzhou.com/posts/Go/function\" target=\"_blank\">Go 语言基础之函数</a></p>\n<p><a href=\"https://www.liwenzhou.com/posts/Go/go-time\" target=\"_blank\">Go 语言基础之 time 包</a></p>\n<p><a href=\"https://www.liwenzhou.com/posts/Go/concurrence\" target=\"_blank\">Go 语言基础之并发</a></p>\n<p><a href=\"https://www.liwenzhou.com/posts/Go/http\" target=\"_blank\">Go 语言基础之 net&#x2F;http</a></p>\n<p><a href=\"https://www.liwenzhou.com/posts/Go/interface\" target=\"_blank\">Go 语言基础之接口</a></p>\n<ul>\n<li>为什么需要接口以及接口的特点?</li>\n<li>使用接口类型说明相比于它是什么更关心它能做什么</li>\n<li>接口就是规定了一个需要实现的方法列表,一个类型只要实现了接口中规定的<code>所有方法</code>,就称它实现了这个接口</li>\n<li>Go 语言中使用隐式声明的方式实现接口。只要一个类型实现了接口中规定的所有方法，那么它就实现了这个接口。</li>\n<li>实现了接口又有什么用呢？一个接口类型的变量能够存储所有实现了该接口的类型变量</li>\n<li>只有当有两个或两个以上的具体类型必须以相同的方式进行处理时才需要定义接口。切记不要为了使用接口类型而增加不必要的抽象，导致不必要的运行时损耗</li>\n</ul>\n<p><a href=\"https://www.liwenzhou.com/posts/Go/map\" target=\"_blank\">Go 语言基础之 map</a></p>\n<p><a href=\"https://www.liwenzhou.com/posts/Go/operators\" target=\"_blank\">Go 语言基础之运算符</a></p>\n<h2 id=\"爬取脚本\"><a href=\"#爬取脚本\" class=\"headerlink\" title=\"爬取脚本\"></a>爬取脚本</h2><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">var domList &#x3D; document.getElementById(&quot;s-u&quot;).children;\ngetalink(domList);\nfunction getalink(_domlist) &#123;\n  var data &#x3D; &quot;&quot;;\n\n  Array.from(_domlist).forEach((li) &#x3D;&gt; &#123;\n    var a &#x3D; li.children[0];\n    var href &#x3D; a.href;\n    var title &#x3D; a.innerText;\n    var astr &#x3D; &#96;&lt;a href&#x3D;&quot;$&#123;href&#125;&quot; target&#x3D;&quot;_blank&quot;&gt;$&#123;title&#125;&lt;&#x2F;a&gt; \\n\\n&#96;;\n    data +&#x3D; astr;\n  &#125;);\n  copy(data); &#x2F;&#x2F;控制台直接拷贝到剪切板\n&#125;</code></pre>\n\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><p><a href=\"https://www.liwenzhou.com/posts/Go/interface/\" target=\"_blank\" >Go 语言基础之接口<br></a></p>\n<h2 id=\"goto-跳转到指定标签\"><a href=\"#goto-跳转到指定标签\" class=\"headerlink\" title=\"goto(跳转到指定标签)\"></a>goto(跳转到指定标签)</h2><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">&#x2F;&#x2F; 两个break跳出两个循环\nfunc gotoDemo1() &#123;\n\tvar breakFlag bool\n\tfor i :&#x3D; 0; i &lt; 10; i++ &#123;\n\t\tfor j :&#x3D; 0; j &lt; 10; j++ &#123;\n\t\t\tif j &#x3D;&#x3D; 2 &#123;\n\t\t\t\t&#x2F;&#x2F; 设置退出标签\n\t\t\t\tbreakFlag &#x3D; true\n\t\t\t\tbreak\n\t\t\t&#125;\n\t\t\tfmt.Printf(&quot;%v-%v\\n&quot;, i, j)\n\t\t&#125;\n\t\t&#x2F;&#x2F; 外层for循环判断\n\t\tif breakFlag &#123;\n\t\t\tbreak\n\t\t&#125;\n\t&#125;\n&#125;\n\n&#x2F;&#x2F; 标签可以简化书写\nfunc gotoDemo2() &#123;\n\tfor i :&#x3D; 0; i &lt; 10; i++ &#123;\n\t\tfor j :&#x3D; 0; j &lt; 10; j++ &#123;\n\t\t\tif j &#x3D;&#x3D; 2 &#123;\n\t\t\t\t&#x2F;&#x2F; 设置退出标签\n\t\t\t\tgoto breakTag\n\t\t\t&#125;\n\t\t\tfmt.Printf(&quot;%v-%v\\n&quot;, i, j)\n\t\t&#125;\n\t&#125;\n\treturn\n\t&#x2F;&#x2F; 标签\nbreakTag:\n\tfmt.Println(&quot;结束for循环&quot;)\n&#125;\n\n&#x2F;&#x2F; 0-0\n&#x2F;&#x2F; 0-1\n&#x2F;&#x2F; 结束for循环\n</code></pre>\n\n<h2 id=\"continue-到-标签\"><a href=\"#continue-到-标签\" class=\"headerlink\" title=\"continue 到 标签\"></a>continue 到 标签</h2><pre class=\"line-numbers language-go\" data-language=\"go\"><code class=\"language-go\">func continueDemo() &#123;\nforloop1:\n\tfor i :&#x3D; 0; i &lt; 5; i++ &#123;\n\t\t&#x2F;&#x2F; forloop2:\n\t\tfor j :&#x3D; 0; j &lt; 5; j++ &#123;\n\t\t\tif i &#x3D;&#x3D; 2 &amp;&amp; j &#x3D;&#x3D; 2 &#123;\n\t\t\t\tcontinue forloop1\n\t\t\t&#125;\n\t\t\tfmt.Printf(&quot;%v-%v\\n&quot;, i, j)\n\t\t&#125;\n\t&#125;\n&#125;</code></pre>\n\n<img src=\"http://t-blog-images.aijs.top/img/202212121752627.webp\" style=\"width:500px;max-width:100%\" />\n\n<h2 id=\"golang-数组增删改查\"><a href=\"#golang-数组增删改查\" class=\"headerlink\" title=\"golang 数组增删改查\"></a>golang 数组增删改查</h2><p><a href=\"https://blog.csdn.net/m0_56444183/article/details/123705064\" target=\"_blank\" >Golang 切片的使用(增删改查)</a></p>\n<h2 id=\"golang-Marshal-x2F-Unmarshal\"><a href=\"#golang-Marshal-x2F-Unmarshal\" class=\"headerlink\" title=\"golang Marshal&#x2F;Unmarshal\"></a>golang Marshal&#x2F;Unmarshal</h2><p>“因为 marshal 有组织编排之意，所以可以翻译 为：“编排”与“反编排”，就是序列化与反序列化的意思。”</p>\n","text":"李文周的博客【置顶】Go 语言学习之路&#x2F;Go 语言教程 iota 短变量声明 匿名变量 Go 语言基础之数组 Go 语言基础之流程控制 Go 语言基础之基本数据类型 Go 语言基础之函数 Go 语言基础之 time 包 Go 语言基础之并发 Go 语言基础之 net&#...","link":"","photos":[],"count_time":{"symbolsCount":"2.2k","symbolsTime":"2 mins."},"categories":[{"name":"Go","slug":"Go","count":19,"path":"api/categories/Go.json"}],"tags":[{"name":"Go","slug":"Go","count":19,"path":"api/tags/Go.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9D%8E%E6%96%87%E5%91%A8%E7%9A%84%E5%8D%9A%E5%AE%A2\"><span class=\"toc-text\">李文周的博客</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E7%88%AC%E5%8F%96%E8%84%9A%E6%9C%AC\"><span class=\"toc-text\">爬取脚本</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%8F%82%E8%80%83%E9%93%BE%E6%8E%A5\"><span class=\"toc-text\">参考链接</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#goto-%E8%B7%B3%E8%BD%AC%E5%88%B0%E6%8C%87%E5%AE%9A%E6%A0%87%E7%AD%BE\"><span class=\"toc-text\">goto(跳转到指定标签)</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#continue-%E5%88%B0-%E6%A0%87%E7%AD%BE\"><span class=\"toc-text\">continue 到 标签</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#golang-%E6%95%B0%E7%BB%84%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5\"><span class=\"toc-text\">golang 数组增删改查</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#golang-Marshal-x2F-Unmarshal\"><span class=\"toc-text\">golang Marshal&#x2F;Unmarshal</span></a></li></ol>","author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"Goalng lumberjack","uid":"11691b6cc8ffa47c60878c0bfab16d9f","slug":"2022-12-14go-lumberjack","date":"2022-12-14T02:01:04.000Z","updated":"2022-12-22T13:36:21.802Z","comments":true,"path":"api/articles/2022-12-14go-lumberjack.json","keywords":null,"cover":"http://t-blog-images.aijs.top/img/202212211225570.webp","text":"lumberjack译为： 伐木工 Lumberjack is a Go package for writing logs to rolling files. Lumberjack 是一个用于将日志写入滚动文件的 Go 包。 日志切割，有哪些需求 写入路径（Filename） 什...","link":"","photos":[],"count_time":{"symbolsCount":276,"symbolsTime":"1 mins."},"categories":[{"name":"Go","slug":"Go","count":19,"path":"api/categories/Go.json"}],"tags":[{"name":"Go","slug":"Go","count":19,"path":"api/tags/Go.json"}],"author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}},"next_post":{"title":"go yaml 配置文件","uid":"4a6cf6bee94617c665b74d794eabdd69","slug":"2022-12-11go-yaml","date":"2022-12-11T12:29:12.000Z","updated":"2022-12-22T13:36:21.801Z","comments":true,"path":"api/articles/2022-12-11go-yaml.json","keywords":null,"cover":"http://t-blog-images.aijs.top/img/202212211225570.webp","text":"项目gin-vue-admin 这个没看懂 gin-mall 见 参考链接Golang 程序读取 yaml 配置文件 gopkg.in&#x2F;yaml.v2 ","link":"","photos":[],"count_time":{"symbolsCount":81,"symbolsTime":"1 mins."},"categories":[{"name":"Go","slug":"Go","count":19,"path":"api/categories/Go.json"}],"tags":[{"name":"Go","slug":"Go","count":19,"path":"api/tags/Go.json"}],"author":{"name":"举手摘月亮","slug":"blog-author","avatar":"http://t-blog-images.aijs.top/img/202303171118970.webp","link":"/","description":"<div><p>眼中有光，心中有梦，脚下有路</p><div>","socials":{"github":"https://github.com/841660202","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/web_longboss","juejin":"","customs":{}}}}}